

Microchip Technology PIC18 LITE Macro Assembler V1.38 build -256452561 
                                                                                               Sun Aug 30 22:25:52 2020

Microchip Technology Omniscient Code Generator v1.38 (Free mode) build 201607010351
     1                           	processor	18F2550
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	lm
     5                           	psect	nvCOMRAM,global,class=COMRAM,space=1,delta=1
     6                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1
     7                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     8                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1
     9                           	psect	text0,global,reloc=2,class=CODE,delta=1
    10                           	psect	text1,global,reloc=2,class=CODE,delta=1
    11                           	psect	text2,global,reloc=2,class=CODE,delta=1
    12                           	psect	text3,global,reloc=2,class=CODE,delta=1
    13                           	psect	text4,global,reloc=2,class=CODE,delta=1
    14                           	psect	text5,global,reloc=2,class=CODE,delta=1
    15                           	psect	text6,global,reloc=2,class=CODE,delta=1
    16                           	psect	text7,global,reloc=2,class=CODE,delta=1
    17                           	psect	text8,global,reloc=2,class=CODE,delta=1
    18                           	psect	text9,global,reloc=2,class=CODE,delta=1
    19                           	psect	text10,global,reloc=2,class=CODE,delta=1
    20                           	psect	text11,global,reloc=2,class=CODE,delta=1
    21                           	psect	text12,global,reloc=2,class=CODE,delta=1
    22                           	psect	text13,global,reloc=2,class=CODE,delta=1
    23                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    24                           	psect	intcode_body,global,reloc=2,class=CODE,delta=1
    25                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1
    26                           	psect	rparam,global,class=COMRAM,space=1,delta=1
    27                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    28  0000                     
    29                           	psect	nvCOMRAM
    30  000033                     __pnvCOMRAM:
    31                           	opt stack 0
    32  000033                     _valorADC:
    33                           	opt stack 0
    34  000033                     	ds	2
    35  0000                     _ADRES	set	4035
    36  0000                     _ADCON0bits	set	4034
    37  0000                     _ADCON1bits	set	4033
    38  0000                     _ADCON2bits	set	4032
    39  0000                     _INTCON	set	4082
    40  0000                     _OSCCON	set	4051
    41  0000                     _T0CON	set	4053
    42  0000                     _TMR0H	set	4055
    43  0000                     _TMR0L	set	4054
    44  0000                     _TRISA	set	3986
    45  0000                     _TRISC	set	3988
    46  0000                     _LATB2	set	31826
    47  0000                     _LATB3	set	31827
    48  0000                     _LATB4	set	31828
    49  0000                     _LATB5	set	31829
    50  0000                     _LATB6	set	31830
    51  0000                     _LATB7	set	31831
    52  0000                     _LATC7	set	31839
    53  0000                     _TMR0IF	set	32658
    54  0000                     _TRISB2	set	31898
    55  0000                     _TRISB3	set	31899
    56  0000                     _TRISB4	set	31900
    57  0000                     _TRISB5	set	31901
    58  0000                     _TRISB6	set	31902
    59  0000                     _TRISB7	set	31903
    60                           
    61                           	psect	smallconst
    62  000800                     __psmallconst:
    63                           	opt stack 0
    64  000800  00                 	db	0
    65  000801                     STR_1:
    66  000801  56                 	db	86	;'V'
    67  000802  61                 	db	97	;'a'
    68  000803  6C                 	db	108	;'l'
    69  000804  6F                 	db	111	;'o'
    70  000805  72                 	db	114	;'r'
    71  000806  20                 	db	32
    72  000807  54                 	db	84	;'T'
    73  000808  69                 	db	105	;'i'
    74  000809  6D                 	db	109	;'m'
    75  00080A  65                 	db	101	;'e'
    76  00080B  72                 	db	114	;'r'
    77  00080C  20                 	db	32
    78  00080D  30                 	db	48	;'0'
    79  00080E  00                 	db	0
    80                           
    81                           ; #config settings
    82  00080F  00                 	db	0	; dummy byte at the end
    83  0000                     
    84                           	psect	cinit
    85  000E56                     __pcinit:
    86                           	opt stack 0
    87  000E56                     start_initialization:
    88                           	opt stack 0
    89  000E56                     __initialization:
    90                           	opt stack 0
    91  000E56                     end_of_initialization:
    92                           	opt stack 0
    93  000E56                     __end_of__initialization:
    94                           	opt stack 0
    95  000E56  9035               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
    96  000E58  9235               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
    97  000E5A  0E00               	movlw	low (__Lmediumconst shr (0+16))
    98  000E5C  6EF8               	movwf	tblptru,c
    99  000E5E  0100               	movlb	0
   100  000E60  EF08  F004         	goto	_main	;jump to C main() function
   101                           tblptru	equ	0xFF8
   102                           
   103                           	psect	cstackCOMRAM
   104  000001                     __pcstackCOMRAM:
   105                           	opt stack 0
   106  000001                     ??_TripaSeca:
   107  000001                     
   108                           ; 1 bytes @ 0x0
   109  000001                     	ds	14
   110  00000F                     ?_leitura_ADC:
   111                           	opt stack 0
   112  00000F                     ?___awdiv:
   113                           	opt stack 0
   114  00000F                     ?___lwmod:
   115                           	opt stack 0
   116  00000F                     ADC_Inicializa@canal:
   117                           	opt stack 0
   118  00000F                     leitura_ADC@canal:
   119                           	opt stack 0
   120  00000F                     delay_ms@tempo:
   121                           	opt stack 0
   122  00000F                     ___awdiv@dividend:
   123                           	opt stack 0
   124  00000F                     ___lwmod@dividend:
   125                           	opt stack 0
   126                           
   127                           ; 2 bytes @ 0xE
   128  00000F                     	ds	2
   129  000011                     ??_ADC_Inicializa:
   130  000011                     ??_leitura_ADC:
   131  000011                     delay_ms@i:
   132                           	opt stack 0
   133  000011                     ___awdiv@divisor:
   134                           	opt stack 0
   135  000011                     ___lwmod@divisor:
   136                           	opt stack 0
   137                           
   138                           ; 2 bytes @ 0x10
   139  000011                     	ds	2
   140  000013                     ___awdiv@counter:
   141                           	opt stack 0
   142  000013                     ___lwmod@counter:
   143                           	opt stack 0
   144  000013                     delay_ms@j:
   145                           	opt stack 0
   146                           
   147                           ; 4 bytes @ 0x12
   148  000013                     	ds	1
   149  000014                     ?___lwdiv:
   150                           	opt stack 0
   151  000014                     ___awdiv@sign:
   152                           	opt stack 0
   153  000014                     ___lwdiv@dividend:
   154                           	opt stack 0
   155                           
   156                           ; 2 bytes @ 0x13
   157  000014                     	ds	1
   158  000015                     ___awdiv@quotient:
   159                           	opt stack 0
   160                           
   161                           ; 2 bytes @ 0x14
   162  000015                     	ds	1
   163  000016                     ___lwdiv@divisor:
   164                           	opt stack 0
   165                           
   166                           ; 2 bytes @ 0x15
   167  000016                     	ds	1
   168  000017                     ??_LCD_Command:
   169  000017                     ??_LCD_Char:
   170                           
   171                           ; 1 bytes @ 0x16
   172  000017                     	ds	1
   173  000018                     ___lwdiv@quotient:
   174                           	opt stack 0
   175                           
   176                           ; 2 bytes @ 0x17
   177  000018                     	ds	1
   178  000019                     LCD_Command@OUTS:
   179                           	opt stack 0
   180  000019                     LCD_Char@OUTS:
   181                           	opt stack 0
   182                           
   183                           ; 16 bytes @ 0x18
   184  000019                     	ds	1
   185  00001A                     ___lwdiv@counter:
   186                           	opt stack 0
   187                           
   188                           ; 1 bytes @ 0x19
   189  00001A                     	ds	15
   190  000029                     LCD_Command@cmd:
   191                           	opt stack 0
   192  000029                     LCD_Char@dat:
   193                           	opt stack 0
   194                           
   195                           ; 1 bytes @ 0x28
   196  000029                     	ds	1
   197  00002A                     LCD_Command@i:
   198                           	opt stack 0
   199  00002A                     LCD_Char@i:
   200                           	opt stack 0
   201                           
   202                           ; 2 bytes @ 0x29
   203  00002A                     	ds	2
   204  00002C                     LCD_Char_xy@pos:
   205                           	opt stack 0
   206  00002C                     LCD_String@msg:
   207                           	opt stack 0
   208                           
   209                           ; 2 bytes @ 0x2B
   210  00002C                     	ds	1
   211  00002D                     LCD_Char_xy@dat:
   212                           	opt stack 0
   213                           
   214                           ; 1 bytes @ 0x2C
   215  00002D                     	ds	1
   216  00002E                     LCD_Char_xy@row:
   217                           	opt stack 0
   218  00002E                     LCD_String_xy@pos:
   219                           	opt stack 0
   220                           
   221                           ; 1 bytes @ 0x2D
   222  00002E                     	ds	1
   223  00002F                     LCD_Char_xy@location:
   224                           	opt stack 0
   225  00002F                     LCD_String_xy@msg:
   226                           	opt stack 0
   227                           
   228                           ; 2 bytes @ 0x2E
   229  00002F                     	ds	2
   230  000031                     LCD_String_xy@row:
   231                           	opt stack 0
   232                           
   233                           ; 1 bytes @ 0x30
   234  000031                     	ds	1
   235  000032                     LCD_String_xy@location:
   236                           	opt stack 0
   237                           
   238                           ; 1 bytes @ 0x31
   239  000032                     	ds	1
   240  000033                     tblptru	equ	0xFF8
   241                           
   242                           ; 1 bytes @ 0x32
   243 ;;
   244 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   245 ;;
   246 ;; *************** function _main *****************
   247 ;; Defined at:
   248 ;;		line 53 in file "main.c"
   249 ;; Parameters:    Size  Location     Type
   250 ;;		None
   251 ;; Auto vars:     Size  Location     Type
   252 ;;		None
   253 ;; Return value:  Size  Location     Type
   254 ;;                  1    wreg      void 
   255 ;; Registers used:
   256 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
   257 ;; Tracked objects:
   258 ;;		On entry : 0/0
   259 ;;		On exit  : 0/0
   260 ;;		Unchanged: 0/0
   261 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   262 ;;      Params:         0       0       0       0       0       0       0       0       0
   263 ;;      Locals:         0       0       0       0       0       0       0       0       0
   264 ;;      Temps:          0       0       0       0       0       0       0       0       0
   265 ;;      Totals:         0       0       0       0       0       0       0       0       0
   266 ;;Total ram usage:        0 bytes
   267 ;; Hardware stack levels required when called:    5
   268 ;; This function calls:
   269 ;;		_LCD_Char_xy
   270 ;;		_LCD_String_xy
   271 ;;		___lwdiv
   272 ;;		___lwmod
   273 ;;		_leitura_ADC
   274 ;;		_setup
   275 ;; This function is called by:
   276 ;;		Startup code after reset
   277 ;; This function uses a non-reentrant model
   278 ;;
   279                           
   280                           	psect	text0
   281  000810                     __ptext0:
   282                           	opt stack 0
   283  000810                     _main:
   284                           	opt stack 26
   285                           
   286                           ;main.c: 55: setup();
   287                           
   288                           ;incstack = 0
   289  000810  EC26  F006         	call	_setup	;wreg free
   290  000814                     l1254:
   291                           
   292                           ;main.c: 59: valorADC = leitura_ADC(0)*64;
   293  000814  0E00               	movlw	0
   294  000816  6E10               	movwf	leitura_ADC@canal+1,c
   295  000818  0E00               	movlw	0
   296  00081A  6E0F               	movwf	leitura_ADC@canal,c
   297  00081C  EC19  F007         	call	_leitura_ADC	;wreg free
   298  000820  0E06               	movlw	6
   299  000822                     u1135:
   300  000822  90D8               	bcf	status,0,c
   301  000824  360F               	rlcf	?_leitura_ADC,f,c
   302  000826  3610               	rlcf	?_leitura_ADC+1,f,c
   303  000828  2EE8               	decfsz	wreg,f,c
   304  00082A  D7FB               	goto	u1135
   305  00082C  C00F  F033         	movff	?_leitura_ADC,_valorADC
   306  000830  C010  F034         	movff	?_leitura_ADC+1,_valorADC+1
   307                           
   308                           ;main.c: 60: TMR0H = (valorADC) >> 8;
   309  000834  5034               	movf	_valorADC+1,w,c
   310  000836  6ED7               	movwf	4055,c	;volatile
   311                           
   312                           ;main.c: 61: TMR0L = (valorADC & 0x00FF);
   313  000838  C033  FFD6         	movff	_valorADC,4054	;volatile
   314                           
   315                           ;main.c: 63: LCD_String_xy(1, 2, "Valor Timer 0");
   316  00083C  0E02               	movlw	2
   317  00083E  6E2E               	movwf	LCD_String_xy@pos,c
   318  000840  0E01               	movlw	low STR_1
   319  000842  6E2F               	movwf	LCD_String_xy@msg,c
   320  000844  0E08               	movlw	high STR_1
   321  000846  6E30               	movwf	LCD_String_xy@msg+1,c
   322  000848  0E01               	movlw	1
   323  00084A  EC72  F006         	call	_LCD_String_xy
   324                           
   325                           ;main.c: 64: LCD_Char_xy(2, 6, valorADC/10000 + 48);
   326  00084E  0E06               	movlw	6
   327  000850  6E2C               	movwf	LCD_Char_xy@pos,c
   328  000852  C033  F014         	movff	_valorADC,___lwdiv@dividend
   329  000856  C034  F015         	movff	_valorADC+1,___lwdiv@dividend+1
   330  00085A  0E27               	movlw	39
   331  00085C  6E17               	movwf	___lwdiv@divisor+1,c
   332  00085E  0E10               	movlw	16
   333  000860  6E16               	movwf	___lwdiv@divisor,c
   334  000862  ECFD  F005         	call	___lwdiv	;wreg free
   335  000866  5014               	movf	?___lwdiv,w,c
   336  000868  0F30               	addlw	48
   337  00086A  6E2D               	movwf	LCD_Char_xy@dat,c
   338  00086C  0E02               	movlw	2
   339  00086E  ECB5  F006         	call	_LCD_Char_xy
   340                           
   341                           ;main.c: 65: LCD_Char_xy(2, 7, (valorADC%10000)/1000 + 48);
   342  000872  0E07               	movlw	7
   343  000874  6E2C               	movwf	LCD_Char_xy@pos,c
   344  000876  0E27               	movlw	39
   345  000878  6E12               	movwf	___lwmod@divisor+1,c
   346  00087A  0E10               	movlw	16
   347  00087C  6E11               	movwf	___lwmod@divisor,c
   348  00087E  C033  F00F         	movff	_valorADC,___lwmod@dividend
   349  000882  C034  F010         	movff	_valorADC+1,___lwmod@dividend+1
   350  000886  EC94  F006         	call	___lwmod	;wreg free
   351  00088A  C00F  F014         	movff	?___lwmod,___lwdiv@dividend
   352  00088E  C010  F015         	movff	?___lwmod+1,___lwdiv@dividend+1
   353  000892  0E03               	movlw	3
   354  000894  6E17               	movwf	___lwdiv@divisor+1,c
   355  000896  0EE8               	movlw	232
   356  000898  6E16               	movwf	___lwdiv@divisor,c
   357  00089A  ECFD  F005         	call	___lwdiv	;wreg free
   358  00089E  5014               	movf	?___lwdiv,w,c
   359  0008A0  0F30               	addlw	48
   360  0008A2  6E2D               	movwf	LCD_Char_xy@dat,c
   361  0008A4  0E02               	movlw	2
   362  0008A6  ECB5  F006         	call	_LCD_Char_xy
   363                           
   364                           ;main.c: 66: LCD_Char_xy(2, 8, (valorADC%1000)/100 + 48);
   365  0008AA  0E08               	movlw	8
   366  0008AC  6E2C               	movwf	LCD_Char_xy@pos,c
   367  0008AE  0E03               	movlw	3
   368  0008B0  6E12               	movwf	___lwmod@divisor+1,c
   369  0008B2  0EE8               	movlw	232
   370  0008B4  6E11               	movwf	___lwmod@divisor,c
   371  0008B6  C033  F00F         	movff	_valorADC,___lwmod@dividend
   372  0008BA  C034  F010         	movff	_valorADC+1,___lwmod@dividend+1
   373  0008BE  EC94  F006         	call	___lwmod	;wreg free
   374  0008C2  C00F  F014         	movff	?___lwmod,___lwdiv@dividend
   375  0008C6  C010  F015         	movff	?___lwmod+1,___lwdiv@dividend+1
   376  0008CA  0E00               	movlw	0
   377  0008CC  6E17               	movwf	___lwdiv@divisor+1,c
   378  0008CE  0E64               	movlw	100
   379  0008D0  6E16               	movwf	___lwdiv@divisor,c
   380  0008D2  ECFD  F005         	call	___lwdiv	;wreg free
   381  0008D6  5014               	movf	?___lwdiv,w,c
   382  0008D8  0F30               	addlw	48
   383  0008DA  6E2D               	movwf	LCD_Char_xy@dat,c
   384  0008DC  0E02               	movlw	2
   385  0008DE  ECB5  F006         	call	_LCD_Char_xy
   386                           
   387                           ;main.c: 67: LCD_Char_xy(2, 9, (valorADC%100)/10 + 48);
   388  0008E2  0E09               	movlw	9
   389  0008E4  6E2C               	movwf	LCD_Char_xy@pos,c
   390  0008E6  0E00               	movlw	0
   391  0008E8  6E12               	movwf	___lwmod@divisor+1,c
   392  0008EA  0E64               	movlw	100
   393  0008EC  6E11               	movwf	___lwmod@divisor,c
   394  0008EE  C033  F00F         	movff	_valorADC,___lwmod@dividend
   395  0008F2  C034  F010         	movff	_valorADC+1,___lwmod@dividend+1
   396  0008F6  EC94  F006         	call	___lwmod	;wreg free
   397  0008FA  C00F  F014         	movff	?___lwmod,___lwdiv@dividend
   398  0008FE  C010  F015         	movff	?___lwmod+1,___lwdiv@dividend+1
   399  000902  0E00               	movlw	0
   400  000904  6E17               	movwf	___lwdiv@divisor+1,c
   401  000906  0E0A               	movlw	10
   402  000908  6E16               	movwf	___lwdiv@divisor,c
   403  00090A  ECFD  F005         	call	___lwdiv	;wreg free
   404  00090E  5014               	movf	?___lwdiv,w,c
   405  000910  0F30               	addlw	48
   406  000912  6E2D               	movwf	LCD_Char_xy@dat,c
   407  000914  0E02               	movlw	2
   408  000916  ECB5  F006         	call	_LCD_Char_xy
   409                           
   410                           ;main.c: 68: LCD_Char_xy(2, 10, (valorADC%10) + 48);
   411  00091A  0E0A               	movlw	10
   412  00091C  6E2C               	movwf	LCD_Char_xy@pos,c
   413  00091E  C033  F00F         	movff	_valorADC,___lwmod@dividend
   414  000922  C034  F010         	movff	_valorADC+1,___lwmod@dividend+1
   415  000926  0E00               	movlw	0
   416  000928  6E12               	movwf	___lwmod@divisor+1,c
   417  00092A  0E0A               	movlw	10
   418  00092C  6E11               	movwf	___lwmod@divisor,c
   419  00092E  EC94  F006         	call	___lwmod	;wreg free
   420  000932  500F               	movf	?___lwmod,w,c
   421  000934  0F30               	addlw	48
   422  000936  6E2D               	movwf	LCD_Char_xy@dat,c
   423  000938  0E02               	movlw	2
   424  00093A  ECB5  F006         	call	_LCD_Char_xy
   425  00093E  D76A               	goto	l1254
   426  000940                     __end_of_main:
   427                           	opt stack 0
   428                           tblptru	equ	0xFF8
   429                           wreg	equ	0xFE8
   430                           status	equ	0xFD8
   431                           
   432 ;; *************** function _setup *****************
   433 ;; Defined at:
   434 ;;		line 20 in file "main.c"
   435 ;; Parameters:    Size  Location     Type
   436 ;;		None
   437 ;; Auto vars:     Size  Location     Type
   438 ;;		None
   439 ;; Return value:  Size  Location     Type
   440 ;;                  1    wreg      void 
   441 ;; Registers used:
   442 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
   443 ;; Tracked objects:
   444 ;;		On entry : 0/0
   445 ;;		On exit  : 0/0
   446 ;;		Unchanged: 0/0
   447 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   448 ;;      Params:         0       0       0       0       0       0       0       0       0
   449 ;;      Locals:         0       0       0       0       0       0       0       0       0
   450 ;;      Temps:          0       0       0       0       0       0       0       0       0
   451 ;;      Totals:         0       0       0       0       0       0       0       0       0
   452 ;;Total ram usage:        0 bytes
   453 ;; Hardware stack levels used:    1
   454 ;; Hardware stack levels required when called:    4
   455 ;; This function calls:
   456 ;;		_ADC_Inicializa
   457 ;;		_LCD_Init
   458 ;;		_leitura_ADC
   459 ;; This function is called by:
   460 ;;		_main
   461 ;; This function uses a non-reentrant model
   462 ;;
   463                           
   464                           	psect	text1
   465  000C4C                     __ptext1:
   466                           	opt stack 0
   467  000C4C                     _setup:
   468                           	opt stack 26
   469                           
   470                           ;main.c: 22: OSCCON = 0b11111110;
   471                           
   472                           ;incstack = 0
   473  000C4C  0EFE               	movlw	254
   474  000C4E  6ED3               	movwf	4051,c	;volatile
   475                           
   476                           ;main.c: 23: INTCON = 0xE0;
   477  000C50  0EE0               	movlw	224
   478  000C52  6EF2               	movwf	intcon,c	;volatile
   479                           
   480                           ;main.c: 24: T0CON = 0xA0;
   481  000C54  0EA0               	movlw	160
   482  000C56  6ED5               	movwf	4053,c	;volatile
   483                           
   484                           ;main.c: 25: TRISA = 0xFF;
   485  000C58  6892               	setf	3986,c	;volatile
   486                           
   487                           ;main.c: 26: TRISC = 0X7F;
   488  000C5A  0E7F               	movlw	127
   489  000C5C  6E94               	movwf	3988,c	;volatile
   490                           
   491                           ;main.c: 27: LATC7 = 0x00;
   492  000C5E  9E8B               	bcf	3979,7,c	;volatile
   493                           
   494                           ;main.c: 29: ADC_Inicializa(0);
   495  000C60  0E00               	movlw	0
   496  000C62  6E10               	movwf	ADC_Inicializa@canal+1,c
   497  000C64  0E00               	movlw	0
   498  000C66  6E0F               	movwf	ADC_Inicializa@canal,c
   499  000C68  EC05  F007         	call	_ADC_Inicializa	;wreg free
   500                           
   501                           ;main.c: 30: valorADC = leitura_ADC(0)*64;
   502  000C6C  0E00               	movlw	0
   503  000C6E  6E10               	movwf	leitura_ADC@canal+1,c
   504  000C70  0E00               	movlw	0
   505  000C72  6E0F               	movwf	leitura_ADC@canal,c
   506  000C74  EC19  F007         	call	_leitura_ADC	;wreg free
   507  000C78  0E06               	movlw	6
   508  000C7A                     u1065:
   509  000C7A  90D8               	bcf	status,0,c
   510  000C7C  360F               	rlcf	?_leitura_ADC,f,c
   511  000C7E  3610               	rlcf	?_leitura_ADC+1,f,c
   512  000C80  2EE8               	decfsz	wreg,f,c
   513  000C82  D7FB               	goto	u1065
   514  000C84  C00F  F033         	movff	?_leitura_ADC,_valorADC
   515  000C88  C010  F034         	movff	?_leitura_ADC+1,_valorADC+1
   516                           
   517                           ;main.c: 31: TMR0H = (valorADC) >> 8;
   518  000C8C  5034               	movf	_valorADC+1,w,c
   519  000C8E  6ED7               	movwf	4055,c	;volatile
   520                           
   521                           ;main.c: 32: TMR0L = (valorADC & 0x00FF);
   522  000C90  C033  FFD6         	movff	_valorADC,4054	;volatile
   523                           
   524                           ;main.c: 34: LCD_Init();
   525  000C94  ECD4  F006         	call	_LCD_Init	;wreg free
   526  000C98  0012               	return		;funcret
   527  000C9A                     __end_of_setup:
   528                           	opt stack 0
   529                           tblptru	equ	0xFF8
   530                           intcon	equ	0xFF2
   531                           wreg	equ	0xFE8
   532                           status	equ	0xFD8
   533                           
   534 ;; *************** function _leitura_ADC *****************
   535 ;; Defined at:
   536 ;;		line 88 in file "PICLibs.h"
   537 ;; Parameters:    Size  Location     Type
   538 ;;  canal           2   14[COMRAM] unsigned short 
   539 ;; Auto vars:     Size  Location     Type
   540 ;;		None
   541 ;; Return value:  Size  Location     Type
   542 ;;                  2   14[COMRAM] unsigned int 
   543 ;; Registers used:
   544 ;;		wreg, status,2, status,0
   545 ;; Tracked objects:
   546 ;;		On entry : 0/0
   547 ;;		On exit  : 0/0
   548 ;;		Unchanged: 0/0
   549 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   550 ;;      Params:         2       0       0       0       0       0       0       0       0
   551 ;;      Locals:         0       0       0       0       0       0       0       0       0
   552 ;;      Temps:          1       0       0       0       0       0       0       0       0
   553 ;;      Totals:         3       0       0       0       0       0       0       0       0
   554 ;;Total ram usage:        3 bytes
   555 ;; Hardware stack levels used:    1
   556 ;; Hardware stack levels required when called:    1
   557 ;; This function calls:
   558 ;;		Nothing
   559 ;; This function is called by:
   560 ;;		_setup
   561 ;;		_main
   562 ;; This function uses a non-reentrant model
   563 ;;
   564                           
   565                           	psect	text2
   566  000E32                     __ptext2:
   567                           	opt stack 0
   568  000E32                     _leitura_ADC:
   569                           	opt stack 28
   570                           
   571                           ;PICLibs.h: 90: ADCON0bits.CHS = canal;
   572                           
   573                           ;incstack = 0
   574  000E32  C00F  F011         	movff	leitura_ADC@canal,??_leitura_ADC
   575  000E36  4611               	rlncf	??_leitura_ADC,f,c
   576  000E38  4611               	rlncf	??_leitura_ADC,f,c
   577  000E3A  50C2               	movf	4034,w,c	;volatile
   578  000E3C  1811               	xorwf	??_leitura_ADC,w,c
   579  000E3E  0BC3               	andlw	-61
   580  000E40  1811               	xorwf	??_leitura_ADC,w,c
   581  000E42  6EC2               	movwf	4034,c	;volatile
   582                           
   583                           ;PICLibs.h: 91: ADCON0bits.ADON = 1;
   584  000E44  80C2               	bsf	4034,0,c	;volatile
   585                           
   586                           ;PICLibs.h: 92: ADCON0bits.GODONE = 1;
   587  000E46  82C2               	bsf	4034,1,c	;volatile
   588  000E48                     l58:
   589  000E48  B2C2               	btfsc	4034,1,c	;volatile
   590  000E4A  D7FE               	goto	l58
   591                           
   592                           ;PICLibs.h: 94: return (ADRES);
   593  000E4C  CFC3 F00F          	movff	4035,?_leitura_ADC	;volatile
   594  000E50  CFC4 F010          	movff	4036,?_leitura_ADC+1	;volatile
   595  000E54  0012               	return		;funcret
   596  000E56                     __end_of_leitura_ADC:
   597                           	opt stack 0
   598                           tblptru	equ	0xFF8
   599                           intcon	equ	0xFF2
   600                           wreg	equ	0xFE8
   601                           status	equ	0xFD8
   602                           
   603 ;; *************** function _LCD_Init *****************
   604 ;; Defined at:
   605 ;;		line 150 in file "PICLibs.h"
   606 ;; Parameters:    Size  Location     Type
   607 ;;		None
   608 ;; Auto vars:     Size  Location     Type
   609 ;;		None
   610 ;; Return value:  Size  Location     Type
   611 ;;                  1    wreg      void 
   612 ;; Registers used:
   613 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
   614 ;; Tracked objects:
   615 ;;		On entry : 0/0
   616 ;;		On exit  : 0/0
   617 ;;		Unchanged: 0/0
   618 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   619 ;;      Params:         0       0       0       0       0       0       0       0       0
   620 ;;      Locals:         0       0       0       0       0       0       0       0       0
   621 ;;      Temps:          0       0       0       0       0       0       0       0       0
   622 ;;      Totals:         0       0       0       0       0       0       0       0       0
   623 ;;Total ram usage:        0 bytes
   624 ;; Hardware stack levels used:    1
   625 ;; Hardware stack levels required when called:    3
   626 ;; This function calls:
   627 ;;		_LCD_Command
   628 ;;		_delay_ms
   629 ;; This function is called by:
   630 ;;		_setup
   631 ;; This function uses a non-reentrant model
   632 ;;
   633                           
   634                           	psect	text3
   635  000DA8                     __ptext3:
   636                           	opt stack 0
   637  000DA8                     _LCD_Init:
   638                           	opt stack 26
   639                           
   640                           ;PICLibs.h: 152: TRISB2 = 0;
   641                           
   642                           ;incstack = 0
   643  000DA8  9493               	bcf	3987,2,c	;volatile
   644                           
   645                           ;PICLibs.h: 153: TRISB3 = 0;
   646  000DAA  9693               	bcf	3987,3,c	;volatile
   647                           
   648                           ;PICLibs.h: 154: TRISB4 = 0;
   649  000DAC  9893               	bcf	3987,4,c	;volatile
   650                           
   651                           ;PICLibs.h: 155: TRISB5 = 0;
   652  000DAE  9A93               	bcf	3987,5,c	;volatile
   653                           
   654                           ;PICLibs.h: 156: TRISB6 = 0;
   655  000DB0  9C93               	bcf	3987,6,c	;volatile
   656                           
   657                           ;PICLibs.h: 157: TRISB7 = 0;
   658  000DB2  9E93               	bcf	3987,7,c	;volatile
   659                           
   660                           ;PICLibs.h: 159: delay_ms(40);
   661  000DB4  0E00               	movlw	0
   662  000DB6  6E10               	movwf	delay_ms@tempo+1,c
   663  000DB8  0E28               	movlw	40
   664  000DBA  6E0F               	movwf	delay_ms@tempo,c
   665  000DBC  EC4D  F006         	call	_delay_ms	;wreg free
   666                           
   667                           ;PICLibs.h: 160: LCD_Command(0x02);
   668  000DC0  0E02               	movlw	2
   669  000DC2  ECA0  F004         	call	_LCD_Command
   670                           
   671                           ;PICLibs.h: 162: LCD_Command(0x28);
   672  000DC6  0E28               	movlw	40
   673  000DC8  ECA0  F004         	call	_LCD_Command
   674                           
   675                           ;PICLibs.h: 164: LCD_Command(0x01);
   676  000DCC  0E01               	movlw	1
   677  000DCE  ECA0  F004         	call	_LCD_Command
   678                           
   679                           ;PICLibs.h: 165: LCD_Command(0x0c);
   680  000DD2  0E0C               	movlw	12
   681  000DD4  ECA0  F004         	call	_LCD_Command
   682                           
   683                           ;PICLibs.h: 166: LCD_Command(0x06);
   684  000DD8  0E06               	movlw	6
   685  000DDA  ECA0  F004         	call	_LCD_Command
   686  000DDE  0012               	return		;funcret
   687  000DE0                     __end_of_LCD_Init:
   688                           	opt stack 0
   689                           tblptru	equ	0xFF8
   690                           intcon	equ	0xFF2
   691                           wreg	equ	0xFE8
   692                           status	equ	0xFD8
   693                           
   694 ;; *************** function _ADC_Inicializa *****************
   695 ;; Defined at:
   696 ;;		line 77 in file "PICLibs.h"
   697 ;; Parameters:    Size  Location     Type
   698 ;;  canal           2   14[COMRAM] unsigned short 
   699 ;; Auto vars:     Size  Location     Type
   700 ;;		None
   701 ;; Return value:  Size  Location     Type
   702 ;;                  1    wreg      void 
   703 ;; Registers used:
   704 ;;		wreg, status,2, status,0
   705 ;; Tracked objects:
   706 ;;		On entry : 0/0
   707 ;;		On exit  : 0/0
   708 ;;		Unchanged: 0/0
   709 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   710 ;;      Params:         2       0       0       0       0       0       0       0       0
   711 ;;      Locals:         0       0       0       0       0       0       0       0       0
   712 ;;      Temps:          1       0       0       0       0       0       0       0       0
   713 ;;      Totals:         3       0       0       0       0       0       0       0       0
   714 ;;Total ram usage:        3 bytes
   715 ;; Hardware stack levels used:    1
   716 ;; Hardware stack levels required when called:    1
   717 ;; This function calls:
   718 ;;		Nothing
   719 ;; This function is called by:
   720 ;;		_setup
   721 ;; This function uses a non-reentrant model
   722 ;;
   723                           
   724                           	psect	text4
   725  000E0A                     __ptext4:
   726                           	opt stack 0
   727  000E0A                     _ADC_Inicializa:
   728                           	opt stack 28
   729                           
   730                           ;PICLibs.h: 80: ADCON1bits.VCFG0=0;
   731                           
   732                           ;incstack = 0
   733  000E0A  98C1               	bcf	4033,4,c	;volatile
   734                           
   735                           ;PICLibs.h: 81: ADCON1bits.VCFG1=0;
   736  000E0C  9AC1               	bcf	4033,5,c	;volatile
   737                           
   738                           ;PICLibs.h: 82: ADCON1bits.PCFG=(0b1111-(canal+1));
   739  000E0E  280F               	incf	ADC_Inicializa@canal,w,c
   740  000E10  0800               	sublw	0
   741  000E12  6E11               	movwf	??_ADC_Inicializa& (0+255),c
   742  000E14  0E0F               	movlw	15
   743  000E16  2611               	addwf	??_ADC_Inicializa,f,c
   744  000E18  50C1               	movf	4033,w,c	;volatile
   745  000E1A  1811               	xorwf	??_ADC_Inicializa,w,c
   746  000E1C  0BF0               	andlw	-16
   747  000E1E  1811               	xorwf	??_ADC_Inicializa,w,c
   748  000E20  6EC1               	movwf	4033,c	;volatile
   749                           
   750                           ;PICLibs.h: 83: ADCON2bits.ADFM=1;
   751  000E22  8EC0               	bsf	4032,7,c	;volatile
   752                           
   753                           ;PICLibs.h: 84: ADCON2bits.ACQT=0b111;
   754  000E24  86C0               	bsf	4032,3,c	;volatile
   755  000E26  88C0               	bsf	4032,4,c	;volatile
   756  000E28  8AC0               	bsf	4032,5,c	;volatile
   757                           
   758                           ;PICLibs.h: 85: ADCON2bits.ADCS=0b000;
   759  000E2A  90C0               	bcf	4032,0,c	;volatile
   760  000E2C  92C0               	bcf	4032,1,c	;volatile
   761  000E2E  94C0               	bcf	4032,2,c	;volatile
   762  000E30  0012               	return		;funcret
   763  000E32                     __end_of_ADC_Inicializa:
   764                           	opt stack 0
   765                           tblptru	equ	0xFF8
   766                           intcon	equ	0xFF2
   767                           wreg	equ	0xFE8
   768                           status	equ	0xFD8
   769                           
   770 ;; *************** function ___lwmod *****************
   771 ;; Defined at:
   772 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.38\sources\common\lwmod.c"
   773 ;; Parameters:    Size  Location     Type
   774 ;;  dividend        2   14[COMRAM] unsigned int 
   775 ;;  divisor         2   16[COMRAM] unsigned int 
   776 ;; Auto vars:     Size  Location     Type
   777 ;;  counter         1   18[COMRAM] unsigned char 
   778 ;; Return value:  Size  Location     Type
   779 ;;                  2   14[COMRAM] unsigned int 
   780 ;; Registers used:
   781 ;;		wreg, status,2, status,0
   782 ;; Tracked objects:
   783 ;;		On entry : 0/0
   784 ;;		On exit  : 0/0
   785 ;;		Unchanged: 0/0
   786 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   787 ;;      Params:         4       0       0       0       0       0       0       0       0
   788 ;;      Locals:         1       0       0       0       0       0       0       0       0
   789 ;;      Temps:          0       0       0       0       0       0       0       0       0
   790 ;;      Totals:         5       0       0       0       0       0       0       0       0
   791 ;;Total ram usage:        5 bytes
   792 ;; Hardware stack levels used:    1
   793 ;; Hardware stack levels required when called:    1
   794 ;; This function calls:
   795 ;;		Nothing
   796 ;; This function is called by:
   797 ;;		_main
   798 ;; This function uses a non-reentrant model
   799 ;;
   800                           
   801                           	psect	text5
   802  000D28                     __ptext5:
   803                           	opt stack 0
   804  000D28                     ___lwmod:
   805                           	opt stack 29
   806                           
   807                           ;incstack = 0
   808  000D28  5011               	movf	___lwmod@divisor,w,c
   809  000D2A  1012               	iorwf	___lwmod@divisor+1,w,c
   810  000D2C  B4D8               	btfsc	status,2,c
   811  000D2E  D018               	goto	l533
   812  000D30  0E01               	movlw	1
   813  000D32  6E13               	movwf	___lwmod@counter,c
   814  000D34  D004               	goto	l1238
   815  000D36                     l1236:
   816  000D36  90D8               	bcf	status,0,c
   817  000D38  3611               	rlcf	___lwmod@divisor,f,c
   818  000D3A  3612               	rlcf	___lwmod@divisor+1,f,c
   819  000D3C  2A13               	incf	___lwmod@counter,f,c
   820  000D3E                     l1238:
   821  000D3E  AE12               	btfss	___lwmod@divisor+1,7,c
   822  000D40  D7FA               	goto	l1236
   823  000D42                     l1240:
   824  000D42  5011               	movf	___lwmod@divisor,w,c
   825  000D44  5C0F               	subwf	___lwmod@dividend,w,c
   826  000D46  5012               	movf	___lwmod@divisor+1,w,c
   827  000D48  5810               	subwfb	___lwmod@dividend+1,w,c
   828  000D4A  A0D8               	btfss	status,0,c
   829  000D4C  D004               	goto	l1244
   830  000D4E  5011               	movf	___lwmod@divisor,w,c
   831  000D50  5E0F               	subwf	___lwmod@dividend,f,c
   832  000D52  5012               	movf	___lwmod@divisor+1,w,c
   833  000D54  5A10               	subwfb	___lwmod@dividend+1,f,c
   834  000D56                     l1244:
   835  000D56  90D8               	bcf	status,0,c
   836  000D58  3212               	rrcf	___lwmod@divisor+1,f,c
   837  000D5A  3211               	rrcf	___lwmod@divisor,f,c
   838  000D5C  2E13               	decfsz	___lwmod@counter,f,c
   839  000D5E  D7F1               	goto	l1240
   840  000D60                     l533:
   841  000D60  C00F  F00F         	movff	___lwmod@dividend,?___lwmod
   842  000D64  C010  F010         	movff	___lwmod@dividend+1,?___lwmod+1
   843  000D68  0012               	return		;funcret
   844  000D6A                     __end_of___lwmod:
   845                           	opt stack 0
   846                           tblptru	equ	0xFF8
   847                           intcon	equ	0xFF2
   848                           wreg	equ	0xFE8
   849                           status	equ	0xFD8
   850                           
   851 ;; *************** function ___lwdiv *****************
   852 ;; Defined at:
   853 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.38\sources\common\lwdiv.c"
   854 ;; Parameters:    Size  Location     Type
   855 ;;  dividend        2   19[COMRAM] unsigned int 
   856 ;;  divisor         2   21[COMRAM] unsigned int 
   857 ;; Auto vars:     Size  Location     Type
   858 ;;  quotient        2   23[COMRAM] unsigned int 
   859 ;;  counter         1   25[COMRAM] unsigned char 
   860 ;; Return value:  Size  Location     Type
   861 ;;                  2   19[COMRAM] unsigned int 
   862 ;; Registers used:
   863 ;;		wreg, status,2, status,0
   864 ;; Tracked objects:
   865 ;;		On entry : 0/0
   866 ;;		On exit  : 0/0
   867 ;;		Unchanged: 0/0
   868 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   869 ;;      Params:         4       0       0       0       0       0       0       0       0
   870 ;;      Locals:         3       0       0       0       0       0       0       0       0
   871 ;;      Temps:          0       0       0       0       0       0       0       0       0
   872 ;;      Totals:         7       0       0       0       0       0       0       0       0
   873 ;;Total ram usage:        7 bytes
   874 ;; Hardware stack levels used:    1
   875 ;; Hardware stack levels required when called:    1
   876 ;; This function calls:
   877 ;;		Nothing
   878 ;; This function is called by:
   879 ;;		_main
   880 ;; This function uses a non-reentrant model
   881 ;;
   882                           
   883                           	psect	text6
   884  000BFA                     __ptext6:
   885                           	opt stack 0
   886  000BFA                     ___lwdiv:
   887                           	opt stack 29
   888                           
   889                           ;incstack = 0
   890  000BFA  0E00               	movlw	0
   891  000BFC  6E19               	movwf	___lwdiv@quotient+1,c
   892  000BFE  0E00               	movlw	0
   893  000C00  6E18               	movwf	___lwdiv@quotient,c
   894  000C02  5016               	movf	___lwdiv@divisor,w,c
   895  000C04  1017               	iorwf	___lwdiv@divisor+1,w,c
   896  000C06  B4D8               	btfsc	status,2,c
   897  000C08  D01C               	goto	l523
   898  000C0A  0E01               	movlw	1
   899  000C0C  6E1A               	movwf	___lwdiv@counter,c
   900  000C0E  D004               	goto	l1218
   901  000C10                     l1216:
   902  000C10  90D8               	bcf	status,0,c
   903  000C12  3616               	rlcf	___lwdiv@divisor,f,c
   904  000C14  3617               	rlcf	___lwdiv@divisor+1,f,c
   905  000C16  2A1A               	incf	___lwdiv@counter,f,c
   906  000C18                     l1218:
   907  000C18  AE17               	btfss	___lwdiv@divisor+1,7,c
   908  000C1A  D7FA               	goto	l1216
   909  000C1C                     l1220:
   910  000C1C  90D8               	bcf	status,0,c
   911  000C1E  3618               	rlcf	___lwdiv@quotient,f,c
   912  000C20  3619               	rlcf	___lwdiv@quotient+1,f,c
   913  000C22  5016               	movf	___lwdiv@divisor,w,c
   914  000C24  5C14               	subwf	___lwdiv@dividend,w,c
   915  000C26  5017               	movf	___lwdiv@divisor+1,w,c
   916  000C28  5815               	subwfb	___lwdiv@dividend+1,w,c
   917  000C2A  A0D8               	btfss	status,0,c
   918  000C2C  D005               	goto	l1228
   919  000C2E  5016               	movf	___lwdiv@divisor,w,c
   920  000C30  5E14               	subwf	___lwdiv@dividend,f,c
   921  000C32  5017               	movf	___lwdiv@divisor+1,w,c
   922  000C34  5A15               	subwfb	___lwdiv@dividend+1,f,c
   923  000C36  8018               	bsf	___lwdiv@quotient,0,c
   924  000C38                     l1228:
   925  000C38  90D8               	bcf	status,0,c
   926  000C3A  3217               	rrcf	___lwdiv@divisor+1,f,c
   927  000C3C  3216               	rrcf	___lwdiv@divisor,f,c
   928  000C3E  2E1A               	decfsz	___lwdiv@counter,f,c
   929  000C40  D7ED               	goto	l1220
   930  000C42                     l523:
   931  000C42  C018  F014         	movff	___lwdiv@quotient,?___lwdiv
   932  000C46  C019  F015         	movff	___lwdiv@quotient+1,?___lwdiv+1
   933  000C4A  0012               	return		;funcret
   934  000C4C                     __end_of___lwdiv:
   935                           	opt stack 0
   936                           tblptru	equ	0xFF8
   937                           intcon	equ	0xFF2
   938                           wreg	equ	0xFE8
   939                           status	equ	0xFD8
   940                           
   941 ;; *************** function _LCD_String_xy *****************
   942 ;; Defined at:
   943 ;;		line 243 in file "PICLibs.h"
   944 ;; Parameters:    Size  Location     Type
   945 ;;  row             1    wreg     unsigned char 
   946 ;;  pos             1   45[COMRAM] unsigned char 
   947 ;;  msg             2   46[COMRAM] PTR const unsigned char 
   948 ;;		 -> STR_1(14), 
   949 ;; Auto vars:     Size  Location     Type
   950 ;;  row             1   48[COMRAM] unsigned char 
   951 ;;  location        1   49[COMRAM] unsigned char 
   952 ;; Return value:  Size  Location     Type
   953 ;;                  1    wreg      void 
   954 ;; Registers used:
   955 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
   956 ;; Tracked objects:
   957 ;;		On entry : 0/0
   958 ;;		On exit  : 0/0
   959 ;;		Unchanged: 0/0
   960 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   961 ;;      Params:         3       0       0       0       0       0       0       0       0
   962 ;;      Locals:         2       0       0       0       0       0       0       0       0
   963 ;;      Temps:          0       0       0       0       0       0       0       0       0
   964 ;;      Totals:         5       0       0       0       0       0       0       0       0
   965 ;;Total ram usage:        5 bytes
   966 ;; Hardware stack levels used:    1
   967 ;; Hardware stack levels required when called:    4
   968 ;; This function calls:
   969 ;;		_LCD_Command
   970 ;;		_LCD_String
   971 ;; This function is called by:
   972 ;;		_main
   973 ;; This function uses a non-reentrant model
   974 ;;
   975                           
   976                           	psect	text7
   977  000CE4                     __ptext7:
   978                           	opt stack 0
   979  000CE4                     _LCD_String_xy:
   980                           	opt stack 26
   981                           
   982                           ;incstack = 0
   983                           ;LCD_String_xy@row stored from wreg
   984  000CE4  6E31               	movwf	LCD_String_xy@row,c
   985                           
   986                           ;PICLibs.h: 245: char location=0;
   987  000CE6  0E00               	movlw	0
   988  000CE8  6E32               	movwf	LCD_String_xy@location,c
   989                           
   990                           ;PICLibs.h: 246: switch (row){
   991  000CEA  D010               	goto	l1192
   992  000CEC                     l1182:
   993                           
   994                           ;PICLibs.h: 248: location=(0x80) | ((pos) & 0x0f);
   995  000CEC  502E               	movf	LCD_String_xy@pos,w,c
   996  000CEE  0B0F               	andlw	15
   997  000CF0  0980               	iorlw	128
   998  000CF2  6E32               	movwf	LCD_String_xy@location,c
   999                           
  1000                           ;PICLibs.h: 249: LCD_Command(location);
  1001  000CF4  5032               	movf	LCD_String_xy@location,w,c
  1002  000CF6  ECA0  F004         	call	_LCD_Command
  1003                           
  1004                           ;PICLibs.h: 250: break;
  1005  000CFA  D00F               	goto	l1194
  1006  000CFC                     l1186:
  1007                           
  1008                           ;PICLibs.h: 252: location=(0xC0) | ((pos) & 0x0f);
  1009  000CFC  502E               	movf	LCD_String_xy@pos,w,c
  1010  000CFE  0B0F               	andlw	15
  1011  000D00  09C0               	iorlw	192
  1012  000D02  6E32               	movwf	LCD_String_xy@location,c
  1013                           
  1014                           ;PICLibs.h: 253: LCD_Command(location);
  1015  000D04  5032               	movf	LCD_String_xy@location,w,c
  1016  000D06  ECA0  F004         	call	_LCD_Command
  1017                           
  1018                           ;PICLibs.h: 266: }
  1019                           
  1020                           ;PICLibs.h: 254: break;
  1021  000D0A  D007               	goto	l1194
  1022  000D0C                     l1192:
  1023  000D0C  5031               	movf	LCD_String_xy@row,w,c
  1024                           
  1025                           ; Switch size 1, requested type "space"
  1026                           ; Number of cases is 2, Range of values is 1 to 2
  1027                           ; switch strategies available:
  1028                           ; Name         Instructions Cycles
  1029                           ; simple_byte            7     4 (average)
  1030                           ;	Chosen strategy is simple_byte
  1031  000D0E  0A01               	xorlw	1	; case 1
  1032  000D10  B4D8               	btfsc	status,2,c
  1033  000D12  D7EC               	goto	l1182
  1034  000D14  0A03               	xorlw	3	; case 2
  1035  000D16  B4D8               	btfsc	status,2,c
  1036  000D18  D7F1               	goto	l1186
  1037  000D1A                     l1194:
  1038                           
  1039                           ;PICLibs.h: 270: LCD_String(msg);
  1040  000D1A  C02F  F02C         	movff	LCD_String_xy@msg,LCD_String@msg
  1041  000D1E  C030  F02D         	movff	LCD_String_xy@msg+1,LCD_String@msg+1
  1042  000D22  ECF0  F006         	call	_LCD_String	;wreg free
  1043  000D26  0012               	return		;funcret
  1044  000D28                     __end_of_LCD_String_xy:
  1045                           	opt stack 0
  1046                           tblptru	equ	0xFF8
  1047                           intcon	equ	0xFF2
  1048                           wreg	equ	0xFE8
  1049                           status	equ	0xFD8
  1050                           
  1051 ;; *************** function _LCD_String *****************
  1052 ;; Defined at:
  1053 ;;		line 234 in file "PICLibs.h"
  1054 ;; Parameters:    Size  Location     Type
  1055 ;;  msg             2   43[COMRAM] PTR const unsigned char 
  1056 ;;		 -> STR_1(14), 
  1057 ;; Auto vars:     Size  Location     Type
  1058 ;;		None
  1059 ;; Return value:  Size  Location     Type
  1060 ;;                  1    wreg      void 
  1061 ;; Registers used:
  1062 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  1063 ;; Tracked objects:
  1064 ;;		On entry : 0/0
  1065 ;;		On exit  : 0/0
  1066 ;;		Unchanged: 0/0
  1067 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1068 ;;      Params:         2       0       0       0       0       0       0       0       0
  1069 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1070 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1071 ;;      Totals:         2       0       0       0       0       0       0       0       0
  1072 ;;Total ram usage:        2 bytes
  1073 ;; Hardware stack levels used:    1
  1074 ;; Hardware stack levels required when called:    3
  1075 ;; This function calls:
  1076 ;;		_LCD_Char
  1077 ;; This function is called by:
  1078 ;;		_LCD_String_xy
  1079 ;; This function uses a non-reentrant model
  1080 ;;
  1081                           
  1082                           	psect	text8
  1083  000DE0                     __ptext8:
  1084                           	opt stack 0
  1085  000DE0                     _LCD_String:
  1086                           	opt stack 26
  1087                           
  1088                           ;PICLibs.h: 236: while((*msg)!=0)
  1089                           
  1090                           ;incstack = 0
  1091  000DE0  D00A               	goto	l1162
  1092  000DE2                     l1158:
  1093                           
  1094                           ;PICLibs.h: 237: {
  1095                           ;PICLibs.h: 238: LCD_Char(*msg);
  1096  000DE2  C02C  FFF6         	movff	LCD_String@msg,tblptrl
  1097  000DE6  C02D  FFF7         	movff	LCD_String@msg+1,tblptrh
  1098  000DEA                     	if	0	;tblptru may be non-zero
  1099  000DEA                     	endif
  1100  000DEA                     	if	0	;tblptru may be non-zero
  1101  000DEA                     	endif
  1102  000DEA  0008               	tblrd		*
  1103  000DEC  50F5               	movf	tablat,w,c
  1104  000DEE  EC0C  F005         	call	_LCD_Char
  1105                           
  1106                           ;PICLibs.h: 239: msg++;
  1107  000DF2  4A2C               	infsnz	LCD_String@msg,f,c
  1108  000DF4  2A2D               	incf	LCD_String@msg+1,f,c
  1109  000DF6                     l1162:
  1110  000DF6  C02C  FFF6         	movff	LCD_String@msg,tblptrl
  1111  000DFA  C02D  FFF7         	movff	LCD_String@msg+1,tblptrh
  1112  000DFE                     	if	0	;tblptru may be non-zero
  1113  000DFE                     	endif
  1114  000DFE                     	if	0	;tblptru may be non-zero
  1115  000DFE                     	endif
  1116  000DFE  0008               	tblrd		*
  1117  000E00  50F5               	movf	tablat,w,c
  1118  000E02  0900               	iorlw	0
  1119  000E04  B4D8               	btfsc	status,2,c
  1120  000E06  0012               	return	
  1121  000E08  D7EC               	goto	l1158
  1122  000E0A                     __end_of_LCD_String:
  1123                           	opt stack 0
  1124                           tblptru	equ	0xFF8
  1125                           tblptrh	equ	0xFF7
  1126                           tblptrl	equ	0xFF6
  1127                           tablat	equ	0xFF5
  1128                           intcon	equ	0xFF2
  1129                           wreg	equ	0xFE8
  1130                           status	equ	0xFD8
  1131                           
  1132 ;; *************** function _LCD_Char_xy *****************
  1133 ;; Defined at:
  1134 ;;		line 202 in file "PICLibs.h"
  1135 ;; Parameters:    Size  Location     Type
  1136 ;;  row             1    wreg     unsigned char 
  1137 ;;  pos             1   43[COMRAM] unsigned char 
  1138 ;;  dat             1   44[COMRAM] unsigned char 
  1139 ;; Auto vars:     Size  Location     Type
  1140 ;;  row             1   45[COMRAM] unsigned char 
  1141 ;;  location        1   46[COMRAM] unsigned char 
  1142 ;; Return value:  Size  Location     Type
  1143 ;;                  1    wreg      void 
  1144 ;; Registers used:
  1145 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  1146 ;; Tracked objects:
  1147 ;;		On entry : 0/0
  1148 ;;		On exit  : 0/0
  1149 ;;		Unchanged: 0/0
  1150 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1151 ;;      Params:         2       0       0       0       0       0       0       0       0
  1152 ;;      Locals:         2       0       0       0       0       0       0       0       0
  1153 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1154 ;;      Totals:         4       0       0       0       0       0       0       0       0
  1155 ;;Total ram usage:        4 bytes
  1156 ;; Hardware stack levels used:    1
  1157 ;; Hardware stack levels required when called:    3
  1158 ;; This function calls:
  1159 ;;		_LCD_Char
  1160 ;;		_LCD_Command
  1161 ;; This function is called by:
  1162 ;;		_main
  1163 ;; This function uses a non-reentrant model
  1164 ;;
  1165                           
  1166                           	psect	text9
  1167  000D6A                     __ptext9:
  1168                           	opt stack 0
  1169  000D6A                     _LCD_Char_xy:
  1170                           	opt stack 27
  1171                           
  1172                           ;incstack = 0
  1173                           ;LCD_Char_xy@row stored from wreg
  1174  000D6A  6E2E               	movwf	LCD_Char_xy@row,c
  1175                           
  1176                           ;PICLibs.h: 204: char location=0;
  1177  000D6C  0E00               	movlw	0
  1178  000D6E  6E2F               	movwf	LCD_Char_xy@location,c
  1179                           
  1180                           ;PICLibs.h: 205: switch (row){
  1181  000D70  D010               	goto	l1176
  1182  000D72                     l1166:
  1183                           
  1184                           ;PICLibs.h: 207: location=(0x80) | ((pos) & 0x0f);
  1185  000D72  502C               	movf	LCD_Char_xy@pos,w,c
  1186  000D74  0B0F               	andlw	15
  1187  000D76  0980               	iorlw	128
  1188  000D78  6E2F               	movwf	LCD_Char_xy@location,c
  1189                           
  1190                           ;PICLibs.h: 208: LCD_Command(location);
  1191  000D7A  502F               	movf	LCD_Char_xy@location,w,c
  1192  000D7C  ECA0  F004         	call	_LCD_Command
  1193                           
  1194                           ;PICLibs.h: 209: break;
  1195  000D80  D00F               	goto	l1178
  1196  000D82                     l1170:
  1197                           
  1198                           ;PICLibs.h: 211: location=(0xC0) | ((pos) & 0x0f);
  1199  000D82  502C               	movf	LCD_Char_xy@pos,w,c
  1200  000D84  0B0F               	andlw	15
  1201  000D86  09C0               	iorlw	192
  1202  000D88  6E2F               	movwf	LCD_Char_xy@location,c
  1203                           
  1204                           ;PICLibs.h: 212: LCD_Command(location);
  1205  000D8A  502F               	movf	LCD_Char_xy@location,w,c
  1206  000D8C  ECA0  F004         	call	_LCD_Command
  1207                           
  1208                           ;PICLibs.h: 227: }
  1209                           
  1210                           ;PICLibs.h: 213: break;
  1211  000D90  D007               	goto	l1178
  1212  000D92                     l1176:
  1213  000D92  502E               	movf	LCD_Char_xy@row,w,c
  1214                           
  1215                           ; Switch size 1, requested type "space"
  1216                           ; Number of cases is 2, Range of values is 1 to 2
  1217                           ; switch strategies available:
  1218                           ; Name         Instructions Cycles
  1219                           ; simple_byte            7     4 (average)
  1220                           ;	Chosen strategy is simple_byte
  1221  000D94  0A01               	xorlw	1	; case 1
  1222  000D96  B4D8               	btfsc	status,2,c
  1223  000D98  D7EC               	goto	l1166
  1224  000D9A  0A03               	xorlw	3	; case 2
  1225  000D9C  B4D8               	btfsc	status,2,c
  1226  000D9E  D7F1               	goto	l1170
  1227  000DA0                     l1178:
  1228                           
  1229                           ;PICLibs.h: 231: LCD_Char(dat);
  1230  000DA0  502D               	movf	LCD_Char_xy@dat,w,c
  1231  000DA2  EC0C  F005         	call	_LCD_Char
  1232  000DA6  0012               	return		;funcret
  1233  000DA8                     __end_of_LCD_Char_xy:
  1234                           	opt stack 0
  1235                           tblptru	equ	0xFF8
  1236                           tblptrh	equ	0xFF7
  1237                           tblptrl	equ	0xFF6
  1238                           tablat	equ	0xFF5
  1239                           intcon	equ	0xFF2
  1240                           wreg	equ	0xFE8
  1241                           status	equ	0xFD8
  1242                           
  1243 ;; *************** function _LCD_Command *****************
  1244 ;; Defined at:
  1245 ;;		line 116 in file "PICLibs.h"
  1246 ;; Parameters:    Size  Location     Type
  1247 ;;  cmd             1    wreg     unsigned char 
  1248 ;; Auto vars:     Size  Location     Type
  1249 ;;  cmd             1   40[COMRAM] unsigned char 
  1250 ;;  OUTS           16   24[COMRAM] short [8]
  1251 ;;  i               2   41[COMRAM] short 
  1252 ;; Return value:  Size  Location     Type
  1253 ;;                  1    wreg      void 
  1254 ;; Registers used:
  1255 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  1256 ;; Tracked objects:
  1257 ;;		On entry : 0/0
  1258 ;;		On exit  : 0/0
  1259 ;;		Unchanged: 0/0
  1260 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1261 ;;      Params:         0       0       0       0       0       0       0       0       0
  1262 ;;      Locals:        19       0       0       0       0       0       0       0       0
  1263 ;;      Temps:          2       0       0       0       0       0       0       0       0
  1264 ;;      Totals:        21       0       0       0       0       0       0       0       0
  1265 ;;Total ram usage:       21 bytes
  1266 ;; Hardware stack levels used:    1
  1267 ;; Hardware stack levels required when called:    2
  1268 ;; This function calls:
  1269 ;;		___awdiv
  1270 ;;		_delay_ms
  1271 ;; This function is called by:
  1272 ;;		_LCD_Init
  1273 ;;		_LCD_Char_xy
  1274 ;;		_LCD_String_xy
  1275 ;;		_LCD_Clear
  1276 ;; This function uses a non-reentrant model
  1277 ;;
  1278                           
  1279                           	psect	text10
  1280  000940                     __ptext10:
  1281                           	opt stack 0
  1282  000940                     _LCD_Command:
  1283                           	opt stack 26
  1284                           
  1285                           ;incstack = 0
  1286                           ;LCD_Command@cmd stored from wreg
  1287  000940  6E29               	movwf	LCD_Command@cmd,c
  1288                           
  1289                           ;PICLibs.h: 119: short OUTS[8], i;
  1290                           ;PICLibs.h: 121: for (i=0; i < 8; i++ ) {
  1291  000942  0E00               	movlw	0
  1292  000944  6E2B               	movwf	LCD_Command@i+1,c
  1293  000946  0E00               	movlw	0
  1294  000948  6E2A               	movwf	LCD_Command@i,c
  1295  00094A  BE2B               	btfsc	LCD_Command@i+1,7,c
  1296  00094C  D006               	goto	l1072
  1297  00094E  502B               	movf	LCD_Command@i+1,w,c
  1298  000950  E127               	bnz	l73
  1299  000952  0E08               	movlw	8
  1300  000954  5C2A               	subwf	LCD_Command@i,w,c
  1301  000956  B0D8               	btfsc	status,0,c
  1302  000958  D023               	goto	l73
  1303  00095A                     l1072:
  1304                           
  1305                           ;PICLibs.h: 124: OUTS[i] = cmd % 2;
  1306  00095A  5029               	movf	LCD_Command@cmd,w,c
  1307  00095C  0B01               	andlw	1
  1308  00095E  6E17               	movwf	??_LCD_Command& (0+255),c
  1309  000960  6A18               	clrf	(??_LCD_Command+1)& (0+255),c
  1310  000962  90D8               	bcf	status,0,c
  1311  000964  342A               	rlcf	LCD_Command@i,w,c
  1312  000966  6ED9               	movwf	fsr2l,c
  1313  000968  342B               	rlcf	LCD_Command@i+1,w,c
  1314  00096A  6EDA               	movwf	fsr2h,c
  1315  00096C  0E19               	movlw	low LCD_Command@OUTS
  1316  00096E  26D9               	addwf	fsr2l,f,c
  1317  000970  0E00               	movlw	high LCD_Command@OUTS
  1318  000972  22DA               	addwfc	fsr2h,f,c
  1319  000974  C017  FFDE         	movff	??_LCD_Command,postinc2
  1320  000978  C018  FFDD         	movff	??_LCD_Command+1,postdec2
  1321                           
  1322                           ;PICLibs.h: 125: cmd = cmd / 2;
  1323  00097C  C029  F00F         	movff	LCD_Command@cmd,___awdiv@dividend
  1324  000980  6A10               	clrf	___awdiv@dividend+1,c
  1325  000982  0E00               	movlw	0
  1326  000984  6E12               	movwf	___awdiv@divisor+1,c
  1327  000986  0E02               	movlw	2
  1328  000988  6E11               	movwf	___awdiv@divisor,c
  1329  00098A  ECBB  F005         	call	___awdiv	;wreg free
  1330  00098E  500F               	movf	?___awdiv,w,c
  1331  000990  6E29               	movwf	LCD_Command@cmd,c
  1332  000992  4A2A               	infsnz	LCD_Command@i,f,c
  1333  000994  2A2B               	incf	LCD_Command@i+1,f,c
  1334  000996  BE2B               	btfsc	LCD_Command@i+1,7,c
  1335  000998  D7E0               	goto	l1072
  1336  00099A  502B               	movf	LCD_Command@i+1,w,c
  1337  00099C  E101               	bnz	u690
  1338  00099E  D7D9               	goto	L1
  1339  0009A0                     u690:
  1340  0009A0                     l73:
  1341                           
  1342                           ;PICLibs.h: 127: }
  1343                           ;PICLibs.h: 130: LATB4 = OUTS[4];
  1344  0009A0  A021               	btfss	LCD_Command@OUTS+8,0,c
  1345  0009A2  D002               	goto	u700
  1346  0009A4  888A               	bsf	3978,4,c	;volatile
  1347  0009A6  D001               	goto	u715
  1348  0009A8                     u700:
  1349  0009A8  988A               	bcf	3978,4,c	;volatile
  1350  0009AA                     u715:
  1351                           
  1352                           ;PICLibs.h: 131: LATB5 = OUTS[5];
  1353  0009AA  A023               	btfss	LCD_Command@OUTS+10,0,c
  1354  0009AC  D002               	goto	u720
  1355  0009AE  8A8A               	bsf	3978,5,c	;volatile
  1356  0009B0  D001               	goto	u735
  1357  0009B2                     u720:
  1358  0009B2  9A8A               	bcf	3978,5,c	;volatile
  1359  0009B4                     u735:
  1360                           
  1361                           ;PICLibs.h: 132: LATB6 = OUTS[6];
  1362  0009B4  A025               	btfss	LCD_Command@OUTS+12,0,c
  1363  0009B6  D002               	goto	u740
  1364  0009B8  8C8A               	bsf	3978,6,c	;volatile
  1365  0009BA  D001               	goto	u755
  1366  0009BC                     u740:
  1367  0009BC  9C8A               	bcf	3978,6,c	;volatile
  1368  0009BE                     u755:
  1369                           
  1370                           ;PICLibs.h: 133: LATB7 = OUTS[7];
  1371  0009BE  A027               	btfss	LCD_Command@OUTS+14,0,c
  1372  0009C0  D002               	goto	u760
  1373  0009C2  8E8A               	bsf	3978,7,c	;volatile
  1374  0009C4  D001               	goto	u775
  1375  0009C6                     u760:
  1376  0009C6  9E8A               	bcf	3978,7,c	;volatile
  1377  0009C8                     u775:
  1378                           
  1379                           ;PICLibs.h: 134: LATB2 = 0;
  1380  0009C8  948A               	bcf	3978,2,c	;volatile
  1381                           
  1382                           ;PICLibs.h: 135: LATB3 = 1;
  1383  0009CA  868A               	bsf	3978,3,c	;volatile
  1384                           
  1385                           ;PICLibs.h: 136: __nop();
  1386  0009CC  F000               	nop	
  1387                           
  1388                           ;PICLibs.h: 137: LATB3 = 0;
  1389  0009CE  968A               	bcf	3978,3,c	;volatile
  1390                           
  1391                           ;PICLibs.h: 138: delay_ms(1);
  1392  0009D0  0E00               	movlw	0
  1393  0009D2  6E10               	movwf	delay_ms@tempo+1,c
  1394  0009D4  0E01               	movlw	1
  1395  0009D6  6E0F               	movwf	delay_ms@tempo,c
  1396  0009D8  EC4D  F006         	call	_delay_ms	;wreg free
  1397                           
  1398                           ;PICLibs.h: 140: LATB4 = OUTS[0];
  1399  0009DC  A019               	btfss	LCD_Command@OUTS,0,c
  1400  0009DE  D002               	goto	u780
  1401  0009E0  888A               	bsf	3978,4,c	;volatile
  1402  0009E2  D001               	goto	l1084
  1403  0009E4                     u780:
  1404  0009E4  988A               	bcf	3978,4,c	;volatile
  1405  0009E6                     l1084:
  1406                           
  1407                           ;PICLibs.h: 141: LATB5 = OUTS[1];
  1408  0009E6  A01B               	btfss	LCD_Command@OUTS+2,0,c
  1409  0009E8  D002               	goto	u800
  1410  0009EA  8A8A               	bsf	3978,5,c	;volatile
  1411  0009EC  D001               	goto	l1086
  1412  0009EE                     u800:
  1413  0009EE  9A8A               	bcf	3978,5,c	;volatile
  1414  0009F0                     l1086:
  1415                           
  1416                           ;PICLibs.h: 142: LATB6 = OUTS[2];
  1417  0009F0  A01D               	btfss	LCD_Command@OUTS+4,0,c
  1418  0009F2  D002               	goto	u820
  1419  0009F4  8C8A               	bsf	3978,6,c	;volatile
  1420  0009F6  D001               	goto	l1088
  1421  0009F8                     u820:
  1422  0009F8  9C8A               	bcf	3978,6,c	;volatile
  1423  0009FA                     l1088:
  1424                           
  1425                           ;PICLibs.h: 143: LATB7 = OUTS[3];
  1426  0009FA  A01F               	btfss	LCD_Command@OUTS+6,0,c
  1427  0009FC  D002               	goto	u840
  1428  0009FE  8E8A               	bsf	3978,7,c	;volatile
  1429  000A00  D001               	goto	l1090
  1430  000A02                     u840:
  1431  000A02  9E8A               	bcf	3978,7,c	;volatile
  1432  000A04                     l1090:
  1433                           
  1434                           ;PICLibs.h: 144: LATB3 = 1;
  1435  000A04  868A               	bsf	3978,3,c	;volatile
  1436                           
  1437                           ;PICLibs.h: 145: __nop();
  1438  000A06  F000               	nop	
  1439                           
  1440                           ;PICLibs.h: 146: LATB3 = 0;
  1441  000A08  968A               	bcf	3978,3,c	;volatile
  1442                           
  1443                           ;PICLibs.h: 147: delay_ms(3);
  1444  000A0A  0E00               	movlw	0
  1445  000A0C  6E10               	movwf	delay_ms@tempo+1,c
  1446  000A0E  0E03               	movlw	3
  1447  000A10  6E0F               	movwf	delay_ms@tempo,c
  1448  000A12  EC4D  F006         	call	_delay_ms	;wreg free
  1449  000A16  0012               	return		;funcret
  1450  000A18                     __end_of_LCD_Command:
  1451                           	opt stack 0
  1452                           tblptru	equ	0xFF8
  1453                           tblptrh	equ	0xFF7
  1454                           tblptrl	equ	0xFF6
  1455                           tablat	equ	0xFF5
  1456                           intcon	equ	0xFF2
  1457                           wreg	equ	0xFE8
  1458                           postinc2	equ	0xFDE
  1459                           postdec2	equ	0xFDD
  1460                           fsr2h	equ	0xFDA
  1461                           fsr2l	equ	0xFD9
  1462                           status	equ	0xFD8
  1463                           
  1464 ;; *************** function _LCD_Char *****************
  1465 ;; Defined at:
  1466 ;;		line 169 in file "PICLibs.h"
  1467 ;; Parameters:    Size  Location     Type
  1468 ;;  dat             1    wreg     unsigned char 
  1469 ;; Auto vars:     Size  Location     Type
  1470 ;;  dat             1   40[COMRAM] unsigned char 
  1471 ;;  OUTS           16   24[COMRAM] short [8]
  1472 ;;  i               2   41[COMRAM] short 
  1473 ;; Return value:  Size  Location     Type
  1474 ;;                  1    wreg      void 
  1475 ;; Registers used:
  1476 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  1477 ;; Tracked objects:
  1478 ;;		On entry : 0/0
  1479 ;;		On exit  : 0/0
  1480 ;;		Unchanged: 0/0
  1481 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1482 ;;      Params:         0       0       0       0       0       0       0       0       0
  1483 ;;      Locals:        19       0       0       0       0       0       0       0       0
  1484 ;;      Temps:          2       0       0       0       0       0       0       0       0
  1485 ;;      Totals:        21       0       0       0       0       0       0       0       0
  1486 ;;Total ram usage:       21 bytes
  1487 ;; Hardware stack levels used:    1
  1488 ;; Hardware stack levels required when called:    2
  1489 ;; This function calls:
  1490 ;;		___awdiv
  1491 ;;		_delay_ms
  1492 ;; This function is called by:
  1493 ;;		_LCD_Char_xy
  1494 ;;		_LCD_String
  1495 ;; This function uses a non-reentrant model
  1496 ;;
  1497                           
  1498                           	psect	text11
  1499  000A18                     __ptext11:
  1500                           	opt stack 0
  1501  000A18                     _LCD_Char:
  1502                           	opt stack 26
  1503                           
  1504                           ;incstack = 0
  1505                           ;LCD_Char@dat stored from wreg
  1506  000A18  6E29               	movwf	LCD_Char@dat,c
  1507                           
  1508                           ;PICLibs.h: 171: short OUTS[8], i;
  1509                           ;PICLibs.h: 173: for (i=0; i < 8; i++ ) {
  1510  000A1A  0E00               	movlw	0
  1511  000A1C  6E2B               	movwf	LCD_Char@i+1,c
  1512  000A1E  0E00               	movlw	0
  1513  000A20  6E2A               	movwf	LCD_Char@i,c
  1514  000A22  BE2B               	btfsc	LCD_Char@i+1,7,c
  1515  000A24  D006               	goto	l1102
  1516  000A26  502B               	movf	LCD_Char@i+1,w,c
  1517  000A28  E127               	bnz	l81
  1518  000A2A  0E08               	movlw	8
  1519  000A2C  5C2A               	subwf	LCD_Char@i,w,c
  1520  000A2E  B0D8               	btfsc	status,0,c
  1521  000A30  D023               	goto	l81
  1522  000A32                     l1102:
  1523                           
  1524                           ;PICLibs.h: 176: OUTS[i] = dat % 2;
  1525  000A32  5029               	movf	LCD_Char@dat,w,c
  1526  000A34  0B01               	andlw	1
  1527  000A36  6E17               	movwf	??_LCD_Char& (0+255),c
  1528  000A38  6A18               	clrf	(??_LCD_Char+1)& (0+255),c
  1529  000A3A  90D8               	bcf	status,0,c
  1530  000A3C  342A               	rlcf	LCD_Char@i,w,c
  1531  000A3E  6ED9               	movwf	fsr2l,c
  1532  000A40  342B               	rlcf	LCD_Char@i+1,w,c
  1533  000A42  6EDA               	movwf	fsr2h,c
  1534  000A44  0E19               	movlw	low LCD_Char@OUTS
  1535  000A46  26D9               	addwf	fsr2l,f,c
  1536  000A48  0E00               	movlw	high LCD_Char@OUTS
  1537  000A4A  22DA               	addwfc	fsr2h,f,c
  1538  000A4C  C017  FFDE         	movff	??_LCD_Char,postinc2
  1539  000A50  C018  FFDD         	movff	??_LCD_Char+1,postdec2
  1540                           
  1541                           ;PICLibs.h: 177: dat = dat / 2;
  1542  000A54  C029  F00F         	movff	LCD_Char@dat,___awdiv@dividend
  1543  000A58  6A10               	clrf	___awdiv@dividend+1,c
  1544  000A5A  0E00               	movlw	0
  1545  000A5C  6E12               	movwf	___awdiv@divisor+1,c
  1546  000A5E  0E02               	movlw	2
  1547  000A60  6E11               	movwf	___awdiv@divisor,c
  1548  000A62  ECBB  F005         	call	___awdiv	;wreg free
  1549  000A66  500F               	movf	?___awdiv,w,c
  1550  000A68  6E29               	movwf	LCD_Char@dat,c
  1551  000A6A  4A2A               	infsnz	LCD_Char@i,f,c
  1552  000A6C  2A2B               	incf	LCD_Char@i+1,f,c
  1553  000A6E  BE2B               	btfsc	LCD_Char@i+1,7,c
  1554  000A70  D7E0               	goto	l1102
  1555  000A72  502B               	movf	LCD_Char@i+1,w,c
  1556  000A74  E101               	bnz	u870
  1557  000A76  D7D9               	goto	L2
  1558  000A78                     u870:
  1559  000A78                     l81:
  1560                           
  1561                           ;PICLibs.h: 178: }
  1562                           ;PICLibs.h: 181: LATB4 = OUTS[4];
  1563  000A78  A021               	btfss	LCD_Char@OUTS+8,0,c
  1564  000A7A  D002               	goto	u880
  1565  000A7C  888A               	bsf	3978,4,c	;volatile
  1566  000A7E  D001               	goto	u895
  1567  000A80                     u880:
  1568  000A80  988A               	bcf	3978,4,c	;volatile
  1569  000A82                     u895:
  1570                           
  1571                           ;PICLibs.h: 182: LATB5 = OUTS[5];
  1572  000A82  A023               	btfss	LCD_Char@OUTS+10,0,c
  1573  000A84  D002               	goto	u900
  1574  000A86  8A8A               	bsf	3978,5,c	;volatile
  1575  000A88  D001               	goto	u915
  1576  000A8A                     u900:
  1577  000A8A  9A8A               	bcf	3978,5,c	;volatile
  1578  000A8C                     u915:
  1579                           
  1580                           ;PICLibs.h: 183: LATB6 = OUTS[6];
  1581  000A8C  A025               	btfss	LCD_Char@OUTS+12,0,c
  1582  000A8E  D002               	goto	u920
  1583  000A90  8C8A               	bsf	3978,6,c	;volatile
  1584  000A92  D001               	goto	u935
  1585  000A94                     u920:
  1586  000A94  9C8A               	bcf	3978,6,c	;volatile
  1587  000A96                     u935:
  1588                           
  1589                           ;PICLibs.h: 184: LATB7 = OUTS[7];
  1590  000A96  A027               	btfss	LCD_Char@OUTS+14,0,c
  1591  000A98  D002               	goto	u940
  1592  000A9A  8E8A               	bsf	3978,7,c	;volatile
  1593  000A9C  D001               	goto	u955
  1594  000A9E                     u940:
  1595  000A9E  9E8A               	bcf	3978,7,c	;volatile
  1596  000AA0                     u955:
  1597                           
  1598                           ;PICLibs.h: 185: LATB2 = 1;
  1599  000AA0  848A               	bsf	3978,2,c	;volatile
  1600                           
  1601                           ;PICLibs.h: 186: LATB3 = 1;
  1602  000AA2  868A               	bsf	3978,3,c	;volatile
  1603                           
  1604                           ;PICLibs.h: 187: __nop();
  1605  000AA4  F000               	nop	
  1606                           
  1607                           ;PICLibs.h: 188: LATB3 = 0;
  1608  000AA6  968A               	bcf	3978,3,c	;volatile
  1609                           
  1610                           ;PICLibs.h: 189: delay_ms(1);
  1611  000AA8  0E00               	movlw	0
  1612  000AAA  6E10               	movwf	delay_ms@tempo+1,c
  1613  000AAC  0E01               	movlw	1
  1614  000AAE  6E0F               	movwf	delay_ms@tempo,c
  1615  000AB0  EC4D  F006         	call	_delay_ms	;wreg free
  1616                           
  1617                           ;PICLibs.h: 191: LATB4 = OUTS[0];
  1618  000AB4  A019               	btfss	LCD_Char@OUTS,0,c
  1619  000AB6  D002               	goto	u960
  1620  000AB8  888A               	bsf	3978,4,c	;volatile
  1621  000ABA  D001               	goto	l1114
  1622  000ABC                     u960:
  1623  000ABC  988A               	bcf	3978,4,c	;volatile
  1624  000ABE                     l1114:
  1625                           
  1626                           ;PICLibs.h: 192: LATB5 = OUTS[1];
  1627  000ABE  A01B               	btfss	LCD_Char@OUTS+2,0,c
  1628  000AC0  D002               	goto	u980
  1629  000AC2  8A8A               	bsf	3978,5,c	;volatile
  1630  000AC4  D001               	goto	l1116
  1631  000AC6                     u980:
  1632  000AC6  9A8A               	bcf	3978,5,c	;volatile
  1633  000AC8                     l1116:
  1634                           
  1635                           ;PICLibs.h: 193: LATB6 = OUTS[2];
  1636  000AC8  A01D               	btfss	LCD_Char@OUTS+4,0,c
  1637  000ACA  D002               	goto	u1000
  1638  000ACC  8C8A               	bsf	3978,6,c	;volatile
  1639  000ACE  D001               	goto	l1118
  1640  000AD0                     u1000:
  1641  000AD0  9C8A               	bcf	3978,6,c	;volatile
  1642  000AD2                     l1118:
  1643                           
  1644                           ;PICLibs.h: 194: LATB7 = OUTS[3];
  1645  000AD2  A01F               	btfss	LCD_Char@OUTS+6,0,c
  1646  000AD4  D002               	goto	u1020
  1647  000AD6  8E8A               	bsf	3978,7,c	;volatile
  1648  000AD8  D001               	goto	l1120
  1649  000ADA                     u1020:
  1650  000ADA  9E8A               	bcf	3978,7,c	;volatile
  1651  000ADC                     l1120:
  1652                           
  1653                           ;PICLibs.h: 195: LATB3 = 1;
  1654  000ADC  868A               	bsf	3978,3,c	;volatile
  1655                           
  1656                           ;PICLibs.h: 196: __nop();
  1657  000ADE  F000               	nop	
  1658                           
  1659                           ;PICLibs.h: 197: LATB3 = 0;
  1660  000AE0  968A               	bcf	3978,3,c	;volatile
  1661                           
  1662                           ;PICLibs.h: 198: delay_ms(3);
  1663  000AE2  0E00               	movlw	0
  1664  000AE4  6E10               	movwf	delay_ms@tempo+1,c
  1665  000AE6  0E03               	movlw	3
  1666  000AE8  6E0F               	movwf	delay_ms@tempo,c
  1667  000AEA  EC4D  F006         	call	_delay_ms	;wreg free
  1668  000AEE  0012               	return		;funcret
  1669  000AF0                     __end_of_LCD_Char:
  1670                           	opt stack 0
  1671                           tblptru	equ	0xFF8
  1672                           tblptrh	equ	0xFF7
  1673                           tblptrl	equ	0xFF6
  1674                           tablat	equ	0xFF5
  1675                           intcon	equ	0xFF2
  1676                           wreg	equ	0xFE8
  1677                           postinc2	equ	0xFDE
  1678                           postdec2	equ	0xFDD
  1679                           fsr2h	equ	0xFDA
  1680                           fsr2l	equ	0xFD9
  1681                           status	equ	0xFD8
  1682                           
  1683 ;; *************** function _delay_ms *****************
  1684 ;; Defined at:
  1685 ;;		line 101 in file "PICLibs.h"
  1686 ;; Parameters:    Size  Location     Type
  1687 ;;  tempo           2   14[COMRAM] unsigned int 
  1688 ;; Auto vars:     Size  Location     Type
  1689 ;;  j               4   18[COMRAM] unsigned long 
  1690 ;;  i               2   16[COMRAM] unsigned int 
  1691 ;; Return value:  Size  Location     Type
  1692 ;;                  1    wreg      void 
  1693 ;; Registers used:
  1694 ;;		wreg, status,2, status,0
  1695 ;; Tracked objects:
  1696 ;;		On entry : 0/0
  1697 ;;		On exit  : 0/0
  1698 ;;		Unchanged: 0/0
  1699 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1700 ;;      Params:         2       0       0       0       0       0       0       0       0
  1701 ;;      Locals:         6       0       0       0       0       0       0       0       0
  1702 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1703 ;;      Totals:         8       0       0       0       0       0       0       0       0
  1704 ;;Total ram usage:        8 bytes
  1705 ;; Hardware stack levels used:    1
  1706 ;; Hardware stack levels required when called:    1
  1707 ;; This function calls:
  1708 ;;		Nothing
  1709 ;; This function is called by:
  1710 ;;		_LCD_Command
  1711 ;;		_LCD_Init
  1712 ;;		_LCD_Char
  1713 ;;		_LCD_Clear
  1714 ;; This function uses a non-reentrant model
  1715 ;;
  1716                           
  1717                           	psect	text12
  1718  000C9A                     __ptext12:
  1719                           	opt stack 0
  1720  000C9A                     _delay_ms:
  1721                           	opt stack 27
  1722                           
  1723                           ;PICLibs.h: 103: unsigned int i;
  1724                           ;PICLibs.h: 104: unsigned long j;
  1725                           ;PICLibs.h: 106: for(i=0;i<tempo;i++){
  1726                           
  1727                           ;incstack = 0
  1728  000C9A  0E00               	movlw	0
  1729  000C9C  6E12               	movwf	delay_ms@i+1,c
  1730  000C9E  0E00               	movlw	0
  1731  000CA0  6E11               	movwf	delay_ms@i,c
  1732  000CA2  D019               	goto	l1020
  1733  000CA4                     l1010:
  1734                           
  1735                           ;PICLibs.h: 107: for(j=0;j<8000000/65200 ;j++);
  1736  000CA4  0E00               	movlw	0
  1737  000CA6  6E13               	movwf	delay_ms@j,c
  1738  000CA8  0E00               	movlw	0
  1739  000CAA  6E14               	movwf	delay_ms@j+1,c
  1740  000CAC  0E00               	movlw	0
  1741  000CAE  6E15               	movwf	delay_ms@j+2,c
  1742  000CB0  0E00               	movlw	0
  1743  000CB2  6E16               	movwf	delay_ms@j+3,c
  1744  000CB4                     l1012:
  1745  000CB4  5016               	movf	delay_ms@j+3,w,c
  1746  000CB6  1015               	iorwf	delay_ms@j+2,w,c
  1747  000CB8  1014               	iorwf	delay_ms@j+1,w,c
  1748  000CBA  E10B               	bnz	l1018
  1749  000CBC  0E7A               	movlw	122
  1750  000CBE  5C13               	subwf	delay_ms@j,w,c
  1751  000CC0  B0D8               	btfsc	status,0,c
  1752  000CC2  D007               	goto	l1018
  1753  000CC4  0E01               	movlw	1
  1754  000CC6  2613               	addwf	delay_ms@j,f,c
  1755  000CC8  0E00               	movlw	0
  1756  000CCA  2214               	addwfc	delay_ms@j+1,f,c
  1757  000CCC  2215               	addwfc	delay_ms@j+2,f,c
  1758  000CCE  2216               	addwfc	delay_ms@j+3,f,c
  1759  000CD0  D7F1               	goto	l1012
  1760  000CD2                     l1018:
  1761  000CD2  4A11               	infsnz	delay_ms@i,f,c
  1762  000CD4  2A12               	incf	delay_ms@i+1,f,c
  1763  000CD6                     l1020:
  1764  000CD6  500F               	movf	delay_ms@tempo,w,c
  1765  000CD8  5C11               	subwf	delay_ms@i,w,c
  1766  000CDA  5010               	movf	delay_ms@tempo+1,w,c
  1767  000CDC  5812               	subwfb	delay_ms@i+1,w,c
  1768  000CDE  B0D8               	btfsc	status,0,c
  1769  000CE0  0012               	return	
  1770  000CE2  D7E0               	goto	l1010
  1771  000CE4                     __end_of_delay_ms:
  1772                           	opt stack 0
  1773                           tblptru	equ	0xFF8
  1774                           tblptrh	equ	0xFF7
  1775                           tblptrl	equ	0xFF6
  1776                           tablat	equ	0xFF5
  1777                           intcon	equ	0xFF2
  1778                           wreg	equ	0xFE8
  1779                           postinc2	equ	0xFDE
  1780                           postdec2	equ	0xFDD
  1781                           fsr2h	equ	0xFDA
  1782                           fsr2l	equ	0xFD9
  1783                           status	equ	0xFD8
  1784                           
  1785 ;; *************** function ___awdiv *****************
  1786 ;; Defined at:
  1787 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.38\sources\common\awdiv.c"
  1788 ;; Parameters:    Size  Location     Type
  1789 ;;  dividend        2   14[COMRAM] int 
  1790 ;;  divisor         2   16[COMRAM] int 
  1791 ;; Auto vars:     Size  Location     Type
  1792 ;;  quotient        2   20[COMRAM] int 
  1793 ;;  sign            1   19[COMRAM] unsigned char 
  1794 ;;  counter         1   18[COMRAM] unsigned char 
  1795 ;; Return value:  Size  Location     Type
  1796 ;;                  2   14[COMRAM] int 
  1797 ;; Registers used:
  1798 ;;		wreg, status,2, status,0
  1799 ;; Tracked objects:
  1800 ;;		On entry : 0/0
  1801 ;;		On exit  : 0/0
  1802 ;;		Unchanged: 0/0
  1803 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1804 ;;      Params:         4       0       0       0       0       0       0       0       0
  1805 ;;      Locals:         4       0       0       0       0       0       0       0       0
  1806 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1807 ;;      Totals:         8       0       0       0       0       0       0       0       0
  1808 ;;Total ram usage:        8 bytes
  1809 ;; Hardware stack levels used:    1
  1810 ;; Hardware stack levels required when called:    1
  1811 ;; This function calls:
  1812 ;;		Nothing
  1813 ;; This function is called by:
  1814 ;;		_LCD_Command
  1815 ;;		_LCD_Char
  1816 ;; This function uses a non-reentrant model
  1817 ;;
  1818                           
  1819                           	psect	text13
  1820  000B76                     __ptext13:
  1821                           	opt stack 0
  1822  000B76                     ___awdiv:
  1823                           	opt stack 26
  1824                           
  1825                           ;incstack = 0
  1826  000B76  0E00               	movlw	0
  1827  000B78  6E14               	movwf	___awdiv@sign,c
  1828  000B7A  AE12               	btfss	___awdiv@divisor+1,7,c
  1829  000B7C  D006               	goto	l1030
  1830  000B7E  6C11               	negf	___awdiv@divisor,c
  1831  000B80  1E12               	comf	___awdiv@divisor+1,f,c
  1832  000B82  B0D8               	btfsc	status,0,c
  1833  000B84  2A12               	incf	___awdiv@divisor+1,f,c
  1834  000B86  0E01               	movlw	1
  1835  000B88  6E14               	movwf	___awdiv@sign,c
  1836  000B8A                     l1030:
  1837  000B8A  AE10               	btfss	___awdiv@dividend+1,7,c
  1838  000B8C  D006               	goto	l1036
  1839  000B8E  6C0F               	negf	___awdiv@dividend,c
  1840  000B90  1E10               	comf	___awdiv@dividend+1,f,c
  1841  000B92  B0D8               	btfsc	status,0,c
  1842  000B94  2A10               	incf	___awdiv@dividend+1,f,c
  1843  000B96  0E01               	movlw	1
  1844  000B98  1A14               	xorwf	___awdiv@sign,f,c
  1845  000B9A                     l1036:
  1846  000B9A  0E00               	movlw	0
  1847  000B9C  6E16               	movwf	___awdiv@quotient+1,c
  1848  000B9E  0E00               	movlw	0
  1849  000BA0  6E15               	movwf	___awdiv@quotient,c
  1850  000BA2  5011               	movf	___awdiv@divisor,w,c
  1851  000BA4  1012               	iorwf	___awdiv@divisor+1,w,c
  1852  000BA6  B4D8               	btfsc	status,2,c
  1853  000BA8  D01C               	goto	l1058
  1854  000BAA  0E01               	movlw	1
  1855  000BAC  6E13               	movwf	___awdiv@counter,c
  1856  000BAE  D004               	goto	l1044
  1857  000BB0                     l1042:
  1858  000BB0  90D8               	bcf	status,0,c
  1859  000BB2  3611               	rlcf	___awdiv@divisor,f,c
  1860  000BB4  3612               	rlcf	___awdiv@divisor+1,f,c
  1861  000BB6  2A13               	incf	___awdiv@counter,f,c
  1862  000BB8                     l1044:
  1863  000BB8  AE12               	btfss	___awdiv@divisor+1,7,c
  1864  000BBA  D7FA               	goto	l1042
  1865  000BBC                     l1046:
  1866  000BBC  90D8               	bcf	status,0,c
  1867  000BBE  3615               	rlcf	___awdiv@quotient,f,c
  1868  000BC0  3616               	rlcf	___awdiv@quotient+1,f,c
  1869  000BC2  5011               	movf	___awdiv@divisor,w,c
  1870  000BC4  5C0F               	subwf	___awdiv@dividend,w,c
  1871  000BC6  5012               	movf	___awdiv@divisor+1,w,c
  1872  000BC8  5810               	subwfb	___awdiv@dividend+1,w,c
  1873  000BCA  A0D8               	btfss	status,0,c
  1874  000BCC  D005               	goto	l1054
  1875  000BCE  5011               	movf	___awdiv@divisor,w,c
  1876  000BD0  5E0F               	subwf	___awdiv@dividend,f,c
  1877  000BD2  5012               	movf	___awdiv@divisor+1,w,c
  1878  000BD4  5A10               	subwfb	___awdiv@dividend+1,f,c
  1879  000BD6  8015               	bsf	___awdiv@quotient,0,c
  1880  000BD8                     l1054:
  1881  000BD8  90D8               	bcf	status,0,c
  1882  000BDA  3212               	rrcf	___awdiv@divisor+1,f,c
  1883  000BDC  3211               	rrcf	___awdiv@divisor,f,c
  1884  000BDE  2E13               	decfsz	___awdiv@counter,f,c
  1885  000BE0  D7ED               	goto	l1046
  1886  000BE2                     l1058:
  1887  000BE2  5014               	movf	___awdiv@sign,w,c
  1888  000BE4  B4D8               	btfsc	status,2,c
  1889  000BE6  D004               	goto	l1062
  1890  000BE8  6C15               	negf	___awdiv@quotient,c
  1891  000BEA  1E16               	comf	___awdiv@quotient+1,f,c
  1892  000BEC  B0D8               	btfsc	status,0,c
  1893  000BEE  2A16               	incf	___awdiv@quotient+1,f,c
  1894  000BF0                     l1062:
  1895  000BF0  C015  F00F         	movff	___awdiv@quotient,?___awdiv
  1896  000BF4  C016  F010         	movff	___awdiv@quotient+1,?___awdiv+1
  1897  000BF8  0012               	return	
  1898  000BFA                     __end_of___awdiv:
  1899                           	opt stack 0
  1900                           tblptru	equ	0xFF8
  1901                           tblptrh	equ	0xFF7
  1902                           tblptrl	equ	0xFF6
  1903                           tablat	equ	0xFF5
  1904                           intcon	equ	0xFF2
  1905                           wreg	equ	0xFE8
  1906                           postinc2	equ	0xFDE
  1907                           postdec2	equ	0xFDD
  1908                           fsr2h	equ	0xFDA
  1909                           fsr2l	equ	0xFD9
  1910                           status	equ	0xFD8
  1911                           
  1912 ;; *************** function _TripaSeca *****************
  1913 ;; Defined at:
  1914 ;;		line 38 in file "main.c"
  1915 ;; Parameters:    Size  Location     Type
  1916 ;;		None
  1917 ;; Auto vars:     Size  Location     Type
  1918 ;;		None
  1919 ;; Return value:  Size  Location     Type
  1920 ;;                  1    wreg      void 
  1921 ;; Registers used:
  1922 ;;		wreg, status,2
  1923 ;; Tracked objects:
  1924 ;;		On entry : 0/0
  1925 ;;		On exit  : 0/0
  1926 ;;		Unchanged: 0/0
  1927 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1928 ;;      Params:         0       0       0       0       0       0       0       0       0
  1929 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1930 ;;      Temps:         14       0       0       0       0       0       0       0       0
  1931 ;;      Totals:        14       0       0       0       0       0       0       0       0
  1932 ;;Total ram usage:       14 bytes
  1933 ;; Hardware stack levels used:    1
  1934 ;; This function calls:
  1935 ;;		Nothing
  1936 ;; This function is called by:
  1937 ;;		Interrupt level 2
  1938 ;; This function uses a non-reentrant model
  1939 ;;
  1940                           
  1941                           	psect	intcode
  1942  000008                     __pintcode:
  1943                           	opt stack 0
  1944  000008                     _TripaSeca:
  1945                           	opt stack 26
  1946                           
  1947                           ;incstack = 0
  1948  000008  8235               	bsf	btemp,1,c	;set compiler interrupt flag (level 2)
  1949  00000A  CFFA F001          	movff	pclath,??_TripaSeca
  1950  00000E  CFFB F002          	movff	pclatu,??_TripaSeca+1
  1951  000012  ED78  F005         	call	int_func,f	;refresh shadow registers
  1952                           pclatu	equ	0xFFB
  1953                           pclath	equ	0xFFA
  1954                           tblptru	equ	0xFF8
  1955                           tblptrh	equ	0xFF7
  1956                           tblptrl	equ	0xFF6
  1957                           tablat	equ	0xFF5
  1958                           intcon	equ	0xFF2
  1959                           wreg	equ	0xFE8
  1960                           postinc2	equ	0xFDE
  1961                           postdec2	equ	0xFDD
  1962                           fsr2h	equ	0xFDA
  1963                           fsr2l	equ	0xFD9
  1964                           status	equ	0xFD8
  1965                           
  1966                           	psect	intcode_body
  1967  000AF0                     __pintcode_body:
  1968                           	opt stack 26
  1969  000AF0                     int_func:
  1970                           	opt stack 26
  1971  000AF0  0006               	pop		; remove dummy address from shadow register refresh
  1972  000AF2  CFE9 F003          	movff	fsr0l,??_TripaSeca+2
  1973  000AF6  CFEA F004          	movff	fsr0h,??_TripaSeca+3
  1974  000AFA  CFE1 F005          	movff	fsr1l,??_TripaSeca+4
  1975  000AFE  CFE2 F006          	movff	fsr1h,??_TripaSeca+5
  1976  000B02  CFD9 F007          	movff	fsr2l,??_TripaSeca+6
  1977  000B06  CFDA F008          	movff	fsr2h,??_TripaSeca+7
  1978  000B0A  CFF3 F009          	movff	prodl,??_TripaSeca+8
  1979  000B0E  CFF4 F00A          	movff	prodh,??_TripaSeca+9
  1980  000B12  CFF6 F00B          	movff	tblptrl,??_TripaSeca+10
  1981  000B16  CFF7 F00C          	movff	tblptrh,??_TripaSeca+11
  1982  000B1A  CFF8 F00D          	movff	tblptru,??_TripaSeca+12
  1983  000B1E  CFF5 F00E          	movff	tablat,??_TripaSeca+13
  1984                           
  1985                           ;main.c: 40: if(TMR0IF){
  1986  000B22  A4F2               	btfss	intcon,2,c	;volatile
  1987  000B24  D00A               	goto	i2l114
  1988                           
  1989                           ;main.c: 42: TMR0IF = 0x00;
  1990  000B26  94F2               	bcf	intcon,2,c	;volatile
  1991                           
  1992                           ;main.c: 44: TMR0H = (valorADC) >> 8;
  1993  000B28  5034               	movf	_valorADC+1,w,c
  1994  000B2A  6ED7               	movwf	4055,c	;volatile
  1995                           
  1996                           ;main.c: 45: TMR0L = (valorADC & 0x00FF);
  1997  000B2C  C033  FFD6         	movff	_valorADC,4054	;volatile
  1998                           
  1999                           ;main.c: 47: LATC7 = !LATC7;
  2000  000B30  BE8B               	btfsc	3979,7,c	;volatile
  2001  000B32  D002               	goto	i2u56_40
  2002  000B34  8E8B               	bsf	3979,7,c	;volatile
  2003  000B36  D001               	goto	i2l114
  2004  000B38                     i2u56_40:
  2005  000B38  9E8B               	bcf	3979,7,c	;volatile
  2006  000B3A                     i2l114:
  2007  000B3A  C00E  FFF5         	movff	??_TripaSeca+13,tablat
  2008  000B3E  C00D  FFF8         	movff	??_TripaSeca+12,tblptru
  2009  000B42  C00C  FFF7         	movff	??_TripaSeca+11,tblptrh
  2010  000B46  C00B  FFF6         	movff	??_TripaSeca+10,tblptrl
  2011  000B4A  C00A  FFF4         	movff	??_TripaSeca+9,prodh
  2012  000B4E  C009  FFF3         	movff	??_TripaSeca+8,prodl
  2013  000B52  C008  FFDA         	movff	??_TripaSeca+7,fsr2h
  2014  000B56  C007  FFD9         	movff	??_TripaSeca+6,fsr2l
  2015  000B5A  C006  FFE2         	movff	??_TripaSeca+5,fsr1h
  2016  000B5E  C005  FFE1         	movff	??_TripaSeca+4,fsr1l
  2017  000B62  C004  FFEA         	movff	??_TripaSeca+3,fsr0h
  2018  000B66  C003  FFE9         	movff	??_TripaSeca+2,fsr0l
  2019  000B6A  C002  FFFB         	movff	??_TripaSeca+1,pclatu
  2020  000B6E  C001  FFFA         	movff	??_TripaSeca,pclath
  2021  000B72  9235               	bcf	btemp,1,c	;clear compiler interrupt flag (level 2)
  2022  000B74  0011               	retfie		f
  2023  000B76                     __end_of_TripaSeca:
  2024                           	opt stack 0
  2025                           pclatu	equ	0xFFB
  2026                           pclath	equ	0xFFA
  2027                           tblptru	equ	0xFF8
  2028                           tblptrh	equ	0xFF7
  2029                           tblptrl	equ	0xFF6
  2030                           tablat	equ	0xFF5
  2031                           prodh	equ	0xFF4
  2032                           prodl	equ	0xFF3
  2033                           intcon	equ	0xFF2
  2034                           fsr0h	equ	0xFEA
  2035                           fsr0l	equ	0xFE9
  2036                           wreg	equ	0xFE8
  2037                           fsr1h	equ	0xFE2
  2038                           fsr1l	equ	0xFE1
  2039                           postinc2	equ	0xFDE
  2040                           postdec2	equ	0xFDD
  2041                           fsr2h	equ	0xFDA
  2042                           fsr2l	equ	0xFD9
  2043                           status	equ	0xFD8
  2044                           pclatu	equ	0xFFB
  2045                           pclath	equ	0xFFA
  2046                           tblptru	equ	0xFF8
  2047                           tblptrh	equ	0xFF7
  2048                           tblptrl	equ	0xFF6
  2049                           tablat	equ	0xFF5
  2050                           prodh	equ	0xFF4
  2051                           prodl	equ	0xFF3
  2052                           intcon	equ	0xFF2
  2053                           fsr0h	equ	0xFEA
  2054                           fsr0l	equ	0xFE9
  2055                           wreg	equ	0xFE8
  2056                           fsr1h	equ	0xFE2
  2057                           fsr1l	equ	0xFE1
  2058                           postinc2	equ	0xFDE
  2059                           postdec2	equ	0xFDD
  2060                           fsr2h	equ	0xFDA
  2061                           fsr2l	equ	0xFD9
  2062                           status	equ	0xFD8
  2063                           
  2064                           	psect	rparam
  2065  0000                     pclatu	equ	0xFFB
  2066                           pclath	equ	0xFFA
  2067                           tblptru	equ	0xFF8
  2068                           tblptrh	equ	0xFF7
  2069                           tblptrl	equ	0xFF6
  2070                           tablat	equ	0xFF5
  2071                           prodh	equ	0xFF4
  2072                           prodl	equ	0xFF3
  2073                           intcon	equ	0xFF2
  2074                           fsr0h	equ	0xFEA
  2075                           fsr0l	equ	0xFE9
  2076                           wreg	equ	0xFE8
  2077                           fsr1h	equ	0xFE2
  2078                           fsr1l	equ	0xFE1
  2079                           postinc2	equ	0xFDE
  2080                           postdec2	equ	0xFDD
  2081                           fsr2h	equ	0xFDA
  2082                           fsr2l	equ	0xFD9
  2083                           status	equ	0xFD8
  2084                           
  2085                           	psect	temp
  2086  000035                     btemp:
  2087                           	opt stack 0
  2088  000035                     	ds	1
  2089  0000                     int$flags	set	btemp
  2090                           pclatu	equ	0xFFB
  2091                           pclath	equ	0xFFA
  2092                           tblptru	equ	0xFF8
  2093                           tblptrh	equ	0xFF7
  2094                           tblptrl	equ	0xFF6
  2095                           tablat	equ	0xFF5
  2096                           prodh	equ	0xFF4
  2097                           prodl	equ	0xFF3
  2098                           intcon	equ	0xFF2
  2099                           fsr0h	equ	0xFEA
  2100                           fsr0l	equ	0xFE9
  2101                           wreg	equ	0xFE8
  2102                           fsr1h	equ	0xFE2
  2103                           fsr1l	equ	0xFE1
  2104                           postinc2	equ	0xFDE
  2105                           postdec2	equ	0xFDD
  2106                           fsr2h	equ	0xFDA
  2107                           fsr2l	equ	0xFD9
  2108                           status	equ	0xFD8


Data Sizes:
    Strings     14
    Constant    0
    Data        0
    BSS         0
    Persistent  2
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     50      52
    BANK0           160      0       0
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0

Pointer List with Targets:

    LCD_String_xy@msg	PTR const unsigned char  size(2) Largest target is 14
		 -> STR_1(CODE[14]), 

    LCD_String@msg	PTR const unsigned char  size(2) Largest target is 14
		 -> STR_1(CODE[14]), 


Critical Paths under _main in COMRAM

    _main->_LCD_String_xy
    _LCD_Init->_LCD_Command
    ___lwdiv->___lwmod
    _LCD_String_xy->_LCD_String
    _LCD_String->_LCD_Char
    _LCD_Char_xy->_LCD_Char
    _LCD_Char_xy->_LCD_Command
    _LCD_Command->___awdiv
    _LCD_Command->_delay_ms
    _LCD_Char->___awdiv
    _LCD_Char->_delay_ms

Critical Paths under _TripaSeca in COMRAM

    None.

Critical Paths under _main in BANK0

    None.

Critical Paths under _TripaSeca in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _TripaSeca in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _TripaSeca in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _TripaSeca in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _TripaSeca in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _TripaSeca in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _TripaSeca in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _TripaSeca in BANK7

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0   10114
                        _LCD_Char_xy
                      _LCD_String_xy
                            ___lwdiv
                            ___lwmod
                        _leitura_ADC
                              _setup
 ---------------------------------------------------------------------------------
 (1) _setup                                                0     0      0    2064
                     _ADC_Inicializa
                           _LCD_Init
                        _leitura_ADC
 ---------------------------------------------------------------------------------
 (2) _leitura_ADC                                          3     1      2     150
                                             14 COMRAM     3     1      2
 ---------------------------------------------------------------------------------
 (2) _LCD_Init                                             0     0      0    1828
                        _LCD_Command
                           _delay_ms
 ---------------------------------------------------------------------------------
 (2) _ADC_Inicializa                                       3     1      2      86
                                             14 COMRAM     3     1      2
 ---------------------------------------------------------------------------------
 (1) ___lwmod                                              5     1      4     671
                                             14 COMRAM     5     1      4
 ---------------------------------------------------------------------------------
 (1) ___lwdiv                                              7     3      4     674
                                             19 COMRAM     7     3      4
                            ___lwmod (ARG)
 ---------------------------------------------------------------------------------
 (1) _LCD_String_xy                                        5     2      3    3076
                                             45 COMRAM     5     2      3
                        _LCD_Command
                         _LCD_String
 ---------------------------------------------------------------------------------
 (2) _LCD_String                                           2     0      2    1461
                                             43 COMRAM     2     0      2
                           _LCD_Char
 ---------------------------------------------------------------------------------
 (1) _LCD_Char_xy                                          4     2      2    3479
                                             43 COMRAM     4     2      2
                           _LCD_Char
                        _LCD_Command
                            ___lwdiv (ARG)
                            ___lwmod (ARG)
 ---------------------------------------------------------------------------------
 (3) _LCD_Command                                         21    21      0    1352
                                             22 COMRAM    21    21      0
                            ___awdiv
                           _delay_ms
 ---------------------------------------------------------------------------------
 (3) _LCD_Char                                            21    21      0    1352
                                             22 COMRAM    21    21      0
                            ___awdiv
                           _delay_ms
 ---------------------------------------------------------------------------------
 (3) _delay_ms                                             8     6      2     476
                                             14 COMRAM     8     6      2
 ---------------------------------------------------------------------------------
 (4) ___awdiv                                              8     4      4     556
                                             14 COMRAM     8     4      4
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (5) _TripaSeca                                           14    14      0       0
                                              0 COMRAM    14    14      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 5
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _LCD_Char_xy
     _LCD_Char
       ___awdiv
       _delay_ms
     _LCD_Command
       ___awdiv
       _delay_ms
     ___lwdiv (ARG)
       ___lwmod (ARG)
     ___lwmod (ARG)
   _LCD_String_xy
     _LCD_Command
       ___awdiv
       _delay_ms
     _LCD_String
       _LCD_Char
         ___awdiv
         _delay_ms
   ___lwdiv
     ___lwmod (ARG)
   ___lwmod
   _leitura_ADC
   _setup
     _ADC_Inicializa
     _LCD_Init
       _LCD_Command
         ___awdiv
         _delay_ms
       _delay_ms
     _leitura_ADC

 _TripaSeca (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMRAM           5E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMRAM              5E     32      34       1       55.3%
STACK                0      0       0       2        0.0%
DATA                 0      0      34       3        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0      0       0       5        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
ABS                  0      0      34      20        0.0%
BIGRAM             7FF      0       0      21        0.0%
BITSFR               0      0       0      40        0.0%
SFR                  0      0       0      40        0.0%


Microchip Technology PIC18 Macro Assembler V1.38 build -256452561 
Symbol Table                                                                                   Sun Aug 30 22:25:52 2020

           ?_LCD_Char_xy 002C             ?_LCD_Command 0001                       l81 0A78  
                     l73 09A0                       l58 0E48             ___awdiv@sign 0014  
            __CFG_BORV$3 000000              ?_LCD_String 002C             __CFG_CP0$OFF 000000  
           __CFG_CP1$OFF 000000             __CFG_CP2$OFF 000000             __CFG_CP3$OFF 000000  
                    l523 0C42                      l533 0D60             __CFG_CPB$OFF 000000  
           __CFG_CPD$OFF 000000                      u700 09A8                      u800 09EE  
                    u720 09B2                      u715 09AA                      u900 0A8A  
                    u820 09F8                      u740 09BC                      u735 09B4  
                    u920 0A94                      u840 0A02                      u760 09C6  
                    u690 09A0                      u915 0A8C                      u755 09BE  
                    u940 0A9E                      u780 09E4                      u870 0A78  
                    u935 0A96                      u775 09C8                      u960 0ABC  
                    u880 0A80                      u955 0AA0                      u980 0AC6  
                    u895 0A82             __CFG_BOR$OFF 000000                      wreg 000FE8  
           __CFG_LVP$OFF 000000              LCD_Char@dat 0029             __CFG_WDT$OFF 000000  
                   l1010 0CA4                     l1012 0CB4                     l1020 0CD6  
                   l1030 0B8A                     l1102 0A32                     l1120 0ADC  
                   l1042 0BB0                     l1018 0CD2                     l1114 0ABE  
                   l1044 0BB8                     l1036 0B9A                     l1116 0AC8  
                   l1220 0C1C                     l1062 0BF0                     l1054 0BD8  
                   l1046 0BBC                     l1118 0AD2                     l1072 095A  
                   l1216 0C10                     l1240 0D42                     l1058 0BE2  
                   l1090 0A04                     l1170 0D82                     l1162 0DF6  
                   l1218 0C18                     l1084 09E6                     l1228 0C38  
                   l1244 0D56                     l1236 0D36                     l1086 09F0  
                   l1166 0D72                     l1158 0DE2                     l1182 0CEC  
                   l1238 0D3E                     l1254 0814                     l1088 09FA  
                   l1176 0D92                     l1192 0D0C                     l1178 0DA0  
                   l1186 0CFC                     l1194 0D1A                     STR_1 0801  
                   u1000 0AD0                     u1020 0ADA                     u1135 0822  
                   u1065 0C7A             __CFG_PWRT$ON 000000                     _main 0810  
                   fsr0h 000FEA                     fsr1h 000FE2                     fsr0l 000FE9  
                   fsr2h 000FDA                     fsr1l 000FE1                     fsr2l 000FD9  
                   btemp 0035                     pclat 000FFA                     prodh 000FF4  
                   prodl 000FF3                     start 0016            __CFG_IESO$OFF 000000  
          _LCD_String_xy 0CE4            __CFG_MCLRE$ON 000000             ___param_bank 000010  
           LCD_Char@OUTS 0019         __end_of_LCD_Char 0AF0         __end_of_LCD_Init 0DE0  
          __CFG_PLLDIV$5 000000           __CFG_CCP2MX$ON 000000                    ?_main 0001  
           ?_leitura_ADC 000F          __end_of___awdiv 0BFA                    _ADRES 000FC3  
                  _T0CON 000FD5          ___awdiv@divisor 0011                    _LATB2 007C52  
                  _LATB3 007C53                    _LATB4 007C54                    _LATB5 007C55  
                  _LATB6 007C56                    _LATB7 007C57                    _LATC7 007C5F  
        __end_of___lwdiv 0C4C          __end_of___lwmod 0D6A                    i2l114 0B3A  
        ___awdiv@counter 0013                    _TMR0H 000FD7                    _TMR0L 000FD6  
          __CFG_USBDIV$2 000000                    _TRISA 000F92                    _TRISC 000F94  
          __CFG_WRT0$OFF 000000            __CFG_WRT1$OFF 000000            __CFG_WRT2$OFF 000000  
          __CFG_WRT3$OFF 000000           __CFG_EBTR0$OFF 000000           __CFG_FCMEN$OFF 000000  
         __CFG_EBTR1$OFF 000000           __CFG_EBTR2$OFF 000000           __CFG_EBTR3$OFF 000000  
          __CFG_WRTB$OFF 000000            __CFG_WRTC$OFF 000000            __CFG_WRTD$OFF 000000  
         __CFG_EBTRB$OFF 000000                    _setup 0C4C             LCD_Command@i 002A  
                  tablat 000FF5                    status 000FD8      __size_of_LCD_String 002A  
         ?_LCD_String_xy 002E          __initialization 0E56             __end_of_main 0940  
                 ??_main 0033            __activetblptr 000002         ___awdiv@dividend 000F  
                 ?_setup 0001         LCD_String_xy@msg 002F         LCD_String_xy@pos 002E  
       LCD_String_xy@row 0031                   _INTCON 000FF2                   _OSCCON 000FD3  
                 _TMR0IF 007F92                   _TRISB2 007C9A                   _TRISB3 007C9B  
                 _TRISB4 007C9C                   _TRISB5 007C9D                   _TRISB6 007C9E  
                 _TRISB7 007C9F         __end_of_delay_ms 0CE4           __CFG_XINST$OFF 000000  
              ??___awdiv 0013           __CFG_STVREN$ON 000000                ??___lwdiv 0018  
              ??___lwmod 0013     __size_of_LCD_Char_xy 003E         ___awdiv@quotient 0015  
   __size_of_LCD_Command 00D8             __mediumconst 0000                   tblptrh 000FF7  
                 tblptrl 000FF6                   tblptru 000FF8       __size_of_TripaSeca 0B6E  
              ?_LCD_Char 0001               __accesstop 0060  __end_of__initialization 0E56  
              ?_LCD_Init 0001          __CFG_PBADEN$OFF 000000          ??_LCD_String_xy 0031  
          ___rparam_used 000001                LCD_Char@i 002A           __pcstackCOMRAM 0001  
          __end_of_setup 0C9A             ??_LCD_String 002E     __size_of_leitura_ADC 0024  
                ??_setup 002C               ??_LCD_Char 0017               ??_LCD_Init 002C  
             __pnvCOMRAM 0033       __end_of_LCD_String 0E0A  __size_of_ADC_Inicializa 0028  
      __end_of_TripaSeca 0B76           LCD_Char_xy@dat 002D           LCD_Char_xy@pos 002C  
         LCD_Char_xy@row 002E                ?_delay_ms 000F                  i2u56_40 0B38  
    ADC_Inicializa@canal 000F          __CFG_VREGEN$OFF 000000            LCD_String@msg 002C  
                __Hparam 0000                  __Lparam 0000                  ___awdiv 0B76  
                ___lwdiv 0BFA                  ___lwmod 0D28             __psmallconst 0800  
                __pcinit 0E56                  __ramtop 0800                  __ptext0 0810  
                __ptext1 0C4C                  __ptext2 0E32                  __ptext3 0DA8  
                __ptext4 0E0A                  __ptext5 0D28                  __ptext6 0BFA  
                __ptext7 0CE4                  __ptext8 0DE0                  __ptext9 0D6A  
             ??_delay_ms 0011           __pintcode_body 0AF0     end_of_initialization 0E56  
         LCD_Command@cmd 0029            __Lmediumconst 0000                  int_func 0AF0  
                postdec2 000FDD                  postinc2 000FDE        __size_of_LCD_Char 00D8  
      __size_of_LCD_Init 0038           _ADC_Inicializa 0E0A            ??_LCD_Char_xy 002E  
          ??_LCD_Command 0017            delay_ms@tempo 000F      start_initialization 0E56  
 __end_of_ADC_Inicializa 0E32    __end_of_LCD_String_xy 0D28      LCD_Char_xy@location 002F  
       __CFG_LPT1OSC$OFF 000000            ??_leitura_ADC 0011                _TripaSeca 0008  
    __end_of_LCD_Char_xy 0DA8      __end_of_LCD_Command 0A18        __size_of_delay_ms 004A  
        ?_ADC_Inicializa 000F         ___lwdiv@dividend 0014         leitura_ADC@canal 000F  
              __pintcode 0008                 ?___awdiv 000F                 ?___lwdiv 0014  
               ?___lwmod 000F               ?_TripaSeca 0001              __smallconst 0800  
    __end_of_leitura_ADC 0E56         ___lwdiv@quotient 0018    LCD_String_xy@location 0032  
         __size_of_setup 004E                 _LCD_Char 0A18                 _LCD_Init 0DA8  
              delay_ms@i 0011                delay_ms@j 0013         __CFG_WDTPS$32768 000000  
            _LCD_Char_xy 0D6A              _LCD_Command 0940               _ADCON0bits 000FC2  
             _ADCON1bits 000FC1               _ADCON2bits 000FC0                 __Hrparam 0000  
               __Lrparam 0000         __size_of___awdiv 0084         __size_of___lwdiv 0052  
       __size_of___lwmod 0042              ??_TripaSeca 0001              _leitura_ADC 0E32  
               _delay_ms 0C9A          ___lwdiv@divisor 0016          ___lwdiv@counter 001A  
               __ptext10 0940                 __ptext11 0A18                 __ptext12 0C9A  
               __ptext13 0B76            __size_of_main 0130                 _valorADC 0033  
               int$flags 0035               _LCD_String 0DE0    __CFG_CPUDIV$OSC2_PLL3 000000  
        LCD_Command@OUTS 0019         ??_ADC_Inicializa 0011                 intlevel2 0000  
       ___lwmod@dividend 000F      __CFG_FOSC$INTOSC_HS 000000          ___lwmod@divisor 0011  
        ___lwmod@counter 0013   __size_of_LCD_String_xy 0044  
