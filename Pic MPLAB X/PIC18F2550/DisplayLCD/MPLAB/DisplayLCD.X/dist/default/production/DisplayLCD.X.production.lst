

Microchip Technology PIC18 LITE Macro Assembler V1.38 build -256452561 
                                                                                               Fri Aug 28 18:20:44 2020

Microchip Technology Omniscient Code Generator v1.38 (Free mode) build 201607010351
     1                           	processor	18F2550
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	lm
     5                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1
     6                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     7                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1
     8                           	psect	text0,global,reloc=2,class=CODE,delta=1
     9                           	psect	text1,global,reloc=2,class=CODE,delta=1
    10                           	psect	text2,global,reloc=2,class=CODE,delta=1
    11                           	psect	text3,global,reloc=2,class=CODE,delta=1
    12                           	psect	text4,global,reloc=2,class=CODE,delta=1
    13                           	psect	text5,global,reloc=2,class=CODE,delta=1
    14                           	psect	text6,global,reloc=2,class=CODE,delta=1
    15                           	psect	text7,global,reloc=2,class=CODE,delta=1
    16                           	psect	text8,global,reloc=2,class=CODE,delta=1
    17                           	psect	text9,global,reloc=2,class=CODE,delta=1
    18                           	psect	text10,global,reloc=2,class=CODE,delta=1
    19                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1
    20                           	psect	rparam,global,class=COMRAM,space=1,delta=1
    21  0000                     _ADRES	set	4035
    22  0000                     _ADCON0bits	set	4034
    23  0000                     _ADCON1bits	set	4033
    24  0000                     _ADCON2bits	set	4032
    25  0000                     _OSCCON	set	4051
    26  0000                     _LATB2	set	31826
    27  0000                     _LATB3	set	31827
    28  0000                     _LATB4	set	31828
    29  0000                     _LATB5	set	31829
    30  0000                     _LATB6	set	31830
    31  0000                     _LATB7	set	31831
    32  0000                     _TRISB2	set	31898
    33  0000                     _TRISB3	set	31899
    34  0000                     _TRISB4	set	31900
    35  0000                     _TRISB5	set	31901
    36  0000                     _TRISB6	set	31902
    37  0000                     _TRISB7	set	31903
    38                           
    39                           	psect	smallconst
    40  000800                     __psmallconst:
    41                           	opt stack 0
    42  000800  00                 	db	0
    43  000801                     STR_1:
    44  000801  48                 	db	72	;'H'
    45  000802  65                 	db	101	;'e'
    46  000803  6C                 	db	108	;'l'
    47  000804  6C                 	db	108	;'l'
    48  000805  6F                 	db	111	;'o'
    49  000806  20                 	db	32
    50  000807  57                 	db	87	;'W'
    51  000808  6F                 	db	111	;'o'
    52  000809  72                 	db	114	;'r'
    53  00080A  6C                 	db	108	;'l'
    54  00080B  64                 	db	100	;'d'
    55  00080C  21                 	db	33
    56  00080D  00                 	db	0
    57                           
    58                           ; #config settings
    59  00080E  00                 	db	0	; dummy byte at the end
    60  0000                     
    61                           	psect	cinit
    62  000C9A                     __pcinit:
    63                           	opt stack 0
    64  000C9A                     start_initialization:
    65                           	opt stack 0
    66  000C9A                     __initialization:
    67                           	opt stack 0
    68  000C9A                     end_of_initialization:
    69                           	opt stack 0
    70  000C9A                     __end_of__initialization:
    71                           	opt stack 0
    72  000C9A  0E00               	movlw	low (__Lmediumconst shr (0+16))
    73  000C9C  6EF8               	movwf	tblptru,c
    74  000C9E  0100               	movlb	0
    75  000CA0  EFE0  F004         	goto	_main	;jump to C main() function
    76                           tblptru	equ	0xFF8
    77                           
    78                           	psect	cstackCOMRAM
    79  000001                     __pcstackCOMRAM:
    80                           	opt stack 0
    81  000001                     ?___awdiv:
    82                           	opt stack 0
    83  000001                     delay_ms@tempo:
    84                           	opt stack 0
    85  000001                     ___awdiv@dividend:
    86                           	opt stack 0
    87                           
    88                           ; 2 bytes @ 0x0
    89  000001                     	ds	2
    90  000003                     delay_ms@i:
    91                           	opt stack 0
    92  000003                     ___awdiv@divisor:
    93                           	opt stack 0
    94                           
    95                           ; 2 bytes @ 0x2
    96  000003                     	ds	2
    97  000005                     ___awdiv@counter:
    98                           	opt stack 0
    99  000005                     delay_ms@j:
   100                           	opt stack 0
   101                           
   102                           ; 4 bytes @ 0x4
   103  000005                     	ds	1
   104  000006                     ___awdiv@sign:
   105                           	opt stack 0
   106                           
   107                           ; 1 bytes @ 0x5
   108  000006                     	ds	1
   109  000007                     ___awdiv@quotient:
   110                           	opt stack 0
   111                           
   112                           ; 2 bytes @ 0x6
   113  000007                     	ds	2
   114  000009                     ??_LCD_Command:
   115  000009                     ??_LCD_Char:
   116  000009                     ?___awmod:
   117                           	opt stack 0
   118  000009                     ___awmod@dividend:
   119                           	opt stack 0
   120                           
   121                           ; 2 bytes @ 0x8
   122  000009                     	ds	2
   123  00000B                     ___awmod@divisor:
   124                           	opt stack 0
   125  00000B                     LCD_Command@OUTS:
   126                           	opt stack 0
   127  00000B                     LCD_Char@OUTS:
   128                           	opt stack 0
   129                           
   130                           ; 16 bytes @ 0xA
   131  00000B                     	ds	2
   132  00000D                     ___awmod@counter:
   133                           	opt stack 0
   134                           
   135                           ; 1 bytes @ 0xC
   136  00000D                     	ds	1
   137  00000E                     ___awmod@sign:
   138                           	opt stack 0
   139                           
   140                           ; 1 bytes @ 0xD
   141  00000E                     	ds	13
   142  00001B                     LCD_Command@cmd:
   143                           	opt stack 0
   144  00001B                     LCD_Char@dat:
   145                           	opt stack 0
   146                           
   147                           ; 1 bytes @ 0x1A
   148  00001B                     	ds	1
   149  00001C                     LCD_Command@i:
   150                           	opt stack 0
   151  00001C                     LCD_Char@i:
   152                           	opt stack 0
   153                           
   154                           ; 2 bytes @ 0x1B
   155  00001C                     	ds	2
   156  00001E                     LCD_Char_xy@pos:
   157                           	opt stack 0
   158  00001E                     LCD_String@msg:
   159                           	opt stack 0
   160                           
   161                           ; 2 bytes @ 0x1D
   162  00001E                     	ds	1
   163  00001F                     LCD_Char_xy@dat:
   164                           	opt stack 0
   165                           
   166                           ; 1 bytes @ 0x1E
   167  00001F                     	ds	1
   168  000020                     LCD_Char_xy@row:
   169                           	opt stack 0
   170  000020                     LCD_String_xy@pos:
   171                           	opt stack 0
   172                           
   173                           ; 1 bytes @ 0x1F
   174  000020                     	ds	1
   175  000021                     LCD_Char_xy@location:
   176                           	opt stack 0
   177  000021                     LCD_String_xy@msg:
   178                           	opt stack 0
   179                           
   180                           ; 2 bytes @ 0x20
   181  000021                     	ds	2
   182  000023                     LCD_String_xy@row:
   183                           	opt stack 0
   184                           
   185                           ; 1 bytes @ 0x22
   186  000023                     	ds	1
   187  000024                     LCD_String_xy@location:
   188                           	opt stack 0
   189                           
   190                           ; 1 bytes @ 0x23
   191  000024                     	ds	1
   192  000025                     _main$785:
   193                           	opt stack 0
   194                           
   195                           ; 1 bytes @ 0x24
   196  000025                     	ds	1
   197  000026                     main@cont:
   198                           	opt stack 0
   199                           
   200                           ; 2 bytes @ 0x25
   201  000026                     	ds	2
   202                           tblptru	equ	0xFF8
   203                           
   204 ;;
   205 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   206 ;;
   207 ;; *************** function _main *****************
   208 ;; Defined at:
   209 ;;		line 35 in file "main.c"
   210 ;; Parameters:    Size  Location     Type
   211 ;;		None
   212 ;; Auto vars:     Size  Location     Type
   213 ;;  cont            2   37[COMRAM] int 
   214 ;; Return value:  Size  Location     Type
   215 ;;                  1    wreg      void 
   216 ;; Registers used:
   217 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
   218 ;; Tracked objects:
   219 ;;		On entry : 0/0
   220 ;;		On exit  : 0/0
   221 ;;		Unchanged: 0/0
   222 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   223 ;;      Params:         0       0       0       0       0       0       0       0       0
   224 ;;      Locals:         3       0       0       0       0       0       0       0       0
   225 ;;      Temps:          0       0       0       0       0       0       0       0       0
   226 ;;      Totals:         3       0       0       0       0       0       0       0       0
   227 ;;Total ram usage:        3 bytes
   228 ;; Hardware stack levels required when called:    4
   229 ;; This function calls:
   230 ;;		_LCD_Char_xy
   231 ;;		_LCD_String_xy
   232 ;;		___awdiv
   233 ;;		___awmod
   234 ;;		_delay_ms
   235 ;;		_setup
   236 ;; This function is called by:
   237 ;;		Startup code after reset
   238 ;; This function uses a non-reentrant model
   239 ;;
   240                           
   241                           	psect	text0
   242  0009C0                     __ptext0:
   243                           	opt stack 0
   244  0009C0                     _main:
   245                           	opt stack 27
   246                           
   247                           ;main.c: 37: setup();
   248                           
   249                           ;incstack = 0
   250  0009C0  EC52  F006         	call	_setup	;wreg free
   251                           
   252                           ;main.c: 39: int cont = 0;
   253  0009C4  0E00               	movlw	0
   254  0009C6  6E27               	movwf	main@cont+1,c
   255  0009C8  0E00               	movlw	0
   256  0009CA  6E26               	movwf	main@cont,c
   257  0009CC                     l1184:
   258                           
   259                           ;main.c: 43: LCD_String_xy(1, 2, "Hello World!");
   260  0009CC  0E02               	movlw	2
   261  0009CE  6E20               	movwf	LCD_String_xy@pos,c
   262  0009D0  0E01               	movlw	low STR_1
   263  0009D2  6E21               	movwf	LCD_String_xy@msg,c
   264  0009D4  0E08               	movlw	high STR_1
   265  0009D6  6E22               	movwf	LCD_String_xy@msg+1,c
   266  0009D8  0E01               	movlw	1
   267  0009DA  ECDB  F005         	call	_LCD_String_xy
   268                           
   269                           ;main.c: 44: LCD_Char_xy(2, 6, cont/100 + 48);
   270  0009DE  C026  F001         	movff	main@cont,___awdiv@dividend
   271  0009E2  C027  F002         	movff	main@cont+1,___awdiv@dividend+1
   272  0009E6  0E00               	movlw	0
   273  0009E8  6E04               	movwf	___awdiv@divisor+1,c
   274  0009EA  0E64               	movlw	100
   275  0009EC  6E03               	movwf	___awdiv@divisor,c
   276  0009EE  EC3C  F005         	call	___awdiv	;wreg free
   277  0009F2  5001               	movf	?___awdiv,w,c
   278  0009F4  0F30               	addlw	48
   279  0009F6  6E25               	movwf	_main$785,c
   280                           
   281                           ;main.c: 44: LCD_Char_xy(2, 6, cont/100 + 48);
   282  0009F8  0E06               	movlw	6
   283  0009FA  6E1E               	movwf	LCD_Char_xy@pos,c
   284  0009FC  C025  F01F         	movff	_main$785,LCD_Char_xy@dat
   285  000A00  0E02               	movlw	2
   286  000A02  ECFD  F005         	call	_LCD_Char_xy
   287                           
   288                           ;main.c: 45: LCD_Char_xy(2, 7, (cont/10)%10 + 48);
   289  000A06  0E00               	movlw	0
   290  000A08  6E04               	movwf	___awdiv@divisor+1,c
   291  000A0A  0E0A               	movlw	10
   292  000A0C  6E03               	movwf	___awdiv@divisor,c
   293  000A0E  C026  F001         	movff	main@cont,___awdiv@dividend
   294  000A12  C027  F002         	movff	main@cont+1,___awdiv@dividend+1
   295  000A16  EC3C  F005         	call	___awdiv	;wreg free
   296  000A1A  C001  F009         	movff	?___awdiv,___awmod@dividend
   297  000A1E  C002  F00A         	movff	?___awdiv+1,___awmod@dividend+1
   298  000A22  0E00               	movlw	0
   299  000A24  6E0C               	movwf	___awmod@divisor+1,c
   300  000A26  0E0A               	movlw	10
   301  000A28  6E0B               	movwf	___awmod@divisor,c
   302  000A2A  EC7E  F005         	call	___awmod	;wreg free
   303  000A2E  5009               	movf	?___awmod,w,c
   304  000A30  0F30               	addlw	48
   305  000A32  6E25               	movwf	_main$785,c
   306                           
   307                           ;main.c: 45: LCD_Char_xy(2, 7, (cont/10)%10 + 48);
   308  000A34  0E07               	movlw	7
   309  000A36  6E1E               	movwf	LCD_Char_xy@pos,c
   310  000A38  C025  F01F         	movff	_main$785,LCD_Char_xy@dat
   311  000A3C  0E02               	movlw	2
   312  000A3E  ECFD  F005         	call	_LCD_Char_xy
   313                           
   314                           ;main.c: 46: LCD_Char_xy(2, 8, cont%10 + 48);
   315  000A42  0E08               	movlw	8
   316  000A44  6E1E               	movwf	LCD_Char_xy@pos,c
   317  000A46  C026  F009         	movff	main@cont,___awmod@dividend
   318  000A4A  C027  F00A         	movff	main@cont+1,___awmod@dividend+1
   319  000A4E  0E00               	movlw	0
   320  000A50  6E0C               	movwf	___awmod@divisor+1,c
   321  000A52  0E0A               	movlw	10
   322  000A54  6E0B               	movwf	___awmod@divisor,c
   323  000A56  EC7E  F005         	call	___awmod	;wreg free
   324  000A5A  5009               	movf	?___awmod,w,c
   325  000A5C  0F30               	addlw	48
   326  000A5E  6E1F               	movwf	LCD_Char_xy@dat,c
   327  000A60  0E02               	movlw	2
   328  000A62  ECFD  F005         	call	_LCD_Char_xy
   329                           
   330                           ;main.c: 48: cont++;
   331  000A66  4A26               	infsnz	main@cont,f,c
   332  000A68  2A27               	incf	main@cont+1,f,c
   333                           
   334                           ;main.c: 49: delay_ms(1000);
   335  000A6A  0E03               	movlw	3
   336  000A6C  6E02               	movwf	delay_ms@tempo+1,c
   337  000A6E  0EE8               	movlw	232
   338  000A70  6E01               	movwf	delay_ms@tempo,c
   339  000A72  ECB6  F005         	call	_delay_ms	;wreg free
   340  000A76  D7AA               	goto	l1184
   341  000A78                     __end_of_main:
   342                           	opt stack 0
   343                           tblptru	equ	0xFF8
   344                           
   345 ;; *************** function _setup *****************
   346 ;; Defined at:
   347 ;;		line 27 in file "main.c"
   348 ;; Parameters:    Size  Location     Type
   349 ;;		None
   350 ;; Auto vars:     Size  Location     Type
   351 ;;		None
   352 ;; Return value:  Size  Location     Type
   353 ;;                  1    wreg      void 
   354 ;; Registers used:
   355 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
   356 ;; Tracked objects:
   357 ;;		On entry : 0/0
   358 ;;		On exit  : 0/0
   359 ;;		Unchanged: 0/0
   360 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   361 ;;      Params:         0       0       0       0       0       0       0       0       0
   362 ;;      Locals:         0       0       0       0       0       0       0       0       0
   363 ;;      Temps:          0       0       0       0       0       0       0       0       0
   364 ;;      Totals:         0       0       0       0       0       0       0       0       0
   365 ;;Total ram usage:        0 bytes
   366 ;; Hardware stack levels used:    1
   367 ;; Hardware stack levels required when called:    3
   368 ;; This function calls:
   369 ;;		_LCD_Init
   370 ;; This function is called by:
   371 ;;		_main
   372 ;; This function uses a non-reentrant model
   373 ;;
   374                           
   375                           	psect	text1
   376  000CA4                     __ptext1:
   377                           	opt stack 0
   378  000CA4                     _setup:
   379                           	opt stack 27
   380                           
   381                           ;main.c: 29: OSCCON = 0b11111110;
   382                           
   383                           ;incstack = 0
   384  000CA4  0EFE               	movlw	254
   385  000CA6  6ED3               	movwf	4051,c	;volatile
   386                           
   387                           ;main.c: 31: LCD_Init();
   388  000CA8  EC1C  F006         	call	_LCD_Init	;wreg free
   389  000CAC  0012               	return		;funcret
   390  000CAE                     __end_of_setup:
   391                           	opt stack 0
   392                           tblptru	equ	0xFF8
   393                           
   394 ;; *************** function _LCD_Init *****************
   395 ;; Defined at:
   396 ;;		line 150 in file "PICLibs.h"
   397 ;; Parameters:    Size  Location     Type
   398 ;;		None
   399 ;; Auto vars:     Size  Location     Type
   400 ;;		None
   401 ;; Return value:  Size  Location     Type
   402 ;;                  1    wreg      void 
   403 ;; Registers used:
   404 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
   405 ;; Tracked objects:
   406 ;;		On entry : 0/0
   407 ;;		On exit  : 0/0
   408 ;;		Unchanged: 0/0
   409 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   410 ;;      Params:         0       0       0       0       0       0       0       0       0
   411 ;;      Locals:         0       0       0       0       0       0       0       0       0
   412 ;;      Temps:          0       0       0       0       0       0       0       0       0
   413 ;;      Totals:         0       0       0       0       0       0       0       0       0
   414 ;;Total ram usage:        0 bytes
   415 ;; Hardware stack levels used:    1
   416 ;; Hardware stack levels required when called:    2
   417 ;; This function calls:
   418 ;;		_LCD_Command
   419 ;;		_delay_ms
   420 ;; This function is called by:
   421 ;;		_setup
   422 ;; This function uses a non-reentrant model
   423 ;;
   424                           
   425                           	psect	text2
   426  000C38                     __ptext2:
   427                           	opt stack 0
   428  000C38                     _LCD_Init:
   429                           	opt stack 27
   430                           
   431                           ;PICLibs.h: 152: TRISB2 = 0;
   432                           
   433                           ;incstack = 0
   434  000C38  9493               	bcf	3987,2,c	;volatile
   435                           
   436                           ;PICLibs.h: 153: TRISB3 = 0;
   437  000C3A  9693               	bcf	3987,3,c	;volatile
   438                           
   439                           ;PICLibs.h: 154: TRISB4 = 0;
   440  000C3C  9893               	bcf	3987,4,c	;volatile
   441                           
   442                           ;PICLibs.h: 155: TRISB5 = 0;
   443  000C3E  9A93               	bcf	3987,5,c	;volatile
   444                           
   445                           ;PICLibs.h: 156: TRISB6 = 0;
   446  000C40  9C93               	bcf	3987,6,c	;volatile
   447                           
   448                           ;PICLibs.h: 157: TRISB7 = 0;
   449  000C42  9E93               	bcf	3987,7,c	;volatile
   450                           
   451                           ;PICLibs.h: 159: delay_ms(40);
   452  000C44  0E00               	movlw	0
   453  000C46  6E02               	movwf	delay_ms@tempo+1,c
   454  000C48  0E28               	movlw	40
   455  000C4A  6E01               	movwf	delay_ms@tempo,c
   456  000C4C  ECB6  F005         	call	_delay_ms	;wreg free
   457                           
   458                           ;PICLibs.h: 160: LCD_Command(0x02);
   459  000C50  0E02               	movlw	2
   460  000C52  EC08  F004         	call	_LCD_Command
   461                           
   462                           ;PICLibs.h: 162: LCD_Command(0x28);
   463  000C56  0E28               	movlw	40
   464  000C58  EC08  F004         	call	_LCD_Command
   465                           
   466                           ;PICLibs.h: 164: LCD_Command(0x01);
   467  000C5C  0E01               	movlw	1
   468  000C5E  EC08  F004         	call	_LCD_Command
   469                           
   470                           ;PICLibs.h: 165: LCD_Command(0x0c);
   471  000C62  0E0C               	movlw	12
   472  000C64  EC08  F004         	call	_LCD_Command
   473                           
   474                           ;PICLibs.h: 166: LCD_Command(0x06);
   475  000C68  0E06               	movlw	6
   476  000C6A  EC08  F004         	call	_LCD_Command
   477  000C6E  0012               	return		;funcret
   478  000C70                     __end_of_LCD_Init:
   479                           	opt stack 0
   480                           tblptru	equ	0xFF8
   481                           
   482 ;; *************** function ___awmod *****************
   483 ;; Defined at:
   484 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.38\sources\common\awmod.c"
   485 ;; Parameters:    Size  Location     Type
   486 ;;  dividend        2    8[COMRAM] int 
   487 ;;  divisor         2   10[COMRAM] int 
   488 ;; Auto vars:     Size  Location     Type
   489 ;;  sign            1   13[COMRAM] unsigned char 
   490 ;;  counter         1   12[COMRAM] unsigned char 
   491 ;; Return value:  Size  Location     Type
   492 ;;                  2    8[COMRAM] int 
   493 ;; Registers used:
   494 ;;		wreg, status,2, status,0
   495 ;; Tracked objects:
   496 ;;		On entry : 0/0
   497 ;;		On exit  : 0/0
   498 ;;		Unchanged: 0/0
   499 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   500 ;;      Params:         4       0       0       0       0       0       0       0       0
   501 ;;      Locals:         2       0       0       0       0       0       0       0       0
   502 ;;      Temps:          0       0       0       0       0       0       0       0       0
   503 ;;      Totals:         6       0       0       0       0       0       0       0       0
   504 ;;Total ram usage:        6 bytes
   505 ;; Hardware stack levels used:    1
   506 ;; This function calls:
   507 ;;		Nothing
   508 ;; This function is called by:
   509 ;;		_main
   510 ;; This function uses a non-reentrant model
   511 ;;
   512                           
   513                           	psect	text3
   514  000AFC                     __ptext3:
   515                           	opt stack 0
   516  000AFC                     ___awmod:
   517                           	opt stack 30
   518                           
   519                           ;incstack = 0
   520  000AFC  0E00               	movlw	0
   521  000AFE  6E0E               	movwf	___awmod@sign,c
   522  000B00  AE0A               	btfss	___awmod@dividend+1,7,c
   523  000B02  D006               	goto	l1148
   524  000B04  6C09               	negf	___awmod@dividend,c
   525  000B06  1E0A               	comf	___awmod@dividend+1,f,c
   526  000B08  B0D8               	btfsc	status,0,c
   527  000B0A  2A0A               	incf	___awmod@dividend+1,f,c
   528  000B0C  0E01               	movlw	1
   529  000B0E  6E0E               	movwf	___awmod@sign,c
   530  000B10                     l1148:
   531  000B10  AE0C               	btfss	___awmod@divisor+1,7,c
   532  000B12  D004               	goto	l1152
   533  000B14  6C0B               	negf	___awmod@divisor,c
   534  000B16  1E0C               	comf	___awmod@divisor+1,f,c
   535  000B18  B0D8               	btfsc	status,0,c
   536  000B1A  2A0C               	incf	___awmod@divisor+1,f,c
   537  000B1C                     l1152:
   538  000B1C  500B               	movf	___awmod@divisor,w,c
   539  000B1E  100C               	iorwf	___awmod@divisor+1,w,c
   540  000B20  B4D8               	btfsc	status,2,c
   541  000B22  D018               	goto	l1168
   542  000B24  0E01               	movlw	1
   543  000B26  6E0D               	movwf	___awmod@counter,c
   544  000B28  D004               	goto	l1158
   545  000B2A                     l1156:
   546  000B2A  90D8               	bcf	status,0,c
   547  000B2C  360B               	rlcf	___awmod@divisor,f,c
   548  000B2E  360C               	rlcf	___awmod@divisor+1,f,c
   549  000B30  2A0D               	incf	___awmod@counter,f,c
   550  000B32                     l1158:
   551  000B32  AE0C               	btfss	___awmod@divisor+1,7,c
   552  000B34  D7FA               	goto	l1156
   553  000B36                     l1160:
   554  000B36  500B               	movf	___awmod@divisor,w,c
   555  000B38  5C09               	subwf	___awmod@dividend,w,c
   556  000B3A  500C               	movf	___awmod@divisor+1,w,c
   557  000B3C  580A               	subwfb	___awmod@dividend+1,w,c
   558  000B3E  A0D8               	btfss	status,0,c
   559  000B40  D004               	goto	l1164
   560  000B42  500B               	movf	___awmod@divisor,w,c
   561  000B44  5E09               	subwf	___awmod@dividend,f,c
   562  000B46  500C               	movf	___awmod@divisor+1,w,c
   563  000B48  5A0A               	subwfb	___awmod@dividend+1,f,c
   564  000B4A                     l1164:
   565  000B4A  90D8               	bcf	status,0,c
   566  000B4C  320C               	rrcf	___awmod@divisor+1,f,c
   567  000B4E  320B               	rrcf	___awmod@divisor,f,c
   568  000B50  2E0D               	decfsz	___awmod@counter,f,c
   569  000B52  D7F1               	goto	l1160
   570  000B54                     l1168:
   571  000B54  500E               	movf	___awmod@sign,w,c
   572  000B56  B4D8               	btfsc	status,2,c
   573  000B58  D004               	goto	l1172
   574  000B5A  6C09               	negf	___awmod@dividend,c
   575  000B5C  1E0A               	comf	___awmod@dividend+1,f,c
   576  000B5E  B0D8               	btfsc	status,0,c
   577  000B60  2A0A               	incf	___awmod@dividend+1,f,c
   578  000B62                     l1172:
   579  000B62  C009  F009         	movff	___awmod@dividend,?___awmod
   580  000B66  C00A  F00A         	movff	___awmod@dividend+1,?___awmod+1
   581  000B6A  0012               	return	
   582  000B6C                     __end_of___awmod:
   583                           	opt stack 0
   584                           tblptru	equ	0xFF8
   585                           status	equ	0xFD8
   586                           
   587 ;; *************** function _LCD_String_xy *****************
   588 ;; Defined at:
   589 ;;		line 243 in file "PICLibs.h"
   590 ;; Parameters:    Size  Location     Type
   591 ;;  row             1    wreg     unsigned char 
   592 ;;  pos             1   31[COMRAM] unsigned char 
   593 ;;  msg             2   32[COMRAM] PTR const unsigned char 
   594 ;;		 -> STR_1(13), 
   595 ;; Auto vars:     Size  Location     Type
   596 ;;  row             1   34[COMRAM] unsigned char 
   597 ;;  location        1   35[COMRAM] unsigned char 
   598 ;; Return value:  Size  Location     Type
   599 ;;                  1    wreg      void 
   600 ;; Registers used:
   601 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
   602 ;; Tracked objects:
   603 ;;		On entry : 0/0
   604 ;;		On exit  : 0/0
   605 ;;		Unchanged: 0/0
   606 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   607 ;;      Params:         3       0       0       0       0       0       0       0       0
   608 ;;      Locals:         2       0       0       0       0       0       0       0       0
   609 ;;      Temps:          0       0       0       0       0       0       0       0       0
   610 ;;      Totals:         5       0       0       0       0       0       0       0       0
   611 ;;Total ram usage:        5 bytes
   612 ;; Hardware stack levels used:    1
   613 ;; Hardware stack levels required when called:    3
   614 ;; This function calls:
   615 ;;		_LCD_Command
   616 ;;		_LCD_String
   617 ;; This function is called by:
   618 ;;		_main
   619 ;; This function uses a non-reentrant model
   620 ;;
   621                           
   622                           	psect	text4
   623  000BB6                     __ptext4:
   624                           	opt stack 0
   625  000BB6                     _LCD_String_xy:
   626                           	opt stack 27
   627                           
   628                           ;incstack = 0
   629                           ;LCD_String_xy@row stored from wreg
   630  000BB6  6E23               	movwf	LCD_String_xy@row,c
   631                           
   632                           ;PICLibs.h: 245: char location=0;
   633  000BB8  0E00               	movlw	0
   634  000BBA  6E24               	movwf	LCD_String_xy@location,c
   635                           
   636                           ;PICLibs.h: 246: switch (row){
   637  000BBC  D010               	goto	l1132
   638  000BBE                     l1122:
   639                           
   640                           ;PICLibs.h: 248: location=(0x80) | ((pos) & 0x0f);
   641  000BBE  5020               	movf	LCD_String_xy@pos,w,c
   642  000BC0  0B0F               	andlw	15
   643  000BC2  0980               	iorlw	128
   644  000BC4  6E24               	movwf	LCD_String_xy@location,c
   645                           
   646                           ;PICLibs.h: 249: LCD_Command(location);
   647  000BC6  5024               	movf	LCD_String_xy@location,w,c
   648  000BC8  EC08  F004         	call	_LCD_Command
   649                           
   650                           ;PICLibs.h: 250: break;
   651  000BCC  D00F               	goto	l1134
   652  000BCE                     l1126:
   653                           
   654                           ;PICLibs.h: 252: location=(0xC0) | ((pos) & 0x0f);
   655  000BCE  5020               	movf	LCD_String_xy@pos,w,c
   656  000BD0  0B0F               	andlw	15
   657  000BD2  09C0               	iorlw	192
   658  000BD4  6E24               	movwf	LCD_String_xy@location,c
   659                           
   660                           ;PICLibs.h: 253: LCD_Command(location);
   661  000BD6  5024               	movf	LCD_String_xy@location,w,c
   662  000BD8  EC08  F004         	call	_LCD_Command
   663                           
   664                           ;PICLibs.h: 266: }
   665                           
   666                           ;PICLibs.h: 254: break;
   667  000BDC  D007               	goto	l1134
   668  000BDE                     l1132:
   669  000BDE  5023               	movf	LCD_String_xy@row,w,c
   670                           
   671                           ; Switch size 1, requested type "space"
   672                           ; Number of cases is 2, Range of values is 1 to 2
   673                           ; switch strategies available:
   674                           ; Name         Instructions Cycles
   675                           ; simple_byte            7     4 (average)
   676                           ;	Chosen strategy is simple_byte
   677  000BE0  0A01               	xorlw	1	; case 1
   678  000BE2  B4D8               	btfsc	status,2,c
   679  000BE4  D7EC               	goto	l1122
   680  000BE6  0A03               	xorlw	3	; case 2
   681  000BE8  B4D8               	btfsc	status,2,c
   682  000BEA  D7F1               	goto	l1126
   683  000BEC                     l1134:
   684                           
   685                           ;PICLibs.h: 270: LCD_String(msg);
   686  000BEC  C021  F01E         	movff	LCD_String_xy@msg,LCD_String@msg
   687  000BF0  C022  F01F         	movff	LCD_String_xy@msg+1,LCD_String@msg+1
   688  000BF4  EC38  F006         	call	_LCD_String	;wreg free
   689  000BF8  0012               	return		;funcret
   690  000BFA                     __end_of_LCD_String_xy:
   691                           	opt stack 0
   692                           tblptru	equ	0xFF8
   693                           status	equ	0xFD8
   694                           
   695 ;; *************** function _LCD_String *****************
   696 ;; Defined at:
   697 ;;		line 234 in file "PICLibs.h"
   698 ;; Parameters:    Size  Location     Type
   699 ;;  msg             2   29[COMRAM] PTR const unsigned char 
   700 ;;		 -> STR_1(13), 
   701 ;; Auto vars:     Size  Location     Type
   702 ;;		None
   703 ;; Return value:  Size  Location     Type
   704 ;;                  1    wreg      void 
   705 ;; Registers used:
   706 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
   707 ;; Tracked objects:
   708 ;;		On entry : 0/0
   709 ;;		On exit  : 0/0
   710 ;;		Unchanged: 0/0
   711 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   712 ;;      Params:         2       0       0       0       0       0       0       0       0
   713 ;;      Locals:         0       0       0       0       0       0       0       0       0
   714 ;;      Temps:          0       0       0       0       0       0       0       0       0
   715 ;;      Totals:         2       0       0       0       0       0       0       0       0
   716 ;;Total ram usage:        2 bytes
   717 ;; Hardware stack levels used:    1
   718 ;; Hardware stack levels required when called:    2
   719 ;; This function calls:
   720 ;;		_LCD_Char
   721 ;; This function is called by:
   722 ;;		_LCD_String_xy
   723 ;; This function uses a non-reentrant model
   724 ;;
   725                           
   726                           	psect	text5
   727  000C70                     __ptext5:
   728                           	opt stack 0
   729  000C70                     _LCD_String:
   730                           	opt stack 27
   731                           
   732                           ;PICLibs.h: 236: while((*msg)!=0)
   733                           
   734                           ;incstack = 0
   735  000C70  D00A               	goto	l1102
   736  000C72                     l1098:
   737                           
   738                           ;PICLibs.h: 237: {
   739                           ;PICLibs.h: 238: LCD_Char(*msg);
   740  000C72  C01E  FFF6         	movff	LCD_String@msg,tblptrl
   741  000C76  C01F  FFF7         	movff	LCD_String@msg+1,tblptrh
   742  000C7A                     	if	0	;tblptru may be non-zero
   743  000C7A                     	endif
   744  000C7A                     	if	0	;tblptru may be non-zero
   745  000C7A                     	endif
   746  000C7A  0008               	tblrd		*
   747  000C7C  50F5               	movf	tablat,w,c
   748  000C7E  EC74  F004         	call	_LCD_Char
   749                           
   750                           ;PICLibs.h: 239: msg++;
   751  000C82  4A1E               	infsnz	LCD_String@msg,f,c
   752  000C84  2A1F               	incf	LCD_String@msg+1,f,c
   753  000C86                     l1102:
   754  000C86  C01E  FFF6         	movff	LCD_String@msg,tblptrl
   755  000C8A  C01F  FFF7         	movff	LCD_String@msg+1,tblptrh
   756  000C8E                     	if	0	;tblptru may be non-zero
   757  000C8E                     	endif
   758  000C8E                     	if	0	;tblptru may be non-zero
   759  000C8E                     	endif
   760  000C8E  0008               	tblrd		*
   761  000C90  50F5               	movf	tablat,w,c
   762  000C92  0900               	iorlw	0
   763  000C94  B4D8               	btfsc	status,2,c
   764  000C96  0012               	return	
   765  000C98  D7EC               	goto	l1098
   766  000C9A                     __end_of_LCD_String:
   767                           	opt stack 0
   768                           tblptru	equ	0xFF8
   769                           tblptrh	equ	0xFF7
   770                           tblptrl	equ	0xFF6
   771                           tablat	equ	0xFF5
   772                           status	equ	0xFD8
   773                           
   774 ;; *************** function _LCD_Char_xy *****************
   775 ;; Defined at:
   776 ;;		line 202 in file "PICLibs.h"
   777 ;; Parameters:    Size  Location     Type
   778 ;;  row             1    wreg     unsigned char 
   779 ;;  pos             1   29[COMRAM] unsigned char 
   780 ;;  dat             1   30[COMRAM] unsigned char 
   781 ;; Auto vars:     Size  Location     Type
   782 ;;  row             1   31[COMRAM] unsigned char 
   783 ;;  location        1   32[COMRAM] unsigned char 
   784 ;; Return value:  Size  Location     Type
   785 ;;                  1    wreg      void 
   786 ;; Registers used:
   787 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
   788 ;; Tracked objects:
   789 ;;		On entry : 0/0
   790 ;;		On exit  : 0/0
   791 ;;		Unchanged: 0/0
   792 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   793 ;;      Params:         2       0       0       0       0       0       0       0       0
   794 ;;      Locals:         2       0       0       0       0       0       0       0       0
   795 ;;      Temps:          0       0       0       0       0       0       0       0       0
   796 ;;      Totals:         4       0       0       0       0       0       0       0       0
   797 ;;Total ram usage:        4 bytes
   798 ;; Hardware stack levels used:    1
   799 ;; Hardware stack levels required when called:    2
   800 ;; This function calls:
   801 ;;		_LCD_Char
   802 ;;		_LCD_Command
   803 ;; This function is called by:
   804 ;;		_main
   805 ;; This function uses a non-reentrant model
   806 ;;
   807                           
   808                           	psect	text6
   809  000BFA                     __ptext6:
   810                           	opt stack 0
   811  000BFA                     _LCD_Char_xy:
   812                           	opt stack 28
   813                           
   814                           ;incstack = 0
   815                           ;LCD_Char_xy@row stored from wreg
   816  000BFA  6E20               	movwf	LCD_Char_xy@row,c
   817                           
   818                           ;PICLibs.h: 204: char location=0;
   819  000BFC  0E00               	movlw	0
   820  000BFE  6E21               	movwf	LCD_Char_xy@location,c
   821                           
   822                           ;PICLibs.h: 205: switch (row){
   823  000C00  D010               	goto	l1116
   824  000C02                     l1106:
   825                           
   826                           ;PICLibs.h: 207: location=(0x80) | ((pos) & 0x0f);
   827  000C02  501E               	movf	LCD_Char_xy@pos,w,c
   828  000C04  0B0F               	andlw	15
   829  000C06  0980               	iorlw	128
   830  000C08  6E21               	movwf	LCD_Char_xy@location,c
   831                           
   832                           ;PICLibs.h: 208: LCD_Command(location);
   833  000C0A  5021               	movf	LCD_Char_xy@location,w,c
   834  000C0C  EC08  F004         	call	_LCD_Command
   835                           
   836                           ;PICLibs.h: 209: break;
   837  000C10  D00F               	goto	l1118
   838  000C12                     l1110:
   839                           
   840                           ;PICLibs.h: 211: location=(0xC0) | ((pos) & 0x0f);
   841  000C12  501E               	movf	LCD_Char_xy@pos,w,c
   842  000C14  0B0F               	andlw	15
   843  000C16  09C0               	iorlw	192
   844  000C18  6E21               	movwf	LCD_Char_xy@location,c
   845                           
   846                           ;PICLibs.h: 212: LCD_Command(location);
   847  000C1A  5021               	movf	LCD_Char_xy@location,w,c
   848  000C1C  EC08  F004         	call	_LCD_Command
   849                           
   850                           ;PICLibs.h: 227: }
   851                           
   852                           ;PICLibs.h: 213: break;
   853  000C20  D007               	goto	l1118
   854  000C22                     l1116:
   855  000C22  5020               	movf	LCD_Char_xy@row,w,c
   856                           
   857                           ; Switch size 1, requested type "space"
   858                           ; Number of cases is 2, Range of values is 1 to 2
   859                           ; switch strategies available:
   860                           ; Name         Instructions Cycles
   861                           ; simple_byte            7     4 (average)
   862                           ;	Chosen strategy is simple_byte
   863  000C24  0A01               	xorlw	1	; case 1
   864  000C26  B4D8               	btfsc	status,2,c
   865  000C28  D7EC               	goto	l1106
   866  000C2A  0A03               	xorlw	3	; case 2
   867  000C2C  B4D8               	btfsc	status,2,c
   868  000C2E  D7F1               	goto	l1110
   869  000C30                     l1118:
   870                           
   871                           ;PICLibs.h: 231: LCD_Char(dat);
   872  000C30  501F               	movf	LCD_Char_xy@dat,w,c
   873  000C32  EC74  F004         	call	_LCD_Char
   874  000C36  0012               	return		;funcret
   875  000C38                     __end_of_LCD_Char_xy:
   876                           	opt stack 0
   877                           tblptru	equ	0xFF8
   878                           tblptrh	equ	0xFF7
   879                           tblptrl	equ	0xFF6
   880                           tablat	equ	0xFF5
   881                           status	equ	0xFD8
   882                           
   883 ;; *************** function _LCD_Command *****************
   884 ;; Defined at:
   885 ;;		line 116 in file "PICLibs.h"
   886 ;; Parameters:    Size  Location     Type
   887 ;;  cmd             1    wreg     unsigned char 
   888 ;; Auto vars:     Size  Location     Type
   889 ;;  cmd             1   26[COMRAM] unsigned char 
   890 ;;  OUTS           16   10[COMRAM] short [8]
   891 ;;  i               2   27[COMRAM] short 
   892 ;; Return value:  Size  Location     Type
   893 ;;                  1    wreg      void 
   894 ;; Registers used:
   895 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
   896 ;; Tracked objects:
   897 ;;		On entry : 0/0
   898 ;;		On exit  : 0/0
   899 ;;		Unchanged: 0/0
   900 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   901 ;;      Params:         0       0       0       0       0       0       0       0       0
   902 ;;      Locals:        19       0       0       0       0       0       0       0       0
   903 ;;      Temps:          2       0       0       0       0       0       0       0       0
   904 ;;      Totals:        21       0       0       0       0       0       0       0       0
   905 ;;Total ram usage:       21 bytes
   906 ;; Hardware stack levels used:    1
   907 ;; Hardware stack levels required when called:    1
   908 ;; This function calls:
   909 ;;		___awdiv
   910 ;;		_delay_ms
   911 ;; This function is called by:
   912 ;;		_LCD_Init
   913 ;;		_LCD_Char_xy
   914 ;;		_LCD_String_xy
   915 ;;		_LCD_Clear
   916 ;; This function uses a non-reentrant model
   917 ;;
   918                           
   919                           	psect	text7
   920  000810                     __ptext7:
   921                           	opt stack 0
   922  000810                     _LCD_Command:
   923                           	opt stack 27
   924                           
   925                           ;incstack = 0
   926                           ;LCD_Command@cmd stored from wreg
   927  000810  6E1B               	movwf	LCD_Command@cmd,c
   928                           
   929                           ;PICLibs.h: 119: short OUTS[8], i;
   930                           ;PICLibs.h: 121: for (i=0; i < 8; i++ ) {
   931  000812  0E00               	movlw	0
   932  000814  6E1D               	movwf	LCD_Command@i+1,c
   933  000816  0E00               	movlw	0
   934  000818  6E1C               	movwf	LCD_Command@i,c
   935  00081A  BE1D               	btfsc	LCD_Command@i+1,7,c
   936  00081C  D006               	goto	l1028
   937  00081E  501D               	movf	LCD_Command@i+1,w,c
   938  000820  E127               	bnz	l57
   939  000822  0E08               	movlw	8
   940  000824  5C1C               	subwf	LCD_Command@i,w,c
   941  000826  B0D8               	btfsc	status,0,c
   942  000828  D023               	goto	l57
   943  00082A                     l1028:
   944                           
   945                           ;PICLibs.h: 124: OUTS[i] = cmd % 2;
   946  00082A  501B               	movf	LCD_Command@cmd,w,c
   947  00082C  0B01               	andlw	1
   948  00082E  6E09               	movwf	??_LCD_Command& (0+255),c
   949  000830  6A0A               	clrf	(??_LCD_Command+1)& (0+255),c
   950  000832  90D8               	bcf	status,0,c
   951  000834  341C               	rlcf	LCD_Command@i,w,c
   952  000836  6ED9               	movwf	fsr2l,c
   953  000838  341D               	rlcf	LCD_Command@i+1,w,c
   954  00083A  6EDA               	movwf	fsr2h,c
   955  00083C  0E0B               	movlw	low LCD_Command@OUTS
   956  00083E  26D9               	addwf	fsr2l,f,c
   957  000840  0E00               	movlw	high LCD_Command@OUTS
   958  000842  22DA               	addwfc	fsr2h,f,c
   959  000844  C009  FFDE         	movff	??_LCD_Command,postinc2
   960  000848  C00A  FFDD         	movff	??_LCD_Command+1,postdec2
   961                           
   962                           ;PICLibs.h: 125: cmd = cmd / 2;
   963  00084C  C01B  F001         	movff	LCD_Command@cmd,___awdiv@dividend
   964  000850  6A02               	clrf	___awdiv@dividend+1,c
   965  000852  0E00               	movlw	0
   966  000854  6E04               	movwf	___awdiv@divisor+1,c
   967  000856  0E02               	movlw	2
   968  000858  6E03               	movwf	___awdiv@divisor,c
   969  00085A  EC3C  F005         	call	___awdiv	;wreg free
   970  00085E  5001               	movf	?___awdiv,w,c
   971  000860  6E1B               	movwf	LCD_Command@cmd,c
   972  000862  4A1C               	infsnz	LCD_Command@i,f,c
   973  000864  2A1D               	incf	LCD_Command@i+1,f,c
   974  000866  BE1D               	btfsc	LCD_Command@i+1,7,c
   975  000868  D7E0               	goto	l1028
   976  00086A  501D               	movf	LCD_Command@i+1,w,c
   977  00086C  E101               	bnz	u640
   978  00086E  D7D9               	goto	L1
   979  000870                     u640:
   980  000870                     l57:
   981                           
   982                           ;PICLibs.h: 127: }
   983                           ;PICLibs.h: 130: LATB4 = OUTS[4];
   984  000870  A013               	btfss	LCD_Command@OUTS+8,0,c
   985  000872  D002               	goto	u650
   986  000874  888A               	bsf	3978,4,c	;volatile
   987  000876  D001               	goto	u665
   988  000878                     u650:
   989  000878  988A               	bcf	3978,4,c	;volatile
   990  00087A                     u665:
   991                           
   992                           ;PICLibs.h: 131: LATB5 = OUTS[5];
   993  00087A  A015               	btfss	LCD_Command@OUTS+10,0,c
   994  00087C  D002               	goto	u670
   995  00087E  8A8A               	bsf	3978,5,c	;volatile
   996  000880  D001               	goto	u685
   997  000882                     u670:
   998  000882  9A8A               	bcf	3978,5,c	;volatile
   999  000884                     u685:
  1000                           
  1001                           ;PICLibs.h: 132: LATB6 = OUTS[6];
  1002  000884  A017               	btfss	LCD_Command@OUTS+12,0,c
  1003  000886  D002               	goto	u690
  1004  000888  8C8A               	bsf	3978,6,c	;volatile
  1005  00088A  D001               	goto	u705
  1006  00088C                     u690:
  1007  00088C  9C8A               	bcf	3978,6,c	;volatile
  1008  00088E                     u705:
  1009                           
  1010                           ;PICLibs.h: 133: LATB7 = OUTS[7];
  1011  00088E  A019               	btfss	LCD_Command@OUTS+14,0,c
  1012  000890  D002               	goto	u710
  1013  000892  8E8A               	bsf	3978,7,c	;volatile
  1014  000894  D001               	goto	u725
  1015  000896                     u710:
  1016  000896  9E8A               	bcf	3978,7,c	;volatile
  1017  000898                     u725:
  1018                           
  1019                           ;PICLibs.h: 134: LATB2 = 0;
  1020  000898  948A               	bcf	3978,2,c	;volatile
  1021                           
  1022                           ;PICLibs.h: 135: LATB3 = 1;
  1023  00089A  868A               	bsf	3978,3,c	;volatile
  1024                           
  1025                           ;PICLibs.h: 136: __nop();
  1026  00089C  F000               	nop	
  1027                           
  1028                           ;PICLibs.h: 137: LATB3 = 0;
  1029  00089E  968A               	bcf	3978,3,c	;volatile
  1030                           
  1031                           ;PICLibs.h: 138: delay_ms(1);
  1032  0008A0  0E00               	movlw	0
  1033  0008A2  6E02               	movwf	delay_ms@tempo+1,c
  1034  0008A4  0E01               	movlw	1
  1035  0008A6  6E01               	movwf	delay_ms@tempo,c
  1036  0008A8  ECB6  F005         	call	_delay_ms	;wreg free
  1037                           
  1038                           ;PICLibs.h: 140: LATB4 = OUTS[0];
  1039  0008AC  A00B               	btfss	LCD_Command@OUTS,0,c
  1040  0008AE  D002               	goto	u730
  1041  0008B0  888A               	bsf	3978,4,c	;volatile
  1042  0008B2  D001               	goto	l1040
  1043  0008B4                     u730:
  1044  0008B4  988A               	bcf	3978,4,c	;volatile
  1045  0008B6                     l1040:
  1046                           
  1047                           ;PICLibs.h: 141: LATB5 = OUTS[1];
  1048  0008B6  A00D               	btfss	LCD_Command@OUTS+2,0,c
  1049  0008B8  D002               	goto	u750
  1050  0008BA  8A8A               	bsf	3978,5,c	;volatile
  1051  0008BC  D001               	goto	l1042
  1052  0008BE                     u750:
  1053  0008BE  9A8A               	bcf	3978,5,c	;volatile
  1054  0008C0                     l1042:
  1055                           
  1056                           ;PICLibs.h: 142: LATB6 = OUTS[2];
  1057  0008C0  A00F               	btfss	LCD_Command@OUTS+4,0,c
  1058  0008C2  D002               	goto	u770
  1059  0008C4  8C8A               	bsf	3978,6,c	;volatile
  1060  0008C6  D001               	goto	l1044
  1061  0008C8                     u770:
  1062  0008C8  9C8A               	bcf	3978,6,c	;volatile
  1063  0008CA                     l1044:
  1064                           
  1065                           ;PICLibs.h: 143: LATB7 = OUTS[3];
  1066  0008CA  A011               	btfss	LCD_Command@OUTS+6,0,c
  1067  0008CC  D002               	goto	u790
  1068  0008CE  8E8A               	bsf	3978,7,c	;volatile
  1069  0008D0  D001               	goto	l1046
  1070  0008D2                     u790:
  1071  0008D2  9E8A               	bcf	3978,7,c	;volatile
  1072  0008D4                     l1046:
  1073                           
  1074                           ;PICLibs.h: 144: LATB3 = 1;
  1075  0008D4  868A               	bsf	3978,3,c	;volatile
  1076                           
  1077                           ;PICLibs.h: 145: __nop();
  1078  0008D6  F000               	nop	
  1079                           
  1080                           ;PICLibs.h: 146: LATB3 = 0;
  1081  0008D8  968A               	bcf	3978,3,c	;volatile
  1082                           
  1083                           ;PICLibs.h: 147: delay_ms(3);
  1084  0008DA  0E00               	movlw	0
  1085  0008DC  6E02               	movwf	delay_ms@tempo+1,c
  1086  0008DE  0E03               	movlw	3
  1087  0008E0  6E01               	movwf	delay_ms@tempo,c
  1088  0008E2  ECB6  F005         	call	_delay_ms	;wreg free
  1089  0008E6  0012               	return		;funcret
  1090  0008E8                     __end_of_LCD_Command:
  1091                           	opt stack 0
  1092                           tblptru	equ	0xFF8
  1093                           tblptrh	equ	0xFF7
  1094                           tblptrl	equ	0xFF6
  1095                           tablat	equ	0xFF5
  1096                           postinc2	equ	0xFDE
  1097                           postdec2	equ	0xFDD
  1098                           fsr2h	equ	0xFDA
  1099                           fsr2l	equ	0xFD9
  1100                           status	equ	0xFD8
  1101                           
  1102 ;; *************** function _LCD_Char *****************
  1103 ;; Defined at:
  1104 ;;		line 169 in file "PICLibs.h"
  1105 ;; Parameters:    Size  Location     Type
  1106 ;;  dat             1    wreg     unsigned char 
  1107 ;; Auto vars:     Size  Location     Type
  1108 ;;  dat             1   26[COMRAM] unsigned char 
  1109 ;;  OUTS           16   10[COMRAM] short [8]
  1110 ;;  i               2   27[COMRAM] short 
  1111 ;; Return value:  Size  Location     Type
  1112 ;;                  1    wreg      void 
  1113 ;; Registers used:
  1114 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  1115 ;; Tracked objects:
  1116 ;;		On entry : 0/0
  1117 ;;		On exit  : 0/0
  1118 ;;		Unchanged: 0/0
  1119 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1120 ;;      Params:         0       0       0       0       0       0       0       0       0
  1121 ;;      Locals:        19       0       0       0       0       0       0       0       0
  1122 ;;      Temps:          2       0       0       0       0       0       0       0       0
  1123 ;;      Totals:        21       0       0       0       0       0       0       0       0
  1124 ;;Total ram usage:       21 bytes
  1125 ;; Hardware stack levels used:    1
  1126 ;; Hardware stack levels required when called:    1
  1127 ;; This function calls:
  1128 ;;		___awdiv
  1129 ;;		_delay_ms
  1130 ;; This function is called by:
  1131 ;;		_LCD_Char_xy
  1132 ;;		_LCD_String
  1133 ;; This function uses a non-reentrant model
  1134 ;;
  1135                           
  1136                           	psect	text8
  1137  0008E8                     __ptext8:
  1138                           	opt stack 0
  1139  0008E8                     _LCD_Char:
  1140                           	opt stack 27
  1141                           
  1142                           ;incstack = 0
  1143                           ;LCD_Char@dat stored from wreg
  1144  0008E8  6E1B               	movwf	LCD_Char@dat,c
  1145                           
  1146                           ;PICLibs.h: 171: short OUTS[8], i;
  1147                           ;PICLibs.h: 173: for (i=0; i < 8; i++ ) {
  1148  0008EA  0E00               	movlw	0
  1149  0008EC  6E1D               	movwf	LCD_Char@i+1,c
  1150  0008EE  0E00               	movlw	0
  1151  0008F0  6E1C               	movwf	LCD_Char@i,c
  1152  0008F2  BE1D               	btfsc	LCD_Char@i+1,7,c
  1153  0008F4  D006               	goto	l1058
  1154  0008F6  501D               	movf	LCD_Char@i+1,w,c
  1155  0008F8  E127               	bnz	l65
  1156  0008FA  0E08               	movlw	8
  1157  0008FC  5C1C               	subwf	LCD_Char@i,w,c
  1158  0008FE  B0D8               	btfsc	status,0,c
  1159  000900  D023               	goto	l65
  1160  000902                     l1058:
  1161                           
  1162                           ;PICLibs.h: 176: OUTS[i] = dat % 2;
  1163  000902  501B               	movf	LCD_Char@dat,w,c
  1164  000904  0B01               	andlw	1
  1165  000906  6E09               	movwf	??_LCD_Char& (0+255),c
  1166  000908  6A0A               	clrf	(??_LCD_Char+1)& (0+255),c
  1167  00090A  90D8               	bcf	status,0,c
  1168  00090C  341C               	rlcf	LCD_Char@i,w,c
  1169  00090E  6ED9               	movwf	fsr2l,c
  1170  000910  341D               	rlcf	LCD_Char@i+1,w,c
  1171  000912  6EDA               	movwf	fsr2h,c
  1172  000914  0E0B               	movlw	low LCD_Char@OUTS
  1173  000916  26D9               	addwf	fsr2l,f,c
  1174  000918  0E00               	movlw	high LCD_Char@OUTS
  1175  00091A  22DA               	addwfc	fsr2h,f,c
  1176  00091C  C009  FFDE         	movff	??_LCD_Char,postinc2
  1177  000920  C00A  FFDD         	movff	??_LCD_Char+1,postdec2
  1178                           
  1179                           ;PICLibs.h: 177: dat = dat / 2;
  1180  000924  C01B  F001         	movff	LCD_Char@dat,___awdiv@dividend
  1181  000928  6A02               	clrf	___awdiv@dividend+1,c
  1182  00092A  0E00               	movlw	0
  1183  00092C  6E04               	movwf	___awdiv@divisor+1,c
  1184  00092E  0E02               	movlw	2
  1185  000930  6E03               	movwf	___awdiv@divisor,c
  1186  000932  EC3C  F005         	call	___awdiv	;wreg free
  1187  000936  5001               	movf	?___awdiv,w,c
  1188  000938  6E1B               	movwf	LCD_Char@dat,c
  1189  00093A  4A1C               	infsnz	LCD_Char@i,f,c
  1190  00093C  2A1D               	incf	LCD_Char@i+1,f,c
  1191  00093E  BE1D               	btfsc	LCD_Char@i+1,7,c
  1192  000940  D7E0               	goto	l1058
  1193  000942  501D               	movf	LCD_Char@i+1,w,c
  1194  000944  E101               	bnz	u820
  1195  000946  D7D9               	goto	L2
  1196  000948                     u820:
  1197  000948                     l65:
  1198                           
  1199                           ;PICLibs.h: 178: }
  1200                           ;PICLibs.h: 181: LATB4 = OUTS[4];
  1201  000948  A013               	btfss	LCD_Char@OUTS+8,0,c
  1202  00094A  D002               	goto	u830
  1203  00094C  888A               	bsf	3978,4,c	;volatile
  1204  00094E  D001               	goto	u845
  1205  000950                     u830:
  1206  000950  988A               	bcf	3978,4,c	;volatile
  1207  000952                     u845:
  1208                           
  1209                           ;PICLibs.h: 182: LATB5 = OUTS[5];
  1210  000952  A015               	btfss	LCD_Char@OUTS+10,0,c
  1211  000954  D002               	goto	u850
  1212  000956  8A8A               	bsf	3978,5,c	;volatile
  1213  000958  D001               	goto	u865
  1214  00095A                     u850:
  1215  00095A  9A8A               	bcf	3978,5,c	;volatile
  1216  00095C                     u865:
  1217                           
  1218                           ;PICLibs.h: 183: LATB6 = OUTS[6];
  1219  00095C  A017               	btfss	LCD_Char@OUTS+12,0,c
  1220  00095E  D002               	goto	u870
  1221  000960  8C8A               	bsf	3978,6,c	;volatile
  1222  000962  D001               	goto	u885
  1223  000964                     u870:
  1224  000964  9C8A               	bcf	3978,6,c	;volatile
  1225  000966                     u885:
  1226                           
  1227                           ;PICLibs.h: 184: LATB7 = OUTS[7];
  1228  000966  A019               	btfss	LCD_Char@OUTS+14,0,c
  1229  000968  D002               	goto	u890
  1230  00096A  8E8A               	bsf	3978,7,c	;volatile
  1231  00096C  D001               	goto	u905
  1232  00096E                     u890:
  1233  00096E  9E8A               	bcf	3978,7,c	;volatile
  1234  000970                     u905:
  1235                           
  1236                           ;PICLibs.h: 185: LATB2 = 1;
  1237  000970  848A               	bsf	3978,2,c	;volatile
  1238                           
  1239                           ;PICLibs.h: 186: LATB3 = 1;
  1240  000972  868A               	bsf	3978,3,c	;volatile
  1241                           
  1242                           ;PICLibs.h: 187: __nop();
  1243  000974  F000               	nop	
  1244                           
  1245                           ;PICLibs.h: 188: LATB3 = 0;
  1246  000976  968A               	bcf	3978,3,c	;volatile
  1247                           
  1248                           ;PICLibs.h: 189: delay_ms(1);
  1249  000978  0E00               	movlw	0
  1250  00097A  6E02               	movwf	delay_ms@tempo+1,c
  1251  00097C  0E01               	movlw	1
  1252  00097E  6E01               	movwf	delay_ms@tempo,c
  1253  000980  ECB6  F005         	call	_delay_ms	;wreg free
  1254                           
  1255                           ;PICLibs.h: 191: LATB4 = OUTS[0];
  1256  000984  A00B               	btfss	LCD_Char@OUTS,0,c
  1257  000986  D002               	goto	u910
  1258  000988  888A               	bsf	3978,4,c	;volatile
  1259  00098A  D001               	goto	l1070
  1260  00098C                     u910:
  1261  00098C  988A               	bcf	3978,4,c	;volatile
  1262  00098E                     l1070:
  1263                           
  1264                           ;PICLibs.h: 192: LATB5 = OUTS[1];
  1265  00098E  A00D               	btfss	LCD_Char@OUTS+2,0,c
  1266  000990  D002               	goto	u930
  1267  000992  8A8A               	bsf	3978,5,c	;volatile
  1268  000994  D001               	goto	l1072
  1269  000996                     u930:
  1270  000996  9A8A               	bcf	3978,5,c	;volatile
  1271  000998                     l1072:
  1272                           
  1273                           ;PICLibs.h: 193: LATB6 = OUTS[2];
  1274  000998  A00F               	btfss	LCD_Char@OUTS+4,0,c
  1275  00099A  D002               	goto	u950
  1276  00099C  8C8A               	bsf	3978,6,c	;volatile
  1277  00099E  D001               	goto	l1074
  1278  0009A0                     u950:
  1279  0009A0  9C8A               	bcf	3978,6,c	;volatile
  1280  0009A2                     l1074:
  1281                           
  1282                           ;PICLibs.h: 194: LATB7 = OUTS[3];
  1283  0009A2  A011               	btfss	LCD_Char@OUTS+6,0,c
  1284  0009A4  D002               	goto	u970
  1285  0009A6  8E8A               	bsf	3978,7,c	;volatile
  1286  0009A8  D001               	goto	l1076
  1287  0009AA                     u970:
  1288  0009AA  9E8A               	bcf	3978,7,c	;volatile
  1289  0009AC                     l1076:
  1290                           
  1291                           ;PICLibs.h: 195: LATB3 = 1;
  1292  0009AC  868A               	bsf	3978,3,c	;volatile
  1293                           
  1294                           ;PICLibs.h: 196: __nop();
  1295  0009AE  F000               	nop	
  1296                           
  1297                           ;PICLibs.h: 197: LATB3 = 0;
  1298  0009B0  968A               	bcf	3978,3,c	;volatile
  1299                           
  1300                           ;PICLibs.h: 198: delay_ms(3);
  1301  0009B2  0E00               	movlw	0
  1302  0009B4  6E02               	movwf	delay_ms@tempo+1,c
  1303  0009B6  0E03               	movlw	3
  1304  0009B8  6E01               	movwf	delay_ms@tempo,c
  1305  0009BA  ECB6  F005         	call	_delay_ms	;wreg free
  1306  0009BE  0012               	return		;funcret
  1307  0009C0                     __end_of_LCD_Char:
  1308                           	opt stack 0
  1309                           tblptru	equ	0xFF8
  1310                           tblptrh	equ	0xFF7
  1311                           tblptrl	equ	0xFF6
  1312                           tablat	equ	0xFF5
  1313                           postinc2	equ	0xFDE
  1314                           postdec2	equ	0xFDD
  1315                           fsr2h	equ	0xFDA
  1316                           fsr2l	equ	0xFD9
  1317                           status	equ	0xFD8
  1318                           
  1319 ;; *************** function _delay_ms *****************
  1320 ;; Defined at:
  1321 ;;		line 101 in file "PICLibs.h"
  1322 ;; Parameters:    Size  Location     Type
  1323 ;;  tempo           2    0[COMRAM] unsigned int 
  1324 ;; Auto vars:     Size  Location     Type
  1325 ;;  j               4    4[COMRAM] unsigned long 
  1326 ;;  i               2    2[COMRAM] unsigned int 
  1327 ;; Return value:  Size  Location     Type
  1328 ;;                  1    wreg      void 
  1329 ;; Registers used:
  1330 ;;		wreg, status,2, status,0
  1331 ;; Tracked objects:
  1332 ;;		On entry : 0/0
  1333 ;;		On exit  : 0/0
  1334 ;;		Unchanged: 0/0
  1335 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1336 ;;      Params:         2       0       0       0       0       0       0       0       0
  1337 ;;      Locals:         6       0       0       0       0       0       0       0       0
  1338 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1339 ;;      Totals:         8       0       0       0       0       0       0       0       0
  1340 ;;Total ram usage:        8 bytes
  1341 ;; Hardware stack levels used:    1
  1342 ;; This function calls:
  1343 ;;		Nothing
  1344 ;; This function is called by:
  1345 ;;		_LCD_Command
  1346 ;;		_LCD_Init
  1347 ;;		_LCD_Char
  1348 ;;		_main
  1349 ;;		_LCD_Clear
  1350 ;; This function uses a non-reentrant model
  1351 ;;
  1352                           
  1353                           	psect	text9
  1354  000B6C                     __ptext9:
  1355                           	opt stack 0
  1356  000B6C                     _delay_ms:
  1357                           	opt stack 28
  1358                           
  1359                           ;PICLibs.h: 103: unsigned int i;
  1360                           ;PICLibs.h: 104: unsigned long j;
  1361                           ;PICLibs.h: 106: for(i=0;i<tempo;i++){
  1362                           
  1363                           ;incstack = 0
  1364  000B6C  0E00               	movlw	0
  1365  000B6E  6E04               	movwf	delay_ms@i+1,c
  1366  000B70  0E00               	movlw	0
  1367  000B72  6E03               	movwf	delay_ms@i,c
  1368  000B74  D019               	goto	l976
  1369  000B76                     l966:
  1370                           
  1371                           ;PICLibs.h: 107: for(j=0;j<8000000/65200 ;j++);
  1372  000B76  0E00               	movlw	0
  1373  000B78  6E05               	movwf	delay_ms@j,c
  1374  000B7A  0E00               	movlw	0
  1375  000B7C  6E06               	movwf	delay_ms@j+1,c
  1376  000B7E  0E00               	movlw	0
  1377  000B80  6E07               	movwf	delay_ms@j+2,c
  1378  000B82  0E00               	movlw	0
  1379  000B84  6E08               	movwf	delay_ms@j+3,c
  1380  000B86                     l968:
  1381  000B86  5008               	movf	delay_ms@j+3,w,c
  1382  000B88  1007               	iorwf	delay_ms@j+2,w,c
  1383  000B8A  1006               	iorwf	delay_ms@j+1,w,c
  1384  000B8C  E10B               	bnz	l974
  1385  000B8E  0E7A               	movlw	122
  1386  000B90  5C05               	subwf	delay_ms@j,w,c
  1387  000B92  B0D8               	btfsc	status,0,c
  1388  000B94  D007               	goto	l974
  1389  000B96  0E01               	movlw	1
  1390  000B98  2605               	addwf	delay_ms@j,f,c
  1391  000B9A  0E00               	movlw	0
  1392  000B9C  2206               	addwfc	delay_ms@j+1,f,c
  1393  000B9E  2207               	addwfc	delay_ms@j+2,f,c
  1394  000BA0  2208               	addwfc	delay_ms@j+3,f,c
  1395  000BA2  D7F1               	goto	l968
  1396  000BA4                     l974:
  1397  000BA4  4A03               	infsnz	delay_ms@i,f,c
  1398  000BA6  2A04               	incf	delay_ms@i+1,f,c
  1399  000BA8                     l976:
  1400  000BA8  5001               	movf	delay_ms@tempo,w,c
  1401  000BAA  5C03               	subwf	delay_ms@i,w,c
  1402  000BAC  5002               	movf	delay_ms@tempo+1,w,c
  1403  000BAE  5804               	subwfb	delay_ms@i+1,w,c
  1404  000BB0  B0D8               	btfsc	status,0,c
  1405  000BB2  0012               	return	
  1406  000BB4  D7E0               	goto	l966
  1407  000BB6                     __end_of_delay_ms:
  1408                           	opt stack 0
  1409                           tblptru	equ	0xFF8
  1410                           tblptrh	equ	0xFF7
  1411                           tblptrl	equ	0xFF6
  1412                           tablat	equ	0xFF5
  1413                           postinc2	equ	0xFDE
  1414                           postdec2	equ	0xFDD
  1415                           fsr2h	equ	0xFDA
  1416                           fsr2l	equ	0xFD9
  1417                           status	equ	0xFD8
  1418                           
  1419 ;; *************** function ___awdiv *****************
  1420 ;; Defined at:
  1421 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.38\sources\common\awdiv.c"
  1422 ;; Parameters:    Size  Location     Type
  1423 ;;  dividend        2    0[COMRAM] int 
  1424 ;;  divisor         2    2[COMRAM] int 
  1425 ;; Auto vars:     Size  Location     Type
  1426 ;;  quotient        2    6[COMRAM] int 
  1427 ;;  sign            1    5[COMRAM] unsigned char 
  1428 ;;  counter         1    4[COMRAM] unsigned char 
  1429 ;; Return value:  Size  Location     Type
  1430 ;;                  2    0[COMRAM] int 
  1431 ;; Registers used:
  1432 ;;		wreg, status,2, status,0
  1433 ;; Tracked objects:
  1434 ;;		On entry : 0/0
  1435 ;;		On exit  : 0/0
  1436 ;;		Unchanged: 0/0
  1437 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1438 ;;      Params:         4       0       0       0       0       0       0       0       0
  1439 ;;      Locals:         4       0       0       0       0       0       0       0       0
  1440 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1441 ;;      Totals:         8       0       0       0       0       0       0       0       0
  1442 ;;Total ram usage:        8 bytes
  1443 ;; Hardware stack levels used:    1
  1444 ;; This function calls:
  1445 ;;		Nothing
  1446 ;; This function is called by:
  1447 ;;		_LCD_Command
  1448 ;;		_LCD_Char
  1449 ;;		_main
  1450 ;; This function uses a non-reentrant model
  1451 ;;
  1452                           
  1453                           	psect	text10
  1454  000A78                     __ptext10:
  1455                           	opt stack 0
  1456  000A78                     ___awdiv:
  1457                           	opt stack 27
  1458                           
  1459                           ;incstack = 0
  1460  000A78  0E00               	movlw	0
  1461  000A7A  6E06               	movwf	___awdiv@sign,c
  1462  000A7C  AE04               	btfss	___awdiv@divisor+1,7,c
  1463  000A7E  D006               	goto	l986
  1464  000A80  6C03               	negf	___awdiv@divisor,c
  1465  000A82  1E04               	comf	___awdiv@divisor+1,f,c
  1466  000A84  B0D8               	btfsc	status,0,c
  1467  000A86  2A04               	incf	___awdiv@divisor+1,f,c
  1468  000A88  0E01               	movlw	1
  1469  000A8A  6E06               	movwf	___awdiv@sign,c
  1470  000A8C                     l986:
  1471  000A8C  AE02               	btfss	___awdiv@dividend+1,7,c
  1472  000A8E  D006               	goto	l992
  1473  000A90  6C01               	negf	___awdiv@dividend,c
  1474  000A92  1E02               	comf	___awdiv@dividend+1,f,c
  1475  000A94  B0D8               	btfsc	status,0,c
  1476  000A96  2A02               	incf	___awdiv@dividend+1,f,c
  1477  000A98  0E01               	movlw	1
  1478  000A9A  1A06               	xorwf	___awdiv@sign,f,c
  1479  000A9C                     l992:
  1480  000A9C  0E00               	movlw	0
  1481  000A9E  6E08               	movwf	___awdiv@quotient+1,c
  1482  000AA0  0E00               	movlw	0
  1483  000AA2  6E07               	movwf	___awdiv@quotient,c
  1484  000AA4  5003               	movf	___awdiv@divisor,w,c
  1485  000AA6  1004               	iorwf	___awdiv@divisor+1,w,c
  1486  000AA8  B4D8               	btfsc	status,2,c
  1487  000AAA  D01C               	goto	l1014
  1488  000AAC  0E01               	movlw	1
  1489  000AAE  6E05               	movwf	___awdiv@counter,c
  1490  000AB0  D004               	goto	l1000
  1491  000AB2                     l998:
  1492  000AB2  90D8               	bcf	status,0,c
  1493  000AB4  3603               	rlcf	___awdiv@divisor,f,c
  1494  000AB6  3604               	rlcf	___awdiv@divisor+1,f,c
  1495  000AB8  2A05               	incf	___awdiv@counter,f,c
  1496  000ABA                     l1000:
  1497  000ABA  AE04               	btfss	___awdiv@divisor+1,7,c
  1498  000ABC  D7FA               	goto	l998
  1499  000ABE                     l1002:
  1500  000ABE  90D8               	bcf	status,0,c
  1501  000AC0  3607               	rlcf	___awdiv@quotient,f,c
  1502  000AC2  3608               	rlcf	___awdiv@quotient+1,f,c
  1503  000AC4  5003               	movf	___awdiv@divisor,w,c
  1504  000AC6  5C01               	subwf	___awdiv@dividend,w,c
  1505  000AC8  5004               	movf	___awdiv@divisor+1,w,c
  1506  000ACA  5802               	subwfb	___awdiv@dividend+1,w,c
  1507  000ACC  A0D8               	btfss	status,0,c
  1508  000ACE  D005               	goto	l1010
  1509  000AD0  5003               	movf	___awdiv@divisor,w,c
  1510  000AD2  5E01               	subwf	___awdiv@dividend,f,c
  1511  000AD4  5004               	movf	___awdiv@divisor+1,w,c
  1512  000AD6  5A02               	subwfb	___awdiv@dividend+1,f,c
  1513  000AD8  8007               	bsf	___awdiv@quotient,0,c
  1514  000ADA                     l1010:
  1515  000ADA  90D8               	bcf	status,0,c
  1516  000ADC  3204               	rrcf	___awdiv@divisor+1,f,c
  1517  000ADE  3203               	rrcf	___awdiv@divisor,f,c
  1518  000AE0  2E05               	decfsz	___awdiv@counter,f,c
  1519  000AE2  D7ED               	goto	l1002
  1520  000AE4                     l1014:
  1521  000AE4  5006               	movf	___awdiv@sign,w,c
  1522  000AE6  B4D8               	btfsc	status,2,c
  1523  000AE8  D004               	goto	l1018
  1524  000AEA  6C07               	negf	___awdiv@quotient,c
  1525  000AEC  1E08               	comf	___awdiv@quotient+1,f,c
  1526  000AEE  B0D8               	btfsc	status,0,c
  1527  000AF0  2A08               	incf	___awdiv@quotient+1,f,c
  1528  000AF2                     l1018:
  1529  000AF2  C007  F001         	movff	___awdiv@quotient,?___awdiv
  1530  000AF6  C008  F002         	movff	___awdiv@quotient+1,?___awdiv+1
  1531  000AFA  0012               	return	
  1532  000AFC                     __end_of___awdiv:
  1533                           	opt stack 0
  1534                           tblptru	equ	0xFF8
  1535                           tblptrh	equ	0xFF7
  1536                           tblptrl	equ	0xFF6
  1537                           tablat	equ	0xFF5
  1538                           postinc2	equ	0xFDE
  1539                           postdec2	equ	0xFDD
  1540                           fsr2h	equ	0xFDA
  1541                           fsr2l	equ	0xFD9
  1542                           status	equ	0xFD8
  1543                           tblptru	equ	0xFF8
  1544                           tblptrh	equ	0xFF7
  1545                           tblptrl	equ	0xFF6
  1546                           tablat	equ	0xFF5
  1547                           postinc2	equ	0xFDE
  1548                           postdec2	equ	0xFDD
  1549                           fsr2h	equ	0xFDA
  1550                           fsr2l	equ	0xFD9
  1551                           status	equ	0xFD8
  1552                           
  1553                           	psect	rparam
  1554  0000                     tblptru	equ	0xFF8
  1555                           tblptrh	equ	0xFF7
  1556                           tblptrl	equ	0xFF6
  1557                           tablat	equ	0xFF5
  1558                           postinc2	equ	0xFDE
  1559                           postdec2	equ	0xFDD
  1560                           fsr2h	equ	0xFDA
  1561                           fsr2l	equ	0xFD9
  1562                           status	equ	0xFD8


Data Sizes:
    Strings     13
    Constant    0
    Data        0
    BSS         0
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           95     39      39
    BANK0           160      0       0
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0

Pointer List with Targets:

    LCD_String_xy@msg	PTR const unsigned char  size(2) Largest target is 13
		 -> STR_1(CODE[13]), 

    LCD_String@msg	PTR const unsigned char  size(2) Largest target is 13
		 -> STR_1(CODE[13]), 


Critical Paths under _main in COMRAM

    _main->_LCD_String_xy
    _LCD_Init->_LCD_Command
    ___awmod->___awdiv
    _LCD_String_xy->_LCD_String
    _LCD_String->_LCD_Char
    _LCD_Char_xy->_LCD_Char
    _LCD_Char_xy->_LCD_Command
    _LCD_Command->___awdiv
    _LCD_Command->_delay_ms
    _LCD_Char->___awdiv
    _LCD_Char->_delay_ms

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 4     4      0   11855
                                             36 COMRAM     3     3      0
                        _LCD_Char_xy
                      _LCD_String_xy
                            ___awdiv
                            ___awmod
                           _delay_ms
                              _setup
 ---------------------------------------------------------------------------------
 (1) _setup                                                0     0      0    2212
                           _LCD_Init
 ---------------------------------------------------------------------------------
 (2) _LCD_Init                                             0     0      0    2212
                        _LCD_Command
                           _delay_ms
 ---------------------------------------------------------------------------------
 (1) ___awmod                                              6     2      4     552
                                              8 COMRAM     6     2      4
                            ___awdiv (ARG)
 ---------------------------------------------------------------------------------
 (1) _LCD_String_xy                                        5     2      3    3716
                                             31 COMRAM     5     2      3
                        _LCD_Command
                         _LCD_String
 ---------------------------------------------------------------------------------
 (2) _LCD_String                                           2     0      2    1781
                                             29 COMRAM     2     0      2
                           _LCD_Char
 ---------------------------------------------------------------------------------
 (1) _LCD_Char_xy                                          4     2      2    3863
                                             29 COMRAM     4     2      2
                           _LCD_Char
                        _LCD_Command
                            ___awmod (ARG)
 ---------------------------------------------------------------------------------
 (3) _LCD_Command                                         21    21      0    1672
                                              8 COMRAM    21    21      0
                            ___awdiv
                           _delay_ms
 ---------------------------------------------------------------------------------
 (3) _LCD_Char                                            21    21      0    1672
                                              8 COMRAM    21    21      0
                            ___awdiv
                           _delay_ms
 ---------------------------------------------------------------------------------
 (3) _delay_ms                                             8     6      2     540
                                              0 COMRAM     8     6      2
 ---------------------------------------------------------------------------------
 (4) ___awdiv                                              8     4      4     812
                                              0 COMRAM     8     4      4
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _LCD_Char_xy
     _LCD_Char
       ___awdiv
       _delay_ms
     _LCD_Command
       ___awdiv
       _delay_ms
     ___awmod (ARG)
       ___awdiv (ARG)
   _LCD_String_xy
     _LCD_Command
       ___awdiv
       _delay_ms
     _LCD_String
       _LCD_Char
         ___awdiv
         _delay_ms
   ___awdiv
   ___awmod
     ___awdiv (ARG)
   _delay_ms
   _setup
     _LCD_Init
       _LCD_Command
         ___awdiv
         _delay_ms
       _delay_ms

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMRAM           5F      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMRAM              5F     27      27       1       41.1%
STACK                0      0       0       2        0.0%
DATA                 0      0       0       3        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0      0       0       5        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
ABS                  0      0       0      20        0.0%
BIGRAM             7FF      0       0      21        0.0%
BITSFR               0      0       0      40        0.0%
SFR                  0      0       0      40        0.0%


Microchip Technology PIC18 Macro Assembler V1.38 build -256452561 
Symbol Table                                                                                   Fri Aug 28 18:20:44 2020

           ?_LCD_Char_xy 001E             ?_LCD_Command 0001                       l65 0948  
                     l57 0870             ___awdiv@sign 0006              __CFG_BORV$3 000000  
            ?_LCD_String 001E             __CFG_CP0$OFF 000000             __CFG_CP1$OFF 000000  
           __CFG_CP2$OFF 000000             __CFG_CP3$OFF 000000                      l974 0BA4  
                    l966 0B76                      l992 0A9C                      l968 0B86  
                    l976 0BA8                      l986 0A8C                      l998 0AB2  
           __CFG_CPB$OFF 000000             __CFG_CPD$OFF 000000                      u710 0896  
                    u640 0870                      u705 088E                      u730 08B4  
                    u650 0878                      u820 0948                      u725 0898  
                    u910 098C                      u830 0950                      u750 08BE  
                    u670 0882                      u905 0970                      u665 087A  
                    u930 0996                      u850 095A                      u770 08C8  
                    u690 088C                      u845 0952                      u685 0884  
                    u950 09A0                      u870 0964                      u790 08D2  
                    u865 095C                      u970 09AA                      u890 096E  
                    u885 0966             __CFG_BOR$OFF 000000             ___awmod@sign 000E  
           __CFG_LVP$OFF 000000              LCD_Char@dat 001B             __CFG_WDT$OFF 000000  
                   l1000 0ABA                     l1010 0ADA                     l1002 0ABE  
                   l1014 0AE4                     l1110 0C12                     l1102 0C86  
                   l1040 08B6                     l1018 0AF2                     l1042 08C0  
                   l1106 0C02                     l1122 0BBE                     l1044 08CA  
                   l1028 082A                     l1116 0C22                     l1132 0BDE  
                   l1070 098E                     l1046 08D4                     l1118 0C30  
                   l1126 0BCE                     l1134 0BEC                     l1072 0998  
                   l1160 0B36                     l1152 0B1C                     l1074 09A2  
                   l1058 0902                     l1076 09AC                     l1172 0B62  
                   l1164 0B4A                     l1156 0B2A                     l1148 0B10  
                   l1158 0B32                     l1168 0B54                     l1184 09CC  
                   l1098 0C72                     STR_1 0801             __CFG_PWRT$ON 000000  
                   _main 09C0                     fsr2h 000FDA                     fsr2l 000FD9  
                   start 0000            __CFG_IESO$OFF 000000            _LCD_String_xy 0BB6  
          __CFG_MCLRE$ON 000000             ___param_bank 000010             LCD_Char@OUTS 000B  
       __end_of_LCD_Char 09C0         __end_of_LCD_Init 0C70            __CFG_PLLDIV$5 000000  
         __CFG_CCP2MX$ON 000000                    ?_main 0001          __end_of___awdiv 0AFC  
                  _ADRES 000FC3          __end_of___awmod 0B6C          ___awdiv@divisor 0003  
                  _LATB2 007C52                    _LATB3 007C53                    _LATB4 007C54  
                  _LATB5 007C55                    _LATB6 007C56                    _LATB7 007C57  
        ___awdiv@counter 0005            __CFG_USBDIV$2 000000            __CFG_WRT0$OFF 000000  
          __CFG_WRT1$OFF 000000            __CFG_WRT2$OFF 000000            __CFG_WRT3$OFF 000000  
         __CFG_EBTR0$OFF 000000           __CFG_FCMEN$OFF 000000           __CFG_EBTR1$OFF 000000  
         __CFG_EBTR2$OFF 000000           __CFG_EBTR3$OFF 000000            __CFG_WRTB$OFF 000000  
          __CFG_WRTC$OFF 000000            __CFG_WRTD$OFF 000000           __CFG_EBTRB$OFF 000000  
                  _setup 0CA4             LCD_Command@i 001C                    tablat 000FF5  
                  status 000FD8      __size_of_LCD_String 002A           ?_LCD_String_xy 0020  
        __initialization 0C9A             __end_of_main 0A78                   ??_main 0025  
          __activetblptr 000002         ___awdiv@dividend 0001                   ?_setup 0001  
       LCD_String_xy@msg 0021         LCD_String_xy@pos 0020         LCD_String_xy@row 0023  
                 _OSCCON 000FD3                   _TRISB2 007C9A                   _TRISB3 007C9B  
                 _TRISB4 007C9C                   _TRISB5 007C9D                   _TRISB6 007C9E  
                 _TRISB7 007C9F         __end_of_delay_ms 0BB6           __CFG_XINST$OFF 000000  
              ??___awdiv 0005           __CFG_STVREN$ON 000000                ??___awmod 000D  
   __size_of_LCD_Char_xy 003E         ___awdiv@quotient 0007          ___awmod@divisor 000B  
        ___awmod@counter 000D     __size_of_LCD_Command 00D8             __mediumconst 0000  
                 tblptrh 000FF7                   tblptrl 000FF6                   tblptru 000FF8  
              ?_LCD_Char 0001               __accesstop 0060  __end_of__initialization 0C9A  
              ?_LCD_Init 0001          __CFG_PBADEN$OFF 000000          ??_LCD_String_xy 0023  
          ___rparam_used 000001                LCD_Char@i 001C           __pcstackCOMRAM 0001  
          __end_of_setup 0CAE             ??_LCD_String 0020                  ??_setup 001E  
             ??_LCD_Char 0009               ??_LCD_Init 001E       __end_of_LCD_String 0C9A  
         LCD_Char_xy@dat 001F           LCD_Char_xy@pos 001E           LCD_Char_xy@row 0020  
              ?_delay_ms 0001          __CFG_VREGEN$OFF 000000            LCD_String@msg 001E  
                __Hparam 0000                  __Lparam 0000                  ___awdiv 0A78  
                ___awmod 0AFC             __psmallconst 0800                  __pcinit 0C9A  
                __ramtop 0800                  __ptext0 09C0                  __ptext1 0CA4  
                __ptext2 0C38                  __ptext3 0AFC                  __ptext4 0BB6  
                __ptext5 0C70                  __ptext6 0BFA                  __ptext7 0810  
                __ptext8 08E8                  __ptext9 0B6C         ___awmod@dividend 0009  
             ??_delay_ms 0003     end_of_initialization 0C9A           LCD_Command@cmd 001B  
          __Lmediumconst 0000                  postdec2 000FDD                  postinc2 000FDE  
      __size_of_LCD_Char 00D8        __size_of_LCD_Init 0038            ??_LCD_Char_xy 0020  
          ??_LCD_Command 0009            delay_ms@tempo 0001      start_initialization 0C9A  
  __end_of_LCD_String_xy 0BFA      LCD_Char_xy@location 0021         __CFG_LPT1OSC$OFF 000000  
    __end_of_LCD_Char_xy 0C38      __end_of_LCD_Command 08E8        __size_of_delay_ms 004A  
               ?___awdiv 0001                 ?___awmod 0009              __smallconst 0800  
  LCD_String_xy@location 0024           __size_of_setup 000A                 _LCD_Char 08E8  
               _LCD_Init 0C38                delay_ms@i 0003                delay_ms@j 0005  
       __CFG_WDTPS$32768 000000              _LCD_Char_xy 0BFA              _LCD_Command 0810  
             _ADCON0bits 000FC2               _ADCON1bits 000FC1               _ADCON2bits 000FC0  
               __Hrparam 0000                 __Lrparam 0000         __size_of___awdiv 0084  
       __size_of___awmod 0070                 _main$785 0025                 _delay_ms 0B6C  
               __ptext10 0A78            __size_of_main 00B8                 main@cont 0026  
             _LCD_String 0C70    __CFG_CPUDIV$OSC2_PLL3 000000          LCD_Command@OUTS 000B  
    __CFG_FOSC$INTOSC_HS 000000   __size_of_LCD_String_xy 0044  
