;  LST file generated by mikroListExporter - v.2.0 
; Date/Time: 27/05/2020 15:04:19
;----------------------------------------------

;Address Opcode 	ASM
0x0000	0x2942      	GOTO       322
_interrupt:
0x0004	0x00FF      	MOVWF      R15
0x0005	0x0E03      	SWAPF      STATUS, 0
0x0006	0x0183      	CLRF       STATUS
0x0007	0x00A5      	MOVWF      ___saveSTATUS
0x0008	0x080A      	MOVF       PCLATH, 0
0x0009	0x00A6      	MOVWF      ___savePCLATH
0x000A	0x018A      	CLRF       PCLATH
0x000B	0x0870      	MOVF       R0, 0
0x000C	0x00A0      	MOVWF      32
;USARTMotor.c,21 :: 		void interrupt(){
;USARTMotor.c,23 :: 		if(RCIF_bit){
0x000D	0x1E8C      	BTFSS      RCIF_bit, 5
0x000E	0x2819      	GOTO       L_interrupt0
;USARTMotor.c,25 :: 		RCIF_bit = 0x00;
0x000F	0x128C      	BCF        RCIF_bit, 5
;USARTMotor.c,27 :: 		if(FERR_bit || OERR_bit){ // Verifica se há algum erro, se houver
0x0010	0x1918      	BTFSC      FERR_bit, 2
0x0011	0x2815      	GOTO       L__interrupt20
0x0012	0x1898      	BTFSC      OERR_bit, 1
0x0013	0x2815      	GOTO       L__interrupt20
0x0014	0x2818      	GOTO       L_interrupt3
L__interrupt20:
;USARTMotor.c,29 :: 		CREN_bit = 0x00; // Desabilita a recepção contínua para tentar corrigir algum erro
0x0015	0x1218      	BCF        CREN_bit, 4
;USARTMotor.c,30 :: 		CREN_bit = 0x01; // Habilita a recpção contínua novamente
0x0016	0x1618      	BSF        CREN_bit, 4
;USARTMotor.c,32 :: 		asm retfie; // Código em assembly para sair da interrupção, caso tenha sido necessário corrigir algum erro
0x0017	0x0009      	RETFIE
;USARTMotor.c,33 :: 		}
L_interrupt3:
;USARTMotor.c,35 :: 		eco();
0x0018	0x210C      	CALL       _eco
;USARTMotor.c,36 :: 		}
L_interrupt0:
;USARTMotor.c,38 :: 		if(T0IF_bit){
0x0019	0x1D0B      	BTFSS      T0IF_bit, 2
0x001A	0x2827      	GOTO       L_interrupt4
;USARTMotor.c,40 :: 		T0IF_bit = 0x00;
0x001B	0x110B      	BCF        T0IF_bit, 2
;USARTMotor.c,42 :: 		cont++;
0x001C	0x1283      	BCF        STATUS, 5
0x001D	0x0AA1      	INCF       _cont, 1
;USARTMotor.c,44 :: 		if(cont == 0x0A){ // Se cont = 10(decimal) = 0x0A. Se Overflow = 66ms, os leds alternam a cada 66ms x 10 = 660ms
0x001E	0x0821      	MOVF       _cont, 0
0x001F	0x3A0A      	XORLW      10
0x0020	0x1D03      	BTFSS      STATUS, 2
0x0021	0x2827      	GOTO       L_interrupt5
;USARTMotor.c,46 :: 		cont = 0x00;
0x0022	0x01A1      	CLRF       _cont
;USARTMotor.c,47 :: 		led1 = ~led1;
0x0023	0x3001      	MOVLW      1
0x0024	0x0685      	XORWF      RA0_bit, 1
;USARTMotor.c,48 :: 		led2 = ~led2;
0x0025	0x3002      	MOVLW      2
0x0026	0x0685      	XORWF      RA1_bit, 1
;USARTMotor.c,49 :: 		}
L_interrupt5:
;USARTMotor.c,50 :: 		}
L_interrupt4:
;USARTMotor.c,51 :: 		}
L__interrupt23:
0x0027	0x1283      	BCF        STATUS, 5
0x0028	0x0820      	MOVF       32, 0
0x0029	0x00F0      	MOVWF      R0
0x002A	0x0826      	MOVF       ___savePCLATH, 0
0x002B	0x008A      	MOVWF      PCLATH
0x002C	0x0E25      	SWAPF      ___saveSTATUS, 0
0x002D	0x0083      	MOVWF      STATUS
0x002E	0x0EFF      	SWAPF      R15, 1
0x002F	0x0E7F      	SWAPF      R15, 0
0x0030	0x0009      	RETFIE
; end of _interrupt
_____DoICP:
;__Lib_System.c,6 :: 		
;__Lib_System.c,9 :: 		
0x0031	0x1283      	BCF        STATUS, 5
0x0032	0x1303      	BCF        STATUS, 6
0x0033	0x0824      	MOVF       ___DoICPAddr+1, 0
0x0034	0x008A      	MOVWF      PCLATH
;__Lib_System.c,10 :: 		
0x0035	0x0823      	MOVF       ___DoICPAddr, 0
0x0036	0x0082      	MOVWF      PCL
;__Lib_System.c,12 :: 		
0x0037	0x0008      	RETURN
; end of _____DoICP
_bufferTeste:
;USARTMotor.c,175 :: 		void bufferTeste(){
;USARTMotor.c,177 :: 		while(!TRMT_bit);
L_bufferTeste18:
0x0038	0x1683      	BSF        STATUS, 5
0x0039	0x1303      	BCF        STATUS, 6
0x003A	0x1898      	BTFSC      TRMT_bit, 1
0x003B	0x283D      	GOTO       L_bufferTeste19
0x003C	0x2838      	GOTO       L_bufferTeste18
L_bufferTeste19:
;USARTMotor.c,178 :: 		}
0x003D	0x0008      	RETURN
; end of _bufferTeste
___CC2DW:
;__Lib_System.c,24 :: 		
;__Lib_System.c,27 :: 		
_CC2D_Loop1:
;__Lib_System.c,29 :: 		
0x003E	0x2031      	CALL       _____DoICP
0x003F	0x118A      	BCF        PCLATH, 3
0x0040	0x120A      	BCF        PCLATH, 4
;__Lib_System.c,31 :: 		
0x0041	0x0080      	MOVWF      INDF
;__Lib_System.c,32 :: 		
0x0042	0x0A84      	INCF       FSR, 1
;__Lib_System.c,33 :: 		
0x0043	0x0AA3      	INCF       ___DoICPAddr, 1
;__Lib_System.c,35 :: 		
0x0044	0x1903      	BTFSC      STATUS, 2
;__Lib_System.c,36 :: 		
0x0045	0x0AA4      	INCF       ___DoICPAddr+1, 1
;__Lib_System.c,37 :: 		
0x0046	0x03F0      	DECF       R0, 1
;__Lib_System.c,39 :: 		
0x0047	0x1D03      	BTFSS      STATUS, 2
;__Lib_System.c,40 :: 		
0x0048	0x283E      	GOTO       _CC2D_Loop1
;__Lib_System.c,42 :: 		
0x0049	0x0008      	RETURN
; end of ___CC2DW
_motorLigado:
;USARTMotor.c,180 :: 		void motorLigado(){
;USARTMotor.c,182 :: 		TXREG = 'M';
0x004A	0x304D      	MOVLW      77
0x004B	0x1283      	BCF        STATUS, 5
0x004C	0x1303      	BCF        STATUS, 6
0x004D	0x0099      	MOVWF      TXREG
;USARTMotor.c,183 :: 		bufferTeste();
0x004E	0x2038      	CALL       _bufferTeste
;USARTMotor.c,184 :: 		TXREG = 'o';
0x004F	0x306F      	MOVLW      111
0x0050	0x1283      	BCF        STATUS, 5
0x0051	0x0099      	MOVWF      TXREG
;USARTMotor.c,185 :: 		bufferTeste();
0x0052	0x2038      	CALL       _bufferTeste
;USARTMotor.c,186 :: 		TXREG = 't';
0x0053	0x3074      	MOVLW      116
0x0054	0x1283      	BCF        STATUS, 5
0x0055	0x0099      	MOVWF      TXREG
;USARTMotor.c,187 :: 		bufferTeste();
0x0056	0x2038      	CALL       _bufferTeste
;USARTMotor.c,188 :: 		TXREG = 'o';
0x0057	0x306F      	MOVLW      111
0x0058	0x1283      	BCF        STATUS, 5
0x0059	0x0099      	MOVWF      TXREG
;USARTMotor.c,189 :: 		bufferTeste();
0x005A	0x2038      	CALL       _bufferTeste
;USARTMotor.c,190 :: 		TXREG = 'r';
0x005B	0x3072      	MOVLW      114
0x005C	0x1283      	BCF        STATUS, 5
0x005D	0x0099      	MOVWF      TXREG
;USARTMotor.c,191 :: 		bufferTeste();
0x005E	0x2038      	CALL       _bufferTeste
;USARTMotor.c,192 :: 		TXREG = ' ';
0x005F	0x3020      	MOVLW      32
0x0060	0x1283      	BCF        STATUS, 5
0x0061	0x0099      	MOVWF      TXREG
;USARTMotor.c,193 :: 		bufferTeste();
0x0062	0x2038      	CALL       _bufferTeste
;USARTMotor.c,194 :: 		TXREG = 'L';
0x0063	0x304C      	MOVLW      76
0x0064	0x1283      	BCF        STATUS, 5
0x0065	0x0099      	MOVWF      TXREG
;USARTMotor.c,195 :: 		bufferTeste();
0x0066	0x2038      	CALL       _bufferTeste
;USARTMotor.c,196 :: 		TXREG = 'i';
0x0067	0x3069      	MOVLW      105
0x0068	0x1283      	BCF        STATUS, 5
0x0069	0x0099      	MOVWF      TXREG
;USARTMotor.c,197 :: 		bufferTeste();
0x006A	0x2038      	CALL       _bufferTeste
;USARTMotor.c,198 :: 		TXREG = 'g';
0x006B	0x3067      	MOVLW      103
0x006C	0x1283      	BCF        STATUS, 5
0x006D	0x0099      	MOVWF      TXREG
;USARTMotor.c,199 :: 		bufferTeste();
0x006E	0x2038      	CALL       _bufferTeste
;USARTMotor.c,200 :: 		TXREG = 'a';
0x006F	0x3061      	MOVLW      97
0x0070	0x1283      	BCF        STATUS, 5
0x0071	0x0099      	MOVWF      TXREG
;USARTMotor.c,201 :: 		bufferTeste();
0x0072	0x2038      	CALL       _bufferTeste
;USARTMotor.c,202 :: 		TXREG = 'd';
0x0073	0x3064      	MOVLW      100
0x0074	0x1283      	BCF        STATUS, 5
0x0075	0x0099      	MOVWF      TXREG
;USARTMotor.c,203 :: 		bufferTeste();
0x0076	0x2038      	CALL       _bufferTeste
;USARTMotor.c,204 :: 		TXREG = 'o';
0x0077	0x306F      	MOVLW      111
0x0078	0x1283      	BCF        STATUS, 5
0x0079	0x0099      	MOVWF      TXREG
;USARTMotor.c,205 :: 		bufferTeste();
0x007A	0x2038      	CALL       _bufferTeste
;USARTMotor.c,206 :: 		TXREG = '!';
0x007B	0x3021      	MOVLW      33
0x007C	0x1283      	BCF        STATUS, 5
0x007D	0x0099      	MOVWF      TXREG
;USARTMotor.c,207 :: 		bufferTeste();
0x007E	0x2038      	CALL       _bufferTeste
;USARTMotor.c,208 :: 		TXREG = 0x0D;
0x007F	0x300D      	MOVLW      13
0x0080	0x1283      	BCF        STATUS, 5
0x0081	0x0099      	MOVWF      TXREG
;USARTMotor.c,209 :: 		bufferTeste();
0x0082	0x2038      	CALL       _bufferTeste
;USARTMotor.c,210 :: 		TXREG = 0x0A;
0x0083	0x300A      	MOVLW      10
0x0084	0x1283      	BCF        STATUS, 5
0x0085	0x0099      	MOVWF      TXREG
;USARTMotor.c,211 :: 		bufferTeste();
0x0086	0x2038      	CALL       _bufferTeste
;USARTMotor.c,212 :: 		}
0x0087	0x0008      	RETURN
; end of _motorLigado
_textoInicio:
;USARTMotor.c,113 :: 		void textoInicio(){
;USARTMotor.c,115 :: 		TXREG = 'H';
0x0088	0x3048      	MOVLW      72
0x0089	0x1283      	BCF        STATUS, 5
0x008A	0x1303      	BCF        STATUS, 6
0x008B	0x0099      	MOVWF      TXREG
;USARTMotor.c,116 :: 		bufferTeste();
0x008C	0x2038      	CALL       _bufferTeste
;USARTMotor.c,117 :: 		TXREG = 'e';
0x008D	0x3065      	MOVLW      101
0x008E	0x1283      	BCF        STATUS, 5
0x008F	0x0099      	MOVWF      TXREG
;USARTMotor.c,118 :: 		bufferTeste();
0x0090	0x2038      	CALL       _bufferTeste
;USARTMotor.c,119 :: 		TXREG = 'l';
0x0091	0x306C      	MOVLW      108
0x0092	0x1283      	BCF        STATUS, 5
0x0093	0x0099      	MOVWF      TXREG
;USARTMotor.c,120 :: 		bufferTeste();
0x0094	0x2038      	CALL       _bufferTeste
;USARTMotor.c,121 :: 		TXREG = 'l';
0x0095	0x306C      	MOVLW      108
0x0096	0x1283      	BCF        STATUS, 5
0x0097	0x0099      	MOVWF      TXREG
;USARTMotor.c,122 :: 		bufferTeste();
0x0098	0x2038      	CALL       _bufferTeste
;USARTMotor.c,123 :: 		TXREG = 'o';
0x0099	0x306F      	MOVLW      111
0x009A	0x1283      	BCF        STATUS, 5
0x009B	0x0099      	MOVWF      TXREG
;USARTMotor.c,124 :: 		bufferTeste();
0x009C	0x2038      	CALL       _bufferTeste
;USARTMotor.c,125 :: 		TXREG = ' ';
0x009D	0x3020      	MOVLW      32
0x009E	0x1283      	BCF        STATUS, 5
0x009F	0x0099      	MOVWF      TXREG
;USARTMotor.c,126 :: 		bufferTeste();
0x00A0	0x2038      	CALL       _bufferTeste
;USARTMotor.c,127 :: 		TXREG = 'W';
0x00A1	0x3057      	MOVLW      87
0x00A2	0x1283      	BCF        STATUS, 5
0x00A3	0x0099      	MOVWF      TXREG
;USARTMotor.c,128 :: 		bufferTeste();
0x00A4	0x2038      	CALL       _bufferTeste
;USARTMotor.c,129 :: 		TXREG = 'o';
0x00A5	0x306F      	MOVLW      111
0x00A6	0x1283      	BCF        STATUS, 5
0x00A7	0x0099      	MOVWF      TXREG
;USARTMotor.c,130 :: 		bufferTeste();
0x00A8	0x2038      	CALL       _bufferTeste
;USARTMotor.c,131 :: 		TXREG = 'r';
0x00A9	0x3072      	MOVLW      114
0x00AA	0x1283      	BCF        STATUS, 5
0x00AB	0x0099      	MOVWF      TXREG
;USARTMotor.c,132 :: 		bufferTeste();
0x00AC	0x2038      	CALL       _bufferTeste
;USARTMotor.c,133 :: 		TXREG = 'l';
0x00AD	0x306C      	MOVLW      108
0x00AE	0x1283      	BCF        STATUS, 5
0x00AF	0x0099      	MOVWF      TXREG
;USARTMotor.c,134 :: 		bufferTeste();
0x00B0	0x2038      	CALL       _bufferTeste
;USARTMotor.c,135 :: 		TXREG = 'd';
0x00B1	0x3064      	MOVLW      100
0x00B2	0x1283      	BCF        STATUS, 5
0x00B3	0x0099      	MOVWF      TXREG
;USARTMotor.c,136 :: 		bufferTeste();
0x00B4	0x2038      	CALL       _bufferTeste
;USARTMotor.c,137 :: 		TXREG = '!';
0x00B5	0x3021      	MOVLW      33
0x00B6	0x1283      	BCF        STATUS, 5
0x00B7	0x0099      	MOVWF      TXREG
;USARTMotor.c,138 :: 		bufferTeste();
0x00B8	0x2038      	CALL       _bufferTeste
;USARTMotor.c,139 :: 		TXREG = 0x0D;
0x00B9	0x300D      	MOVLW      13
0x00BA	0x1283      	BCF        STATUS, 5
0x00BB	0x0099      	MOVWF      TXREG
;USARTMotor.c,140 :: 		bufferTeste();
0x00BC	0x2038      	CALL       _bufferTeste
;USARTMotor.c,141 :: 		TXREG = 0x0A;
0x00BD	0x300A      	MOVLW      10
0x00BE	0x1283      	BCF        STATUS, 5
0x00BF	0x0099      	MOVWF      TXREG
;USARTMotor.c,142 :: 		bufferTeste();
0x00C0	0x2038      	CALL       _bufferTeste
;USARTMotor.c,143 :: 		}
0x00C1	0x0008      	RETURN
; end of _textoInicio
_motorDesligado:
;USARTMotor.c,214 :: 		void motorDesligado(){
;USARTMotor.c,216 :: 		TXREG = 'M';
0x00C2	0x304D      	MOVLW      77
0x00C3	0x1283      	BCF        STATUS, 5
0x00C4	0x1303      	BCF        STATUS, 6
0x00C5	0x0099      	MOVWF      TXREG
;USARTMotor.c,217 :: 		bufferTeste();
0x00C6	0x2038      	CALL       _bufferTeste
;USARTMotor.c,218 :: 		TXREG = 'o';
0x00C7	0x306F      	MOVLW      111
0x00C8	0x1283      	BCF        STATUS, 5
0x00C9	0x0099      	MOVWF      TXREG
;USARTMotor.c,219 :: 		bufferTeste();
0x00CA	0x2038      	CALL       _bufferTeste
;USARTMotor.c,220 :: 		TXREG = 't';
0x00CB	0x3074      	MOVLW      116
0x00CC	0x1283      	BCF        STATUS, 5
0x00CD	0x0099      	MOVWF      TXREG
;USARTMotor.c,221 :: 		bufferTeste();
0x00CE	0x2038      	CALL       _bufferTeste
;USARTMotor.c,222 :: 		TXREG = 'o';
0x00CF	0x306F      	MOVLW      111
0x00D0	0x1283      	BCF        STATUS, 5
0x00D1	0x0099      	MOVWF      TXREG
;USARTMotor.c,223 :: 		bufferTeste();
0x00D2	0x2038      	CALL       _bufferTeste
;USARTMotor.c,224 :: 		TXREG = 'r';
0x00D3	0x3072      	MOVLW      114
0x00D4	0x1283      	BCF        STATUS, 5
0x00D5	0x0099      	MOVWF      TXREG
;USARTMotor.c,225 :: 		bufferTeste();
0x00D6	0x2038      	CALL       _bufferTeste
;USARTMotor.c,226 :: 		TXREG = ' ';
0x00D7	0x3020      	MOVLW      32
0x00D8	0x1283      	BCF        STATUS, 5
0x00D9	0x0099      	MOVWF      TXREG
;USARTMotor.c,227 :: 		bufferTeste();
0x00DA	0x2038      	CALL       _bufferTeste
;USARTMotor.c,228 :: 		TXREG = 'd';
0x00DB	0x3064      	MOVLW      100
0x00DC	0x1283      	BCF        STATUS, 5
0x00DD	0x0099      	MOVWF      TXREG
;USARTMotor.c,229 :: 		bufferTeste();
0x00DE	0x2038      	CALL       _bufferTeste
;USARTMotor.c,230 :: 		TXREG = 'e';
0x00DF	0x3065      	MOVLW      101
0x00E0	0x1283      	BCF        STATUS, 5
0x00E1	0x0099      	MOVWF      TXREG
;USARTMotor.c,231 :: 		bufferTeste();
0x00E2	0x2038      	CALL       _bufferTeste
;USARTMotor.c,232 :: 		TXREG = 's';
0x00E3	0x3073      	MOVLW      115
0x00E4	0x1283      	BCF        STATUS, 5
0x00E5	0x0099      	MOVWF      TXREG
;USARTMotor.c,233 :: 		bufferTeste();
0x00E6	0x2038      	CALL       _bufferTeste
;USARTMotor.c,234 :: 		TXREG = 'l';
0x00E7	0x306C      	MOVLW      108
0x00E8	0x1283      	BCF        STATUS, 5
0x00E9	0x0099      	MOVWF      TXREG
;USARTMotor.c,235 :: 		bufferTeste();
0x00EA	0x2038      	CALL       _bufferTeste
;USARTMotor.c,236 :: 		TXREG = 'i';
0x00EB	0x3069      	MOVLW      105
0x00EC	0x1283      	BCF        STATUS, 5
0x00ED	0x0099      	MOVWF      TXREG
;USARTMotor.c,237 :: 		bufferTeste();
0x00EE	0x2038      	CALL       _bufferTeste
;USARTMotor.c,238 :: 		TXREG = 'g';
0x00EF	0x3067      	MOVLW      103
0x00F0	0x1283      	BCF        STATUS, 5
0x00F1	0x0099      	MOVWF      TXREG
;USARTMotor.c,239 :: 		bufferTeste();
0x00F2	0x2038      	CALL       _bufferTeste
;USARTMotor.c,240 :: 		TXREG = 'a';
0x00F3	0x3061      	MOVLW      97
0x00F4	0x1283      	BCF        STATUS, 5
0x00F5	0x0099      	MOVWF      TXREG
;USARTMotor.c,241 :: 		bufferTeste();
0x00F6	0x2038      	CALL       _bufferTeste
;USARTMotor.c,242 :: 		TXREG = 'd';
0x00F7	0x3064      	MOVLW      100
0x00F8	0x1283      	BCF        STATUS, 5
0x00F9	0x0099      	MOVWF      TXREG
;USARTMotor.c,243 :: 		bufferTeste();
0x00FA	0x2038      	CALL       _bufferTeste
;USARTMotor.c,244 :: 		TXREG = 'o';
0x00FB	0x306F      	MOVLW      111
0x00FC	0x1283      	BCF        STATUS, 5
0x00FD	0x0099      	MOVWF      TXREG
;USARTMotor.c,245 :: 		bufferTeste();
0x00FE	0x2038      	CALL       _bufferTeste
;USARTMotor.c,246 :: 		TXREG = '!';
0x00FF	0x3021      	MOVLW      33
0x0100	0x1283      	BCF        STATUS, 5
0x0101	0x0099      	MOVWF      TXREG
;USARTMotor.c,247 :: 		bufferTeste();
0x0102	0x2038      	CALL       _bufferTeste
;USARTMotor.c,248 :: 		TXREG = 0x0D;
0x0103	0x300D      	MOVLW      13
0x0104	0x1283      	BCF        STATUS, 5
0x0105	0x0099      	MOVWF      TXREG
;USARTMotor.c,249 :: 		bufferTeste();
0x0106	0x2038      	CALL       _bufferTeste
;USARTMotor.c,250 :: 		TXREG = 0x0A;
0x0107	0x300A      	MOVLW      10
0x0108	0x1283      	BCF        STATUS, 5
0x0109	0x0099      	MOVWF      TXREG
;USARTMotor.c,251 :: 		bufferTeste();
0x010A	0x2038      	CALL       _bufferTeste
;USARTMotor.c,252 :: 		}
0x010B	0x0008      	RETURN
; end of _motorDesligado
_eco:
;USARTMotor.c,145 :: 		void eco(){
;USARTMotor.c,147 :: 		TXREG = 'D';
0x010C	0x3044      	MOVLW      68
0x010D	0x1283      	BCF        STATUS, 5
0x010E	0x1303      	BCF        STATUS, 6
0x010F	0x0099      	MOVWF      TXREG
;USARTMotor.c,148 :: 		bufferTeste();
0x0110	0x2038      	CALL       _bufferTeste
;USARTMotor.c,149 :: 		TXREG = 'i';
0x0111	0x3069      	MOVLW      105
0x0112	0x1283      	BCF        STATUS, 5
0x0113	0x0099      	MOVWF      TXREG
;USARTMotor.c,150 :: 		bufferTeste();
0x0114	0x2038      	CALL       _bufferTeste
;USARTMotor.c,151 :: 		TXREG = 'g';
0x0115	0x3067      	MOVLW      103
0x0116	0x1283      	BCF        STATUS, 5
0x0117	0x0099      	MOVWF      TXREG
;USARTMotor.c,152 :: 		bufferTeste();
0x0118	0x2038      	CALL       _bufferTeste
;USARTMotor.c,153 :: 		TXREG = 'i';
0x0119	0x3069      	MOVLW      105
0x011A	0x1283      	BCF        STATUS, 5
0x011B	0x0099      	MOVWF      TXREG
;USARTMotor.c,154 :: 		bufferTeste();
0x011C	0x2038      	CALL       _bufferTeste
;USARTMotor.c,155 :: 		TXREG = 't';
0x011D	0x3074      	MOVLW      116
0x011E	0x1283      	BCF        STATUS, 5
0x011F	0x0099      	MOVWF      TXREG
;USARTMotor.c,156 :: 		bufferTeste();
0x0120	0x2038      	CALL       _bufferTeste
;USARTMotor.c,157 :: 		TXREG = 'a';
0x0121	0x3061      	MOVLW      97
0x0122	0x1283      	BCF        STATUS, 5
0x0123	0x0099      	MOVWF      TXREG
;USARTMotor.c,158 :: 		bufferTeste();
0x0124	0x2038      	CALL       _bufferTeste
;USARTMotor.c,159 :: 		TXREG = 'd';
0x0125	0x3064      	MOVLW      100
0x0126	0x1283      	BCF        STATUS, 5
0x0127	0x0099      	MOVWF      TXREG
;USARTMotor.c,160 :: 		bufferTeste();
0x0128	0x2038      	CALL       _bufferTeste
;USARTMotor.c,161 :: 		TXREG = 'o';
0x0129	0x306F      	MOVLW      111
0x012A	0x1283      	BCF        STATUS, 5
0x012B	0x0099      	MOVWF      TXREG
;USARTMotor.c,162 :: 		bufferTeste();
0x012C	0x2038      	CALL       _bufferTeste
;USARTMotor.c,163 :: 		TXREG = ':';
0x012D	0x303A      	MOVLW      58
0x012E	0x1283      	BCF        STATUS, 5
0x012F	0x0099      	MOVWF      TXREG
;USARTMotor.c,164 :: 		bufferTeste();
0x0130	0x2038      	CALL       _bufferTeste
;USARTMotor.c,165 :: 		TXREG = ' ';
0x0131	0x3020      	MOVLW      32
0x0132	0x1283      	BCF        STATUS, 5
0x0133	0x0099      	MOVWF      TXREG
;USARTMotor.c,166 :: 		bufferTeste();
0x0134	0x2038      	CALL       _bufferTeste
;USARTMotor.c,167 :: 		TXREG = RCREG;
0x0135	0x1283      	BCF        STATUS, 5
0x0136	0x081A      	MOVF       RCREG, 0
0x0137	0x0099      	MOVWF      TXREG
;USARTMotor.c,168 :: 		bufferTeste();
0x0138	0x2038      	CALL       _bufferTeste
;USARTMotor.c,169 :: 		TXREG = 0x0D;
0x0139	0x300D      	MOVLW      13
0x013A	0x1283      	BCF        STATUS, 5
0x013B	0x0099      	MOVWF      TXREG
;USARTMotor.c,170 :: 		bufferTeste();
0x013C	0x2038      	CALL       _bufferTeste
;USARTMotor.c,171 :: 		TXREG = 0x0A;
0x013D	0x300A      	MOVLW      10
0x013E	0x1283      	BCF        STATUS, 5
0x013F	0x0099      	MOVWF      TXREG
;USARTMotor.c,172 :: 		bufferTeste();
0x0140	0x2038      	CALL       _bufferTeste
;USARTMotor.c,173 :: 		}
0x0141	0x0008      	RETURN
; end of _eco
_main:
0x0142	0x1283      	BCF        STATUS, 5
0x0143	0x1303      	BCF        STATUS, 6
0x0144	0x01A1      	CLRF       _cont
;USARTMotor.c,53 :: 		void main() {
;USARTMotor.c,57 :: 		CMCON = 0x07; // Desabilita os comparadores internos
0x0145	0x3007      	MOVLW      7
0x0146	0x009F      	MOVWF      CMCON
;USARTMotor.c,58 :: 		OPTION_REG = 0x87; // Desabilita os pull-ups internos e configura o prescaler do timer0 em 1:256, associado ao timer0
0x0147	0x3087      	MOVLW      135
0x0148	0x1683      	BSF        STATUS, 5
0x0149	0x0081      	MOVWF      OPTION_REG
;USARTMotor.c,59 :: 		INTCON = 0xE0; // Habilita a interrupção global, a interrupção por periféricos e habilita a interrupção pelo timer0
0x014A	0x30E0      	MOVLW      224
0x014B	0x008B      	MOVWF      INTCON
;USARTMotor.c,63 :: 		SPBRG = 0x19; // Ou 25(decimal), para um baud rate de 9600. Esse valor equivale ao cálculo para Osc 4MHz, com a USART configurada
0x014C	0x3019      	MOVLW      25
0x014D	0x0099      	MOVWF      SPBRG
;USARTMotor.c,66 :: 		TXEN_bit = 0x01; // Habilita transmissão
0x014E	0x1698      	BSF        TXEN_bit, 5
;USARTMotor.c,67 :: 		SYNC_bit = 0x00; // Configura no modo assíncrono
0x014F	0x1218      	BCF        SYNC_bit, 4
;USARTMotor.c,68 :: 		BRGH_bit = 0x01; // Configura o baud rate de alta velocidade
0x0150	0x1518      	BSF        BRGH_bit, 2
;USARTMotor.c,71 :: 		SPEN_bit = 0x01; // Habilita a porta serial
0x0151	0x1283      	BCF        STATUS, 5
0x0152	0x1798      	BSF        SPEN_bit, 7
;USARTMotor.c,72 :: 		CREN_bit = 0x01; // Habilita a recepção contínua
0x0153	0x1618      	BSF        CREN_bit, 4
;USARTMotor.c,75 :: 		RCIE_bit = 0x01; // Habilita a interrupçâo por recepção da USART. Isto é, ocorre a interrup. quando a serial recebe dados
0x0154	0x1683      	BSF        STATUS, 5
0x0155	0x168C      	BSF        RCIE_bit, 5
;USARTMotor.c,77 :: 		RCIF_bit = 0x00; // Limpa a flag de interrupção por recepção da USART
0x0156	0x1283      	BCF        STATUS, 5
0x0157	0x128C      	BCF        RCIF_bit, 5
;USARTMotor.c,79 :: 		TRISA = 0xF8; // Configura apenas RA0, RA1 e RA2 como saídas digitais
0x0158	0x30F8      	MOVLW      248
0x0159	0x1683      	BSF        STATUS, 5
0x015A	0x0085      	MOVWF      TRISA
;USARTMotor.c,80 :: 		TRISB = 0xFB; // Configura apenas RB2 (TX) como saída digital
0x015B	0x30FB      	MOVLW      251
0x015C	0x0086      	MOVWF      TRISB
;USARTMotor.c,81 :: 		PORTB = 0xFB; // Inicia apenas RB2 (TX) em Low
0x015D	0x30FB      	MOVLW      251
0x015E	0x1283      	BCF        STATUS, 5
0x015F	0x0086      	MOVWF      PORTB
;USARTMotor.c,82 :: 		led1 = 0x00; // Inicia led1 (RA0) em Low
0x0160	0x1005      	BCF        RA0_bit, 0
;USARTMotor.c,83 :: 		led2 = 0x01; // Inicia led2 (RA1) em High
0x0161	0x1485      	BSF        RA1_bit, 1
;USARTMotor.c,84 :: 		motor = 0x00;
0x0162	0x1105      	BCF        RA2_bit, 2
;USARTMotor.c,86 :: 		ligaMotor = 0x00;
0x0163	0x10A2      	BCF        _ligaMotor, BitPos(_ligaMotor+0)
;USARTMotor.c,87 :: 		desligaMotor = 0x00;
0x0164	0x1022      	BCF        _desligaMotor, BitPos(_desligaMotor+0)
;USARTMotor.c,89 :: 		textoInicio();
0x0165	0x2088      	CALL       _textoInicio
;USARTMotor.c,91 :: 		while(1){
L_main6:
;USARTMotor.c,93 :: 		if(RCREG == 'k' && !ligaMotor){
0x0166	0x1283      	BCF        STATUS, 5
0x0167	0x081A      	MOVF       RCREG, 0
0x0168	0x3A6B      	XORLW      107
0x0169	0x1D03      	BTFSS      STATUS, 2
0x016A	0x2971      	GOTO       L_main10
0x016B	0x18A2      	BTFSC      _ligaMotor, BitPos(_ligaMotor+0)
0x016C	0x2971      	GOTO       L_main10
L__main22:
;USARTMotor.c,95 :: 		desligaMotor = 0x00;
0x016D	0x1022      	BCF        _desligaMotor, BitPos(_desligaMotor+0)
;USARTMotor.c,96 :: 		ligaMotor = 0x01;
0x016E	0x14A2      	BSF        _ligaMotor, BitPos(_ligaMotor+0)
;USARTMotor.c,98 :: 		motorLigado();
0x016F	0x204A      	CALL       _motorLigado
;USARTMotor.c,99 :: 		}
0x0170	0x2975      	GOTO       L_main11
L_main10:
;USARTMotor.c,100 :: 		else if(ligaMotor) motor = 0x01;
0x0171	0x1283      	BCF        STATUS, 5
0x0172	0x1CA2      	BTFSS      _ligaMotor, BitPos(_ligaMotor+0)
0x0173	0x2975      	GOTO       L_main12
0x0174	0x1505      	BSF        RA2_bit, 2
L_main12:
L_main11:
0x0175	0x1283      	BCF        STATUS, 5
;USARTMotor.c,102 :: 		if(RCREG == 'q' && !desligaMotor){
0x0176	0x081A      	MOVF       RCREG, 0
0x0177	0x3A71      	XORLW      113
0x0178	0x1D03      	BTFSS      STATUS, 2
0x0179	0x2980      	GOTO       L_main15
0x017A	0x1822      	BTFSC      _desligaMotor, BitPos(_desligaMotor+0)
0x017B	0x2980      	GOTO       L_main15
L__main21:
;USARTMotor.c,104 :: 		ligaMotor = 0x00;
0x017C	0x10A2      	BCF        _ligaMotor, BitPos(_ligaMotor+0)
;USARTMotor.c,105 :: 		desligaMotor = 0x01;
0x017D	0x1422      	BSF        _desligaMotor, BitPos(_desligaMotor+0)
;USARTMotor.c,107 :: 		motorDesligado();
0x017E	0x20C2      	CALL       _motorDesligado
;USARTMotor.c,108 :: 		}
0x017F	0x2984      	GOTO       L_main16
L_main15:
;USARTMotor.c,109 :: 		else if(desligaMotor) motor = 0x00;
0x0180	0x1283      	BCF        STATUS, 5
0x0181	0x1C22      	BTFSS      _desligaMotor, BitPos(_desligaMotor+0)
0x0182	0x2984      	GOTO       L_main17
0x0183	0x1105      	BCF        RA2_bit, 2
L_main17:
L_main16:
;USARTMotor.c,110 :: 		}
0x0184	0x2966      	GOTO       L_main6
;USARTMotor.c,111 :: 		}
0x0185	0x2985      	GOTO       $+0
; end of _main
Symbol List:
//** Routines locations **
//ADDRESS    SIZE    PROCEDURE
//----------------------------------------------
0x0004      [45]    _interrupt
0x0031       [7]    _____DoICP
0x0038       [6]    _bufferTeste
0x003E      [12]    ___CC2DW
0x004A      [62]    _motorLigado
0x0088      [58]    _textoInicio
0x00C2      [74]    _motorDesligado
0x010C      [54]    _eco
0x0142      [68]    _main
//** Variables locations ** 
//ADDRESS    SIZE    VARIABLE
//----------------------------------------------
0x0000       [1]    INDF
0x0001       [1]    TMR0
0x0002       [1]    PCL
0x0003       [0]    Z_bit
0x0003       [0]    RP0_bit
0x0003       [1]    STATUS
0x0003       [0]    NOT_PD_bit
0x0003       [0]    C_bit
0x0003       [0]    NOT_TO_bit
0x0003       [0]    DC_bit
0x0003       [0]    IRP_bit
0x0003       [0]    RP1_bit
0x0004       [1]    FSRPTR
0x0004       [1]    FSR
0x0005       [0]    RA5_bit
0x0005       [0]    RA6_bit
0x0005       [0]    RA7_bit
0x0005       [0]    RA4_bit
0x0005       [0]    RA1_bit
0x0005       [0]    RA0_bit
0x0005       [0]    RA2_bit
0x0005       [0]    RA3_bit
0x0005       [1]    PORTA
0x0006       [0]    RB5_bit
0x0006       [0]    RB4_bit
0x0006       [0]    RB7_bit
0x0006       [0]    RB6_bit
0x0006       [0]    RB3_bit
0x0006       [0]    RB0_bit
0x0006       [1]    PORTB
0x0006       [0]    RB2_bit
0x0006       [0]    RB1_bit
0x000A       [1]    PCLATH
0x000B       [0]    T0IE_bit
0x000B       [0]    INTF_bit
0x000B       [0]    PEIE_bit
0x000B       [0]    GIE_bit
0x000B       [1]    INTCON
0x000B       [0]    T0IF_bit
0x000B       [0]    RBIE_bit
0x000B       [0]    INTE_bit
0x000B       [0]    RBIF_bit
0x000C       [0]    CCP1IF_bit
0x000C       [0]    TMR2IF_bit
0x000C       [0]    TMR1IF_bit
0x000C       [0]    TXIF_bit
0x000C       [0]    CMIF_bit
0x000C       [0]    EEIF_bit
0x000C       [1]    PIR1
0x000C       [0]    RCIF_bit
0x000E       [1]    TMR1L
0x000F       [1]    TMR1H
0x0010       [0]    TMR1CS_bit
0x0010       [0]    TMR1ON_bit
0x0010       [0]    T1CKPS0_bit
0x0010       [0]    T1CKPS1_bit
0x0010       [1]    T1CON
0x0010       [0]    NOT_T1SYNC_bit
0x0010       [0]    T1OSCEN_bit
0x0011       [1]    TMR2
0x0012       [0]    TOUTPS1_bit
0x0012       [0]    TOUTPS0_bit
0x0012       [1]    T2CON
0x0012       [0]    TOUTPS3_bit
0x0012       [0]    TOUTPS2_bit
0x0012       [0]    TMR2ON_bit
0x0012       [0]    T2CKPS1_bit
0x0012       [0]    T2CKPS0_bit
0x0015       [1]    CCPR1L
0x0015       [2]    CCPR1
0x0016       [1]    CCPR1H
0x0017       [0]    CCP1M3_bit
0x0017       [0]    CCP1M2_bit
0x0017       [0]    CCP1M0_bit
0x0017       [1]    CCP1CON
0x0017       [0]    CCP1M1_bit
0x0017       [0]    CCP1Y_bit
0x0017       [0]    CCP1X_bit
0x0018       [0]    FERR_bit
0x0018       [0]    ADEN_bit
0x0018       [0]    OERR_bit
0x0018       [1]    RCSTA
0x0018       [0]    RX9D_bit
0x0018       [0]    RX9_bit
0x0018       [0]    SREN_bit
0x0018       [0]    SPEN_bit
0x0018       [0]    CREN_bit
0x0019       [1]    TXREG
0x001A       [1]    RCREG
0x001F       [0]    CM1_bit
0x001F       [0]    C1INV_bit
0x001F       [0]    C2OUT_bit
0x001F       [0]    CM0_bit
0x001F       [0]    C1OUT_bit
0x001F       [0]    C2INV_bit
0x001F       [0]    CM2_bit
0x001F       [0]    CIS_bit
0x001F       [1]    CMCON
0x0021       [1]    _cont
0x0022       [0]    _desligaMotor
0x0022       [0]    _ligaMotor
0x0023       [2]    ___DoICPAddr
0x0025       [1]    ___saveSTATUS
0x0026       [1]    ___savePCLATH
0x0070       [1]    R0
0x0071       [1]    R1
0x0072       [1]    R2
0x0073       [1]    R3
0x0074       [1]    R4
0x0075       [1]    R5
0x0076       [1]    R6
0x0077       [1]    R7
0x0078       [1]    R8
0x0079       [1]    R9
0x007A       [1]    R10
0x007B       [1]    R11
0x007C       [1]    R12
0x007D       [1]    R13
0x007E       [1]    R14
0x007F       [1]    R15
0x0081       [0]    PSA_bit
0x0081       [0]    T0SE_bit
0x0081       [0]    INTEDG_bit
0x0081       [0]    T0CS_bit
0x0081       [1]    OPTION_REG
0x0081       [0]    NOT_RBPU_bit
0x0081       [0]    PS2_bit
0x0081       [0]    PS0_bit
0x0081       [0]    PS1_bit
0x0085       [0]    TRISA5_bit
0x0085       [0]    TRISA4_bit
0x0085       [0]    TRISA7_bit
0x0085       [0]    TRISA6_bit
0x0085       [0]    TRISA3_bit
0x0085       [0]    TRISA0_bit
0x0085       [1]    TRISA
0x0085       [0]    TRISA2_bit
0x0085       [0]    TRISA1_bit
0x0086       [0]    TRISB1_bit
0x0086       [0]    TRISB2_bit
0x0086       [1]    TRISB
0x0086       [0]    TRISB0_bit
0x0086       [0]    TRISB3_bit
0x0086       [0]    TRISB6_bit
0x0086       [0]    TRISB7_bit
0x0086       [0]    TRISB4_bit
0x0086       [0]    TRISB5_bit
0x008C       [0]    RCIE_bit
0x008C       [0]    TXIE_bit
0x008C       [0]    EEIE_bit
0x008C       [0]    CMIE_bit
0x008C       [0]    CCP1IE_bit
0x008C       [0]    TMR1IE_bit
0x008C       [1]    PIE1
0x008C       [0]    TMR2IE_bit
0x008E       [0]    NOT_BO_bit
0x008E       [0]    NOT_BOR_bit
0x008E       [0]    NOT_POR_bit
0x008E       [1]    PCON
0x008E       [0]    OSCF_bit
0x008E       [0]    NOT_BOD_bit
0x0092       [1]    PR2
0x0098       [0]    TRMT_bit
0x0098       [0]    TX9D_bit
0x0098       [1]    TXSTA
0x0098       [0]    BRGH_bit
0x0098       [0]    TX9_bit
0x0098       [0]    CSRC_bit
0x0098       [0]    SYNC_bit
0x0098       [0]    TXEN_bit
0x0099       [1]    SPBRG
0x009A       [1]    EEDATA
0x009B       [1]    EEADR
0x009C       [1]    EECON1
0x009C       [0]    WREN_bit
0x009C       [0]    WRERR_bit
0x009C       [0]    WR_bit
0x009C       [0]    RD_bit
0x009D       [1]    EECON2
0x009F       [0]    VR0_bit
0x009F       [0]    VRR_bit
0x009F       [0]    VR2_bit
0x009F       [0]    VR1_bit
0x009F       [0]    VR3_bit
0x009F       [1]    VRCON
0x009F       [0]    VREN_bit
0x009F       [0]    VROE_bit
//** Label List: ** 
//----------------------------------------------
  L_interrupt0
  L_interrupt1
  L_interrupt2
  L_interrupt3
  L_interrupt4
  L_interrupt5
  L_main6
  L_main7
  L_main8
  L_main9
  L_main10
  L_main11
  L_main12
  L_main13
  L_main14
  L_main15
  L_main16
  L_main17
  L_bufferTeste18
  L_bufferTeste19
  L__interrupt20
  L__main21
  L__main22
  _interrupt
  L__interrupt23
  _main
  _textoInicio
  _eco
  _bufferTeste
  _motorLigado
  _motorDesligado
  _CC2D_Loop1
  _____DoICP
  _____DoIFC
  ___CC2DW
  _Swap
  L_interrupt0
  L_interrupt1
  L_interrupt2
  L_interrupt3
  L_interrupt4
  L_interrupt5
  L_main6
  L_main7
  L_main8
  L_main9
  L_main10
  L_main11
  L_main12
  L_main13
  L_main14
  L_main15
  L_main16
  L_main17
  L_bufferTeste18
  L_bufferTeste19
  L__interrupt20
  L__main21
  L__main22
  _interrupt
  L__interrupt23
  _main
  _textoInicio
  _eco
  _bufferTeste
  _motorLigado
  _motorDesligado
