;  LST file generated by mikroListExporter - v.2.0 
; Date/Time: 23/04/2020 17:41:34
;----------------------------------------------

;Address Opcode 	ASM
0x0000	0x28E6      	GOTO       230
_interrupt:
0x0004	0x00FF      	MOVWF      R15
0x0005	0x0E03      	SWAPF      STATUS, 0
0x0006	0x0183      	CLRF       STATUS
0x0007	0x00A5      	MOVWF      ___saveSTATUS
0x0008	0x080A      	MOVF       PCLATH, 0
0x0009	0x00A4      	MOVWF      ___savePCLATH
0x000A	0x018A      	CLRF       PCLATH
;TecladoMatricial.c,24 :: 		void interrupt() {
;TecladoMatricial.c,26 :: 		if(T0IF_bit){  // Testa se o timer0 estourou
0x000B	0x1D0B      	BTFSS      T0IF_bit, 2
0x000C	0x2899      	GOTO       L_interrupt0
;TecladoMatricial.c,27 :: 		T0IF_bit = 0x00; // Zera a variável de estouro
0x000D	0x110B      	BCF        T0IF_bit, 2
;TecladoMatricial.c,28 :: 		TMR0 = 0x6C; // Inicia o contador do timer0
0x000E	0x306C      	MOVLW      108
0x000F	0x0081      	MOVWF      TMR0
;TecladoMatricial.c,30 :: 		if(col1 && control == 0x01){
0x0010	0x1C86      	BTFSS      RB1_bit, 1
0x0011	0x283E      	GOTO       L_interrupt3
0x0012	0x3000      	MOVLW      0
0x0013	0x0621      	XORWF      _control+1, 0
0x0014	0x1D03      	BTFSS      STATUS, 2
0x0015	0x2818      	GOTO       L__interrupt35
0x0016	0x3001      	MOVLW      1
0x0017	0x0620      	XORWF      _control, 0
L__interrupt35:
0x0018	0x1D03      	BTFSS      STATUS, 2
0x0019	0x283E      	GOTO       L_interrupt3
L__interrupt33:
;TecladoMatricial.c,31 :: 		col1 = 0x00;
0x001A	0x1086      	BCF        RB1_bit, 1
;TecladoMatricial.c,32 :: 		col2 = 0x01;
0x001B	0x1506      	BSF        RB2_bit, 2
;TecladoMatricial.c,33 :: 		col3 = 0x01;
0x001C	0x1586      	BSF        RB3_bit, 3
;TecladoMatricial.c,34 :: 		control = 0x02;
0x001D	0x3002      	MOVLW      2
0x001E	0x00A0      	MOVWF      _control
0x001F	0x3000      	MOVLW      0
0x0020	0x00A1      	MOVWF      _control+1
;TecladoMatricial.c,36 :: 		if(!lina)
0x0021	0x1A06      	BTFSC      RB4_bit, 4
0x0022	0x2828      	GOTO       L_interrupt4
;TecladoMatricial.c,37 :: 		piscaLed(1);
0x0023	0x3001      	MOVLW      1
0x0024	0x00A6      	MOVWF      FARG_piscaLed_num
0x0025	0x3000      	MOVLW      0
0x0026	0x00A7      	MOVWF      FARG_piscaLed_num+1
0x0027	0x20B3      	CALL       _piscaLed
L_interrupt4:
;TecladoMatricial.c,38 :: 		if(!linb)
0x0028	0x1A86      	BTFSC      RB5_bit, 5
0x0029	0x282F      	GOTO       L_interrupt5
;TecladoMatricial.c,39 :: 		piscaLed(4);
0x002A	0x3004      	MOVLW      4
0x002B	0x00A6      	MOVWF      FARG_piscaLed_num
0x002C	0x3000      	MOVLW      0
0x002D	0x00A7      	MOVWF      FARG_piscaLed_num+1
0x002E	0x20B3      	CALL       _piscaLed
L_interrupt5:
;TecladoMatricial.c,40 :: 		if(!linc)
0x002F	0x1B06      	BTFSC      RB6_bit, 6
0x0030	0x2836      	GOTO       L_interrupt6
;TecladoMatricial.c,41 :: 		piscaLed(7);
0x0031	0x3007      	MOVLW      7
0x0032	0x00A6      	MOVWF      FARG_piscaLed_num
0x0033	0x3000      	MOVLW      0
0x0034	0x00A7      	MOVWF      FARG_piscaLed_num+1
0x0035	0x20B3      	CALL       _piscaLed
L_interrupt6:
;TecladoMatricial.c,42 :: 		if(!lind)
0x0036	0x1B86      	BTFSC      RB7_bit, 7
0x0037	0x283D      	GOTO       L_interrupt7
;TecladoMatricial.c,43 :: 		piscaLed(11);
0x0038	0x300B      	MOVLW      11
0x0039	0x00A6      	MOVWF      FARG_piscaLed_num
0x003A	0x3000      	MOVLW      0
0x003B	0x00A7      	MOVWF      FARG_piscaLed_num+1
0x003C	0x20B3      	CALL       _piscaLed
L_interrupt7:
;TecladoMatricial.c,44 :: 		}
0x003D	0x2899      	GOTO       L_interrupt8
L_interrupt3:
;TecladoMatricial.c,45 :: 		else if(col2 && control == 0x02){
0x003E	0x1D06      	BTFSS      RB2_bit, 2
0x003F	0x286C      	GOTO       L_interrupt11
0x0040	0x3000      	MOVLW      0
0x0041	0x0621      	XORWF      _control+1, 0
0x0042	0x1D03      	BTFSS      STATUS, 2
0x0043	0x2846      	GOTO       L__interrupt36
0x0044	0x3002      	MOVLW      2
0x0045	0x0620      	XORWF      _control, 0
L__interrupt36:
0x0046	0x1D03      	BTFSS      STATUS, 2
0x0047	0x286C      	GOTO       L_interrupt11
L__interrupt32:
;TecladoMatricial.c,46 :: 		col1 = 0x01;
0x0048	0x1486      	BSF        RB1_bit, 1
;TecladoMatricial.c,47 :: 		col2 = 0x00;
0x0049	0x1106      	BCF        RB2_bit, 2
;TecladoMatricial.c,48 :: 		col3 = 0x01;
0x004A	0x1586      	BSF        RB3_bit, 3
;TecladoMatricial.c,49 :: 		control = 0x03;
0x004B	0x3003      	MOVLW      3
0x004C	0x00A0      	MOVWF      _control
0x004D	0x3000      	MOVLW      0
0x004E	0x00A1      	MOVWF      _control+1
;TecladoMatricial.c,51 :: 		if(!lina)
0x004F	0x1A06      	BTFSC      RB4_bit, 4
0x0050	0x2856      	GOTO       L_interrupt12
;TecladoMatricial.c,52 :: 		piscaLed(2);
0x0051	0x3002      	MOVLW      2
0x0052	0x00A6      	MOVWF      FARG_piscaLed_num
0x0053	0x3000      	MOVLW      0
0x0054	0x00A7      	MOVWF      FARG_piscaLed_num+1
0x0055	0x20B3      	CALL       _piscaLed
L_interrupt12:
;TecladoMatricial.c,53 :: 		if(!linb)
0x0056	0x1A86      	BTFSC      RB5_bit, 5
0x0057	0x285D      	GOTO       L_interrupt13
;TecladoMatricial.c,54 :: 		piscaLed(5);
0x0058	0x3005      	MOVLW      5
0x0059	0x00A6      	MOVWF      FARG_piscaLed_num
0x005A	0x3000      	MOVLW      0
0x005B	0x00A7      	MOVWF      FARG_piscaLed_num+1
0x005C	0x20B3      	CALL       _piscaLed
L_interrupt13:
;TecladoMatricial.c,55 :: 		if(!linc)
0x005D	0x1B06      	BTFSC      RB6_bit, 6
0x005E	0x2864      	GOTO       L_interrupt14
;TecladoMatricial.c,56 :: 		piscaLed(8);
0x005F	0x3008      	MOVLW      8
0x0060	0x00A6      	MOVWF      FARG_piscaLed_num
0x0061	0x3000      	MOVLW      0
0x0062	0x00A7      	MOVWF      FARG_piscaLed_num+1
0x0063	0x20B3      	CALL       _piscaLed
L_interrupt14:
;TecladoMatricial.c,57 :: 		if(!lind)
0x0064	0x1B86      	BTFSC      RB7_bit, 7
0x0065	0x286B      	GOTO       L_interrupt15
;TecladoMatricial.c,58 :: 		piscaLed(10);
0x0066	0x300A      	MOVLW      10
0x0067	0x00A6      	MOVWF      FARG_piscaLed_num
0x0068	0x3000      	MOVLW      0
0x0069	0x00A7      	MOVWF      FARG_piscaLed_num+1
0x006A	0x20B3      	CALL       _piscaLed
L_interrupt15:
;TecladoMatricial.c,59 :: 		}
0x006B	0x2899      	GOTO       L_interrupt16
L_interrupt11:
;TecladoMatricial.c,60 :: 		else if(col3 && control == 0x03){
0x006C	0x1D86      	BTFSS      RB3_bit, 3
0x006D	0x2899      	GOTO       L_interrupt19
0x006E	0x3000      	MOVLW      0
0x006F	0x0621      	XORWF      _control+1, 0
0x0070	0x1D03      	BTFSS      STATUS, 2
0x0071	0x2874      	GOTO       L__interrupt37
0x0072	0x3003      	MOVLW      3
0x0073	0x0620      	XORWF      _control, 0
L__interrupt37:
0x0074	0x1D03      	BTFSS      STATUS, 2
0x0075	0x2899      	GOTO       L_interrupt19
L__interrupt31:
;TecladoMatricial.c,61 :: 		col1 = 0x01;
0x0076	0x1486      	BSF        RB1_bit, 1
;TecladoMatricial.c,62 :: 		col2 = 0x01;
0x0077	0x1506      	BSF        RB2_bit, 2
;TecladoMatricial.c,63 :: 		col3 = 0x00;
0x0078	0x1186      	BCF        RB3_bit, 3
;TecladoMatricial.c,64 :: 		control = 0x01;
0x0079	0x3001      	MOVLW      1
0x007A	0x00A0      	MOVWF      _control
0x007B	0x3000      	MOVLW      0
0x007C	0x00A1      	MOVWF      _control+1
;TecladoMatricial.c,66 :: 		if(!lina)
0x007D	0x1A06      	BTFSC      RB4_bit, 4
0x007E	0x2884      	GOTO       L_interrupt20
;TecladoMatricial.c,67 :: 		piscaLed(3);
0x007F	0x3003      	MOVLW      3
0x0080	0x00A6      	MOVWF      FARG_piscaLed_num
0x0081	0x3000      	MOVLW      0
0x0082	0x00A7      	MOVWF      FARG_piscaLed_num+1
0x0083	0x20B3      	CALL       _piscaLed
L_interrupt20:
;TecladoMatricial.c,68 :: 		if(!linb)
0x0084	0x1A86      	BTFSC      RB5_bit, 5
0x0085	0x288B      	GOTO       L_interrupt21
;TecladoMatricial.c,69 :: 		piscaLed(6);
0x0086	0x3006      	MOVLW      6
0x0087	0x00A6      	MOVWF      FARG_piscaLed_num
0x0088	0x3000      	MOVLW      0
0x0089	0x00A7      	MOVWF      FARG_piscaLed_num+1
0x008A	0x20B3      	CALL       _piscaLed
L_interrupt21:
;TecladoMatricial.c,70 :: 		if(!linc)
0x008B	0x1B06      	BTFSC      RB6_bit, 6
0x008C	0x2892      	GOTO       L_interrupt22
;TecladoMatricial.c,71 :: 		piscaLed(9);
0x008D	0x3009      	MOVLW      9
0x008E	0x00A6      	MOVWF      FARG_piscaLed_num
0x008F	0x3000      	MOVLW      0
0x0090	0x00A7      	MOVWF      FARG_piscaLed_num+1
0x0091	0x20B3      	CALL       _piscaLed
L_interrupt22:
;TecladoMatricial.c,72 :: 		if(!lind)
0x0092	0x1B86      	BTFSC      RB7_bit, 7
0x0093	0x2899      	GOTO       L_interrupt23
;TecladoMatricial.c,73 :: 		piscaLed(12);
0x0094	0x300C      	MOVLW      12
0x0095	0x00A6      	MOVWF      FARG_piscaLed_num
0x0096	0x3000      	MOVLW      0
0x0097	0x00A7      	MOVWF      FARG_piscaLed_num+1
0x0098	0x20B3      	CALL       _piscaLed
L_interrupt23:
;TecladoMatricial.c,74 :: 		}
L_interrupt19:
L_interrupt16:
L_interrupt8:
;TecladoMatricial.c,75 :: 		}
L_interrupt0:
;TecladoMatricial.c,76 :: 		}
L__interrupt34:
0x0099	0x0824      	MOVF       ___savePCLATH, 0
0x009A	0x008A      	MOVWF      PCLATH
0x009B	0x0E25      	SWAPF      ___saveSTATUS, 0
0x009C	0x0083      	MOVWF      STATUS
0x009D	0x0EFF      	SWAPF      R15, 1
0x009E	0x0E7F      	SWAPF      R15, 0
0x009F	0x0009      	RETFIE
; end of _interrupt
_____DoICP:
;__Lib_System.c,6 :: 		
;__Lib_System.c,9 :: 		
0x00A0	0x1283      	BCF        STATUS, 5
0x00A1	0x1303      	BCF        STATUS, 6
0x00A2	0x0823      	MOVF       ___DoICPAddr+1, 0
0x00A3	0x008A      	MOVWF      PCLATH
;__Lib_System.c,10 :: 		
0x00A4	0x0822      	MOVF       ___DoICPAddr, 0
0x00A5	0x0082      	MOVWF      PCL
;__Lib_System.c,12 :: 		
0x00A6	0x0008      	RETURN
; end of _____DoICP
___CC2DW:
;__Lib_System.c,24 :: 		
;__Lib_System.c,27 :: 		
_CC2D_Loop1:
;__Lib_System.c,29 :: 		
0x00A7	0x20A0      	CALL       _____DoICP
0x00A8	0x118A      	BCF        PCLATH, 3
0x00A9	0x120A      	BCF        PCLATH, 4
;__Lib_System.c,31 :: 		
0x00AA	0x0080      	MOVWF      INDF
;__Lib_System.c,32 :: 		
0x00AB	0x0A84      	INCF       FSR, 1
;__Lib_System.c,33 :: 		
0x00AC	0x0AA2      	INCF       ___DoICPAddr, 1
;__Lib_System.c,35 :: 		
0x00AD	0x1903      	BTFSC      STATUS, 2
;__Lib_System.c,36 :: 		
0x00AE	0x0AA3      	INCF       ___DoICPAddr+1, 1
;__Lib_System.c,37 :: 		
0x00AF	0x03F0      	DECF       R0, 1
;__Lib_System.c,39 :: 		
0x00B0	0x1D03      	BTFSS      STATUS, 2
;__Lib_System.c,40 :: 		
0x00B1	0x28A7      	GOTO       _CC2D_Loop1
;__Lib_System.c,42 :: 		
0x00B2	0x0008      	RETURN
; end of ___CC2DW
_piscaLed:
;TecladoMatricial.c,104 :: 		void piscaLed(int num){
;TecladoMatricial.c,108 :: 		for(i = 0; i < num; i++){
0x00B3	0x1283      	BCF        STATUS, 5
0x00B4	0x1303      	BCF        STATUS, 6
0x00B5	0x01F1      	CLRF       R1
0x00B6	0x01F2      	CLRF       R1+1
L_piscaLed26:
0x00B7	0x3080      	MOVLW      128
0x00B8	0x0672      	XORWF      R1+1, 0
0x00B9	0x00F0      	MOVWF      R0
0x00BA	0x3080      	MOVLW      128
0x00BB	0x0627      	XORWF      FARG_piscaLed_num+1, 0
0x00BC	0x0270      	SUBWF      R0, 0
0x00BD	0x1D03      	BTFSS      STATUS, 2
0x00BE	0x28C1      	GOTO       L__piscaLed38
0x00BF	0x0826      	MOVF       FARG_piscaLed_num, 0
0x00C0	0x0271      	SUBWF      R1, 0
L__piscaLed38:
0x00C1	0x1803      	BTFSC      STATUS, 0
0x00C2	0x28E5      	GOTO       L_piscaLed27
;TecladoMatricial.c,109 :: 		led1 = 0x01;
0x00C3	0x1505      	BSF        RA2_bit, 2
;TecladoMatricial.c,110 :: 		led2 = 0x01;
0x00C4	0x1585      	BSF        RA3_bit, 3
;TecladoMatricial.c,111 :: 		delay_ms(200);
0x00C5	0x3002      	MOVLW      2
0x00C6	0x00FB      	MOVWF      R11
0x00C7	0x3004      	MOVLW      4
0x00C8	0x00FC      	MOVWF      R12
0x00C9	0x30BA      	MOVLW      186
0x00CA	0x00FD      	MOVWF      R13
L_piscaLed29:
0x00CB	0x0BFD      	DECFSZ     R13, 1
0x00CC	0x28CB      	GOTO       L_piscaLed29
0x00CD	0x0BFC      	DECFSZ     R12, 1
0x00CE	0x28CB      	GOTO       L_piscaLed29
0x00CF	0x0BFB      	DECFSZ     R11, 1
0x00D0	0x28CB      	GOTO       L_piscaLed29
0x00D1	0x0000      	NOP
;TecladoMatricial.c,112 :: 		led1 = 0x00;
0x00D2	0x1105      	BCF        RA2_bit, 2
;TecladoMatricial.c,113 :: 		led2 = 0x00;
0x00D3	0x1185      	BCF        RA3_bit, 3
;TecladoMatricial.c,114 :: 		delay_ms(200);
0x00D4	0x3002      	MOVLW      2
0x00D5	0x00FB      	MOVWF      R11
0x00D6	0x3004      	MOVLW      4
0x00D7	0x00FC      	MOVWF      R12
0x00D8	0x30BA      	MOVLW      186
0x00D9	0x00FD      	MOVWF      R13
L_piscaLed30:
0x00DA	0x0BFD      	DECFSZ     R13, 1
0x00DB	0x28DA      	GOTO       L_piscaLed30
0x00DC	0x0BFC      	DECFSZ     R12, 1
0x00DD	0x28DA      	GOTO       L_piscaLed30
0x00DE	0x0BFB      	DECFSZ     R11, 1
0x00DF	0x28DA      	GOTO       L_piscaLed30
0x00E0	0x0000      	NOP
;TecladoMatricial.c,108 :: 		for(i = 0; i < num; i++){
0x00E1	0x0AF1      	INCF       R1, 1
0x00E2	0x1903      	BTFSC      STATUS, 2
0x00E3	0x0AF2      	INCF       R1+1, 1
;TecladoMatricial.c,115 :: 		}
0x00E4	0x28B7      	GOTO       L_piscaLed26
L_piscaLed27:
;TecladoMatricial.c,116 :: 		}
0x00E5	0x0008      	RETURN
; end of _piscaLed
_main:
0x00E6	0x3001      	MOVLW      1
0x00E7	0x1283      	BCF        STATUS, 5
0x00E8	0x1303      	BCF        STATUS, 6
0x00E9	0x00A0      	MOVWF      _control
0x00EA	0x01A1      	CLRF       33
;TecladoMatricial.c,80 :: 		void main() {
;TecladoMatricial.c,84 :: 		CMCON = 0x07; // Desabilita os comparadores internos
0x00EB	0x3007      	MOVLW      7
0x00EC	0x009F      	MOVWF      CMCON
;TecladoMatricial.c,85 :: 		TRISA = 0x03; // Seleciona apenas RA0 e RA1 como entradas digitais
0x00ED	0x3003      	MOVLW      3
0x00EE	0x1683      	BSF        STATUS, 5
0x00EF	0x0085      	MOVWF      TRISA
;TecladoMatricial.c,86 :: 		TRISB = 0xF0; // Seleciona o primeiro nibble como entrada digital
0x00F0	0x30F0      	MOVLW      240
0x00F1	0x0086      	MOVWF      TRISB
;TecladoMatricial.c,87 :: 		PORTA = 0x03; // Inicia apenas RA0 e RA1 em nível logico alto
0x00F2	0x3003      	MOVLW      3
0x00F3	0x1283      	BCF        STATUS, 5
0x00F4	0x0085      	MOVWF      PORTA
;TecladoMatricial.c,88 :: 		PORTB = 0xFF; // Inicia todo o portb em nível logico alto
0x00F5	0x30FF      	MOVLW      255
0x00F6	0x0086      	MOVWF      PORTB
;TecladoMatricial.c,90 :: 		OPTION_REG = 0X86; // Debabilita o pull-up interno do portb e seleciona o prescaler em 1:128
0x00F7	0x3086      	MOVLW      134
0x00F8	0x1683      	BSF        STATUS, 5
0x00F9	0x0081      	MOVWF      OPTION_REG
;TecladoMatricial.c,91 :: 		GIE_bit = 0x01; // Habilita a interrupção global
0x00FA	0x178B      	BSF        GIE_bit, 7
;TecladoMatricial.c,92 :: 		PEIE_bit = 0x01; // Habilita a interrupção por perifericos externos
0x00FB	0x170B      	BSF        PEIE_bit, 6
;TecladoMatricial.c,93 :: 		T0IE_bit = 0x01; // Habilita a interrupção por estouro do timer0
0x00FC	0x168B      	BSF        T0IE_bit, 5
;TecladoMatricial.c,95 :: 		TMR0 = 0x6C; // Inicia o timer0 em 0x6C = 108 (decimal)
0x00FD	0x306C      	MOVLW      108
0x00FE	0x1283      	BCF        STATUS, 5
0x00FF	0x0081      	MOVWF      TMR0
;TecladoMatricial.c,99 :: 		while(1);{
L_main24:
0x0100	0x2900      	GOTO       L_main24
;TecladoMatricial.c,102 :: 		}
0x0101	0x2901      	GOTO       $+0
; end of _main
Symbol List:
//** Routines locations **
//ADDRESS    SIZE    PROCEDURE
//----------------------------------------------
0x0004     [156]    _interrupt
0x00A0       [7]    _____DoICP
0x00A7      [12]    ___CC2DW
0x00B3      [51]    _piscaLed
0x00E6      [28]    _main
//** Variables locations ** 
//ADDRESS    SIZE    VARIABLE
//----------------------------------------------
0x0000       [1]    INDF
0x0001       [1]    TMR0
0x0002       [1]    PCL
0x0003       [0]    Z_bit
0x0003       [0]    NOT_PD_bit
0x0003       [0]    C_bit
0x0003       [0]    DC_bit
0x0003       [0]    RP1_bit
0x0003       [0]    IRP_bit
0x0003       [0]    NOT_TO_bit
0x0003       [0]    RP0_bit
0x0003       [1]    STATUS
0x0004       [1]    FSR
0x0004       [1]    FSRPTR
0x0005       [0]    RA7_bit
0x0005       [0]    RA6_bit
0x0005       [0]    RA5_bit
0x0005       [0]    RA2_bit
0x0005       [0]    RA3_bit
0x0005       [0]    RA4_bit
0x0005       [0]    RA0_bit
0x0005       [0]    RA1_bit
0x0005       [1]    PORTA
0x0006       [0]    RB4_bit
0x0006       [0]    RB3_bit
0x0006       [0]    RB2_bit
0x0006       [0]    RB7_bit
0x0006       [0]    RB6_bit
0x0006       [0]    RB5_bit
0x0006       [0]    RB1_bit
0x0006       [1]    PORTB
0x0006       [0]    RB0_bit
0x000A       [1]    PCLATH
0x000B       [0]    GIE_bit
0x000B       [0]    INTF_bit
0x000B       [1]    INTCON
0x000B       [0]    RBIF_bit
0x000B       [0]    PEIE_bit
0x000B       [0]    INTE_bit
0x000B       [0]    T0IF_bit
0x000B       [0]    T0IE_bit
0x000B       [0]    RBIE_bit
0x000C       [1]    PIR1
0x000C       [0]    TMR2IF_bit
0x000C       [0]    RCIF_bit
0x000C       [0]    TMR1IF_bit
0x000C       [0]    CCP1IF_bit
0x000C       [0]    CMIF_bit
0x000C       [0]    TXIF_bit
0x000C       [0]    EEIF_bit
0x000E       [1]    TMR1L
0x000F       [1]    TMR1H
0x0010       [0]    NOT_T1SYNC_bit
0x0010       [0]    TMR1ON_bit
0x0010       [0]    TMR1CS_bit
0x0010       [0]    T1OSCEN_bit
0x0010       [0]    T1CKPS0_bit
0x0010       [0]    T1CKPS1_bit
0x0010       [1]    T1CON
0x0011       [1]    TMR2
0x0012       [0]    TOUTPS1_bit
0x0012       [0]    TOUTPS2_bit
0x0012       [0]    TOUTPS3_bit
0x0012       [1]    T2CON
0x0012       [0]    T2CKPS1_bit
0x0012       [0]    TMR2ON_bit
0x0012       [0]    T2CKPS0_bit
0x0012       [0]    TOUTPS0_bit
0x0015       [2]    CCPR1
0x0015       [1]    CCPR1L
0x0016       [1]    CCPR1H
0x0017       [1]    CCP1CON
0x0017       [0]    CCP1M3_bit
0x0017       [0]    CCP1Y_bit
0x0017       [0]    CCP1X_bit
0x0017       [0]    CCP1M2_bit
0x0017       [0]    CCP1M0_bit
0x0017       [0]    CCP1M1_bit
0x0018       [0]    SPEN_bit
0x0018       [0]    SREN_bit
0x0018       [0]    RX9_bit
0x0018       [0]    FERR_bit
0x0018       [0]    OERR_bit
0x0018       [0]    RX9D_bit
0x0018       [0]    ADEN_bit
0x0018       [1]    RCSTA
0x0018       [0]    CREN_bit
0x0019       [1]    TXREG
0x001A       [1]    RCREG
0x001F       [0]    CM1_bit
0x001F       [0]    CM2_bit
0x001F       [1]    CMCON
0x001F       [0]    CM0_bit
0x001F       [0]    CIS_bit
0x001F       [0]    C1OUT_bit
0x001F       [0]    C2OUT_bit
0x001F       [0]    C1INV_bit
0x001F       [0]    C2INV_bit
0x0020       [2]    _control
0x0022       [2]    ___DoICPAddr
0x0024       [1]    ___savePCLATH
0x0025       [1]    ___saveSTATUS
0x0026       [2]    FARG_piscaLed_num
0x0070       [1]    R0
0x0071       [1]    R1
0x0072       [1]    R2
0x0073       [1]    R3
0x0074       [1]    R4
0x0075       [1]    R5
0x0076       [1]    R6
0x0077       [1]    R7
0x0078       [1]    R8
0x0079       [1]    R9
0x007A       [1]    R10
0x007B       [1]    R11
0x007C       [1]    R12
0x007D       [1]    R13
0x007E       [1]    R14
0x007F       [1]    R15
0x0081       [1]    OPTION_REG
0x0081       [0]    NOT_RBPU_bit
0x0081       [0]    PSA_bit
0x0081       [0]    T0CS_bit
0x0081       [0]    T0SE_bit
0x0081       [0]    INTEDG_bit
0x0081       [0]    PS2_bit
0x0081       [0]    PS0_bit
0x0081       [0]    PS1_bit
0x0085       [0]    TRISA0_bit
0x0085       [0]    TRISA6_bit
0x0085       [0]    TRISA1_bit
0x0085       [0]    TRISA7_bit
0x0085       [0]    TRISA5_bit
0x0085       [0]    TRISA2_bit
0x0085       [1]    TRISA
0x0085       [0]    TRISA4_bit
0x0085       [0]    TRISA3_bit
0x0086       [0]    TRISB4_bit
0x0086       [0]    TRISB2_bit
0x0086       [0]    TRISB1_bit
0x0086       [0]    TRISB0_bit
0x0086       [0]    TRISB6_bit
0x0086       [0]    TRISB5_bit
0x0086       [0]    TRISB3_bit
0x0086       [0]    TRISB7_bit
0x0086       [1]    TRISB
0x008C       [0]    TXIE_bit
0x008C       [0]    RCIE_bit
0x008C       [0]    TMR1IE_bit
0x008C       [0]    TMR2IE_bit
0x008C       [0]    CCP1IE_bit
0x008C       [1]    PIE1
0x008C       [0]    EEIE_bit
0x008C       [0]    CMIE_bit
0x008E       [0]    NOT_BO_bit
0x008E       [0]    NOT_BOR_bit
0x008E       [0]    NOT_BOD_bit
0x008E       [0]    NOT_POR_bit
0x008E       [1]    PCON
0x008E       [0]    OSCF_bit
0x0092       [1]    PR2
0x0098       [0]    TRMT_bit
0x0098       [0]    BRGH_bit
0x0098       [1]    TXSTA
0x0098       [0]    TX9D_bit
0x0098       [0]    TX9_bit
0x0098       [0]    CSRC_bit
0x0098       [0]    SYNC_bit
0x0098       [0]    TXEN_bit
0x0099       [1]    SPBRG
0x009A       [1]    EEDATA
0x009B       [1]    EEADR
0x009C       [1]    EECON1
0x009C       [0]    WR_bit
0x009C       [0]    RD_bit
0x009C       [0]    WREN_bit
0x009C       [0]    WRERR_bit
0x009D       [1]    EECON2
0x009F       [0]    VR2_bit
0x009F       [0]    VR3_bit
0x009F       [0]    VR0_bit
0x009F       [0]    VR1_bit
0x009F       [0]    VREN_bit
0x009F       [1]    VRCON
0x009F       [0]    VRR_bit
0x009F       [0]    VROE_bit
//** Label List: ** 
//----------------------------------------------
  L_interrupt0
  L_interrupt1
  L_interrupt2
  L_interrupt3
  L_interrupt4
  L_interrupt5
  L_interrupt6
  L_interrupt7
  L_interrupt8
  L_interrupt9
  L_interrupt10
  L_interrupt11
  L_interrupt12
  L_interrupt13
  L_interrupt14
  L_interrupt15
  L_interrupt16
  L_interrupt17
  L_interrupt18
  L_interrupt19
  L_interrupt20
  L_interrupt21
  L_interrupt22
  L_interrupt23
  L_main24
  L_main25
  L_piscaLed26
  L_piscaLed27
  L_piscaLed28
  L_piscaLed29
  L_piscaLed30
  L__interrupt31
  L__interrupt32
  L__interrupt33
  _interrupt
  L__interrupt34
  L__interrupt35
  L__interrupt36
  L__interrupt37
  _main
  _piscaLed
  L__piscaLed38
  _CC2D_Loop1
  _____DoICP
  _____DoIFC
  ___CC2DW
  _Swap
  L_interrupt0
  L_interrupt1
  L_interrupt2
  L_interrupt3
  L_interrupt4
  L_interrupt5
  L_interrupt6
  L_interrupt7
  L_interrupt8
  L_interrupt9
  L_interrupt10
  L_interrupt11
  L_interrupt12
  L_interrupt13
  L_interrupt14
  L_interrupt15
  L_interrupt16
  L_interrupt17
  L_interrupt18
  L_interrupt19
  L_interrupt20
  L_interrupt21
  L_interrupt22
  L_interrupt23
  L_main24
  L_main25
  L_piscaLed26
  L_piscaLed27
  L_piscaLed28
  L_piscaLed29
  L_piscaLed30
  L__interrupt31
  L__interrupt32
  L__interrupt33
  _interrupt
  L__interrupt34
  L__interrupt35
  L__interrupt36
  L__interrupt37
  _main
  _piscaLed
  L__piscaLed38
