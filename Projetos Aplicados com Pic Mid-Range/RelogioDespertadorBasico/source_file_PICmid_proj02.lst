;  LST file generated by mikroListExporter - v.2.0 
; Date/Time: 02/05/2018 17:45:46
;----------------------------------------------

;Address Opcode 	ASM
0x0000	0x2E4E      	GOTO       1614
_interrupt:
0x0004	0x00FF      	MOVWF      R15
0x0005	0x0E03      	SWAPF      STATUS, 0
0x0006	0x0183      	CLRF       STATUS
0x0007	0x00C3      	MOVWF      ___saveSTATUS
0x0008	0x080A      	MOVF       PCLATH, 0
0x0009	0x00C5      	MOVWF      ___savePCLATH
0x000A	0x018A      	CLRF       PCLATH
0x000B	0x0870      	MOVF       R0, 0
0x000C	0x00A0      	MOVWF      32
;source_file_PICmid_proj02.c,101 :: 		void interrupt()
;source_file_PICmid_proj02.c,103 :: 		if(TMR0IF_bit)                              //Houve o estouro do Timer0?
0x000D	0x1D0B      	BTFSS      TMR0IF_bit, 2
0x000E	0x2822      	GOTO       L_interrupt0
;source_file_PICmid_proj02.c,106 :: 		TMR0IF_bit   = 0x00;                     //Limpa flag
0x000F	0x110B      	BCF        TMR0IF_bit, 2
;source_file_PICmid_proj02.c,107 :: 		TMR0         = 0x06;                     //Reinicia Timer0
0x0010	0x3006      	MOVLW      6
0x0011	0x0081      	MOVWF      TMR0
;source_file_PICmid_proj02.c,108 :: 		counter_T0  += 0x01;                     //Incrementa contador T0
0x0012	0x0AB9      	INCF       _counter_T0, 1
0x0013	0x1903      	BTFSC      STATUS, 2
0x0014	0x0ABA      	INCF       _counter_T0+1, 1
;source_file_PICmid_proj02.c,113 :: 		if(counter_T0 == 500)                    //counter igual a 500?
0x0015	0x083A      	MOVF       _counter_T0+1, 0
0x0016	0x3A01      	XORLW      1
0x0017	0x1D03      	BTFSS      STATUS, 2
0x0018	0x281B      	GOTO       L__interrupt12
0x0019	0x30F4      	MOVLW      244
0x001A	0x0639      	XORWF      _counter_T0, 0
L__interrupt12:
0x001B	0x1D03      	BTFSS      STATUS, 2
0x001C	0x2822      	GOTO       L_interrupt1
;source_file_PICmid_proj02.c,115 :: 		counter_T0 = 0x00;                    //reinicia counter
0x001D	0x01B9      	CLRF       _counter_T0
0x001E	0x01BA      	CLRF       _counter_T0+1
;source_file_PICmid_proj02.c,119 :: 		relogio();
0x001F	0x2633      	CALL       _relogio
;source_file_PICmid_proj02.c,121 :: 		debug_clk = ~debug_clk;               //inverte o estado da saída de debug
0x0020	0x3001      	MOVLW      1
0x0021	0x0687      	XORWF      RC0_bit, 1
;source_file_PICmid_proj02.c,123 :: 		} //end if counter
L_interrupt1:
;source_file_PICmid_proj02.c,128 :: 		} //end if
L_interrupt0:
;source_file_PICmid_proj02.c,130 :: 		} //end interrupt
L__interrupt11:
0x0022	0x0820      	MOVF       32, 0
0x0023	0x00F0      	MOVWF      R0
0x0024	0x0845      	MOVF       ___savePCLATH, 0
0x0025	0x008A      	MOVWF      PCLATH
0x0026	0x0E43      	SWAPF      ___saveSTATUS, 0
0x0027	0x0083      	MOVWF      STATUS
0x0028	0x0EFF      	SWAPF      R15, 1
0x0029	0x0E7F      	SWAPF      R15, 0
0x002A	0x0009      	RETFIE
; end of _interrupt
_Delay_1us:
;__Lib_Delays.c,7 :: 		void Delay_1us() {
;__Lib_Delays.c,8 :: 		Delay_us(1);
0x002B	0x0000      	NOP
0x002C	0x0000      	NOP
0x002D	0x0000      	NOP
0x002E	0x0000      	NOP
;__Lib_Delays.c,9 :: 		}
0x002F	0x0008      	RETURN
; end of _Delay_1us
_Delay_50us:
;__Lib_Delays.c,19 :: 		void Delay_50us() {
;__Lib_Delays.c,20 :: 		Delay_us(50);
0x0030	0x3042      	MOVLW      66
0x0031	0x1283      	BCF        STATUS, 5
0x0032	0x1303      	BCF        STATUS, 6
0x0033	0x00FD      	MOVWF      R13
L_Delay_50us2:
0x0034	0x0BFD      	DECFSZ     R13, 1
0x0035	0x2834      	GOTO       L_Delay_50us2
0x0036	0x0000      	NOP
;__Lib_Delays.c,21 :: 		}
0x0037	0x0008      	RETURN
; end of _Delay_50us
_Delay_5500us:
;__Lib_Delays.c,31 :: 		void Delay_5500us() {
;__Lib_Delays.c,32 :: 		Delay_us(5500);
0x0038	0x301D      	MOVLW      29
0x0039	0x1283      	BCF        STATUS, 5
0x003A	0x1303      	BCF        STATUS, 6
0x003B	0x00FC      	MOVWF      R12
0x003C	0x3091      	MOVLW      145
0x003D	0x00FD      	MOVWF      R13
L_Delay_5500us5:
0x003E	0x0BFD      	DECFSZ     R13, 1
0x003F	0x283E      	GOTO       L_Delay_5500us5
0x0040	0x0BFC      	DECFSZ     R12, 1
0x0041	0x283E      	GOTO       L_Delay_5500us5
;__Lib_Delays.c,33 :: 		}
0x0042	0x0008      	RETURN
; end of _Delay_5500us
_Lcd_Cmd:
;__Lib_Lcd.c,18 :: 		
;__Lib_Lcd.c,20 :: 		
0x0043	0x1283      	BCF        STATUS, 5
0x0044	0x1303      	BCF        STATUS, 6
0x0045	0x1BCA      	BTFSC      FARG_Lcd_Cmd_out_char, 7
0x0046	0x2849      	GOTO       L__Lcd_Cmd20
0x0047	0x1387      	BCF        LCD_D7, BitPos(LCD_D7+0)
0x0048	0x284A      	GOTO       L__Lcd_Cmd21
L__Lcd_Cmd20:
0x0049	0x1787      	BSF        LCD_D7, BitPos(LCD_D7+0)
L__Lcd_Cmd21:
;__Lib_Lcd.c,21 :: 		
0x004A	0x1B4A      	BTFSC      FARG_Lcd_Cmd_out_char, 6
0x004B	0x284E      	GOTO       L__Lcd_Cmd22
0x004C	0x1307      	BCF        LCD_D6, BitPos(LCD_D6+0)
0x004D	0x284F      	GOTO       L__Lcd_Cmd23
L__Lcd_Cmd22:
0x004E	0x1707      	BSF        LCD_D6, BitPos(LCD_D6+0)
L__Lcd_Cmd23:
;__Lib_Lcd.c,22 :: 		
0x004F	0x1ACA      	BTFSC      FARG_Lcd_Cmd_out_char, 5
0x0050	0x2853      	GOTO       L__Lcd_Cmd24
0x0051	0x1287      	BCF        LCD_D5, BitPos(LCD_D5+0)
0x0052	0x2854      	GOTO       L__Lcd_Cmd25
L__Lcd_Cmd24:
0x0053	0x1687      	BSF        LCD_D5, BitPos(LCD_D5+0)
L__Lcd_Cmd25:
;__Lib_Lcd.c,23 :: 		
0x0054	0x1A4A      	BTFSC      FARG_Lcd_Cmd_out_char, 4
0x0055	0x2858      	GOTO       L__Lcd_Cmd26
0x0056	0x1207      	BCF        LCD_D4, BitPos(LCD_D4+0)
0x0057	0x2859      	GOTO       L__Lcd_Cmd27
L__Lcd_Cmd26:
0x0058	0x1607      	BSF        LCD_D4, BitPos(LCD_D4+0)
L__Lcd_Cmd27:
;__Lib_Lcd.c,25 :: 		
0x0059	0x1844      	BTFSC      __Lib_Lcd_cmd_status, BitPos(__Lib_Lcd_cmd_status+0)
0x005A	0x285D      	GOTO       L__Lcd_Cmd28
0x005B	0x1507      	BSF        LCD_RS, BitPos(LCD_RS+0)
0x005C	0x285E      	GOTO       L__Lcd_Cmd29
L__Lcd_Cmd28:
0x005D	0x1107      	BCF        LCD_RS, BitPos(LCD_RS+0)
L__Lcd_Cmd29:
;__Lib_Lcd.c,28 :: 		
0x005E	0x1587      	BSF        LCD_EN, BitPos(LCD_EN+0)
;__Lib_Lcd.c,29 :: 		
0x005F	0x202B      	CALL       _Delay_1us
;__Lib_Lcd.c,30 :: 		
0x0060	0x1187      	BCF        LCD_EN, BitPos(LCD_EN+0)
;__Lib_Lcd.c,33 :: 		
0x0061	0x19CA      	BTFSC      FARG_Lcd_Cmd_out_char, 3
0x0062	0x2865      	GOTO       L__Lcd_Cmd30
0x0063	0x1387      	BCF        LCD_D7, BitPos(LCD_D7+0)
0x0064	0x2866      	GOTO       L__Lcd_Cmd31
L__Lcd_Cmd30:
0x0065	0x1787      	BSF        LCD_D7, BitPos(LCD_D7+0)
L__Lcd_Cmd31:
;__Lib_Lcd.c,34 :: 		
0x0066	0x194A      	BTFSC      FARG_Lcd_Cmd_out_char, 2
0x0067	0x286A      	GOTO       L__Lcd_Cmd32
0x0068	0x1307      	BCF        LCD_D6, BitPos(LCD_D6+0)
0x0069	0x286B      	GOTO       L__Lcd_Cmd33
L__Lcd_Cmd32:
0x006A	0x1707      	BSF        LCD_D6, BitPos(LCD_D6+0)
L__Lcd_Cmd33:
;__Lib_Lcd.c,35 :: 		
0x006B	0x18CA      	BTFSC      FARG_Lcd_Cmd_out_char, 1
0x006C	0x286F      	GOTO       L__Lcd_Cmd34
0x006D	0x1287      	BCF        LCD_D5, BitPos(LCD_D5+0)
0x006E	0x2870      	GOTO       L__Lcd_Cmd35
L__Lcd_Cmd34:
0x006F	0x1687      	BSF        LCD_D5, BitPos(LCD_D5+0)
L__Lcd_Cmd35:
;__Lib_Lcd.c,36 :: 		
0x0070	0x184A      	BTFSC      FARG_Lcd_Cmd_out_char, 0
0x0071	0x2874      	GOTO       L__Lcd_Cmd36
0x0072	0x1207      	BCF        LCD_D4, BitPos(LCD_D4+0)
0x0073	0x2875      	GOTO       L__Lcd_Cmd37
L__Lcd_Cmd36:
0x0074	0x1607      	BSF        LCD_D4, BitPos(LCD_D4+0)
L__Lcd_Cmd37:
;__Lib_Lcd.c,38 :: 		
0x0075	0x1844      	BTFSC      __Lib_Lcd_cmd_status, BitPos(__Lib_Lcd_cmd_status+0)
0x0076	0x2879      	GOTO       L__Lcd_Cmd38
0x0077	0x1507      	BSF        LCD_RS, BitPos(LCD_RS+0)
0x0078	0x287A      	GOTO       L__Lcd_Cmd39
L__Lcd_Cmd38:
0x0079	0x1107      	BCF        LCD_RS, BitPos(LCD_RS+0)
L__Lcd_Cmd39:
;__Lib_Lcd.c,40 :: 		
0x007A	0x1587      	BSF        LCD_EN, BitPos(LCD_EN+0)
;__Lib_Lcd.c,41 :: 		
0x007B	0x202B      	CALL       _Delay_1us
;__Lib_Lcd.c,42 :: 		
0x007C	0x1187      	BCF        LCD_EN, BitPos(LCD_EN+0)
;__Lib_Lcd.c,44 :: 		
0x007D	0x1C44      	BTFSS      __Lib_Lcd_cmd_status, BitPos(__Lib_Lcd_cmd_status+0)
0x007E	0x2881      	GOTO       L_Lcd_Cmd0
;__Lib_Lcd.c,45 :: 		
0x007F	0x2038      	CALL       _Delay_5500us
0x0080	0x2882      	GOTO       L_Lcd_Cmd1
L_Lcd_Cmd0:
;__Lib_Lcd.c,47 :: 		
0x0081	0x2030      	CALL       _Delay_50us
L_Lcd_Cmd1:
;__Lib_Lcd.c,48 :: 		
0x0082	0x0008      	RETURN
; end of _Lcd_Cmd
_Lcd_Chr_CP:
;__Lib_Lcd.c,50 :: 		
;__Lib_Lcd.c,52 :: 		
0x0083	0x1283      	BCF        STATUS, 5
0x0084	0x1303      	BCF        STATUS, 6
0x0085	0x1044      	BCF        __Lib_Lcd_cmd_status, BitPos(__Lib_Lcd_cmd_status+0)
;__Lib_Lcd.c,53 :: 		
0x0086	0x0847      	MOVF       FARG_Lcd_Chr_CP_out_char, 0
0x0087	0x00CA      	MOVWF      FARG_Lcd_Cmd_out_char
0x0088	0x2043      	CALL       _Lcd_Cmd
;__Lib_Lcd.c,54 :: 		
0x0089	0x1444      	BSF        __Lib_Lcd_cmd_status, BitPos(__Lib_Lcd_cmd_status+0)
;__Lib_Lcd.c,55 :: 		
0x008A	0x0008      	RETURN
; end of _Lcd_Chr_CP
_Div_8x8_U:
;__Lib_Math.c,189 :: 		
;__Lib_Math.c,196 :: 		
0x008B	0x1283      	BCF        STATUS, 5
;__Lib_Math.c,197 :: 		
0x008C	0x1303      	BCF        STATUS, 6
;__Lib_Math.c,198 :: 		
0x008D	0x01F8      	CLRF       R8
;__Lib_Math.c,199 :: 		
0x008E	0x3008      	MOVLW      8
;__Lib_Math.c,200 :: 		
0x008F	0x00FC      	MOVWF      R12
;__Lib_Math.c,201 :: 		
0x0090	0x0D70      	RLF        R0, 0
;__Lib_Math.c,202 :: 		
0x0091	0x0DF8      	RLF        R8, 1
;__Lib_Math.c,203 :: 		
0x0092	0x0874      	MOVF       R4, 0
;__Lib_Math.c,204 :: 		
0x0093	0x02F8      	SUBWF      R8, 1
;__Lib_Math.c,205 :: 		
0x0094	0x1803      	BTFSC      STATUS, 0
;__Lib_Math.c,206 :: 		
0x0095	0x2898      	GOTO       $+3
;__Lib_Math.c,207 :: 		
0x0096	0x07F8      	ADDWF      R8, 1
;__Lib_Math.c,208 :: 		
0x0097	0x1003      	BCF        STATUS, 0
;__Lib_Math.c,209 :: 		
0x0098	0x0DF0      	RLF        R0, 1
;__Lib_Math.c,210 :: 		
0x0099	0x0BFC      	DECFSZ     R12, 1
;__Lib_Math.c,211 :: 		
0x009A	0x2890      	GOTO       $-10
;__Lib_Math.c,213 :: 		
0x009B	0x0008      	RETURN
; end of _Div_8x8_U
_despertar:
;clockwork.c,43 :: 		void despertar()                               //Função do despertador
;clockwork.c,48 :: 		if(segundos == a_segundos)
0x009C	0x1283      	BCF        STATUS, 5
0x009D	0x1303      	BCF        STATUS, 6
0x009E	0x0822      	MOVF       _segundos, 0
0x009F	0x0621      	XORWF      _a_segundos, 0
0x00A0	0x1D03      	BTFSS      STATUS, 2
0x00A1	0x28B0      	GOTO       L_despertar0
;clockwork.c,50 :: 		if(minutos == a_minutos)
0x00A2	0x0825      	MOVF       _minutos, 0
0x00A3	0x0624      	XORWF      _a_minutos, 0
0x00A4	0x1D03      	BTFSS      STATUS, 2
0x00A5	0x28B0      	GOTO       L_despertar1
;clockwork.c,52 :: 		if(horas == a_horas)
0x00A6	0x0823      	MOVF       _horas, 0
0x00A7	0x0626      	XORWF      _a_horas, 0
0x00A8	0x1D03      	BTFSS      STATUS, 2
0x00A9	0x28B0      	GOTO       L_despertar2
;clockwork.c,54 :: 		if(dias == a_dias)
0x00AA	0x083D      	MOVF       _dias, 0
0x00AB	0x063C      	XORWF      _a_dias, 0
0x00AC	0x1D03      	BTFSS      STATUS, 2
0x00AD	0x28B0      	GOTO       L_despertar3
;clockwork.c,57 :: 		relay = 0x01;                    //Liga o relé
0x00AE	0x1606      	BSF        RB4_bit, 4
;clockwork.c,58 :: 		led   = 0x01;                    //Liga LED
0x00AF	0x1686      	BSF        RB5_bit, 5
;clockwork.c,60 :: 		} //end if dias
L_despertar3:
;clockwork.c,62 :: 		} //end if horas
L_despertar2:
;clockwork.c,64 :: 		} //end if minutos
L_despertar1:
;clockwork.c,66 :: 		} //end if segundos
L_despertar0:
;clockwork.c,68 :: 		} //end despertar
0x00B0	0x0008      	RETURN
; end of _despertar
_____DoICP:
;__Lib_System.c,6 :: 		
;__Lib_System.c,9 :: 		
0x00B1	0x1283      	BCF        STATUS, 5
0x00B2	0x1303      	BCF        STATUS, 6
0x00B3	0x0842      	MOVF       ___DoICPAddr+1, 0
0x00B4	0x008A      	MOVWF      PCLATH
;__Lib_System.c,10 :: 		
0x00B5	0x0841      	MOVF       ___DoICPAddr, 0
0x00B6	0x0082      	MOVWF      PCL
;__Lib_System.c,12 :: 		
0x00B7	0x0008      	RETURN
; end of _____DoICP
_Lcd_Chr:
;__Lib_Lcd.c,65 :: 		
;__Lib_Lcd.c,66 :: 		
0x00B8	0x28CA      	GOTO       L_Lcd_Chr4
;__Lib_Lcd.c,67 :: 		
L_Lcd_Chr6:
0x00B9	0x3080      	MOVLW      128
0x00BA	0x1283      	BCF        STATUS, 5
0x00BB	0x1303      	BCF        STATUS, 6
0x00BC	0x00C7      	MOVWF      FARG_Lcd_Chr_row
0x00BD	0x28DD      	GOTO       L_Lcd_Chr5
;__Lib_Lcd.c,68 :: 		
L_Lcd_Chr7:
0x00BE	0x30C0      	MOVLW      192
0x00BF	0x00C7      	MOVWF      FARG_Lcd_Chr_row
0x00C0	0x28DD      	GOTO       L_Lcd_Chr5
;__Lib_Lcd.c,69 :: 		
L_Lcd_Chr8:
0x00C1	0x3094      	MOVLW      148
0x00C2	0x00C7      	MOVWF      FARG_Lcd_Chr_row
0x00C3	0x28DD      	GOTO       L_Lcd_Chr5
;__Lib_Lcd.c,70 :: 		
L_Lcd_Chr9:
0x00C4	0x30D4      	MOVLW      212
0x00C5	0x00C7      	MOVWF      FARG_Lcd_Chr_row
0x00C6	0x28DD      	GOTO       L_Lcd_Chr5
;__Lib_Lcd.c,71 :: 		
L_Lcd_Chr10:
0x00C7	0x3080      	MOVLW      128
0x00C8	0x00C7      	MOVWF      FARG_Lcd_Chr_row
;__Lib_Lcd.c,72 :: 		
0x00C9	0x28DD      	GOTO       L_Lcd_Chr5
L_Lcd_Chr4:
0x00CA	0x1283      	BCF        STATUS, 5
0x00CB	0x1303      	BCF        STATUS, 6
0x00CC	0x0847      	MOVF       FARG_Lcd_Chr_row, 0
0x00CD	0x3A01      	XORLW      1
0x00CE	0x1903      	BTFSC      STATUS, 2
0x00CF	0x28B9      	GOTO       L_Lcd_Chr6
0x00D0	0x0847      	MOVF       FARG_Lcd_Chr_row, 0
0x00D1	0x3A02      	XORLW      2
0x00D2	0x1903      	BTFSC      STATUS, 2
0x00D3	0x28BE      	GOTO       L_Lcd_Chr7
0x00D4	0x0847      	MOVF       FARG_Lcd_Chr_row, 0
0x00D5	0x3A03      	XORLW      3
0x00D6	0x1903      	BTFSC      STATUS, 2
0x00D7	0x28C1      	GOTO       L_Lcd_Chr8
0x00D8	0x0847      	MOVF       FARG_Lcd_Chr_row, 0
0x00D9	0x3A04      	XORLW      4
0x00DA	0x1903      	BTFSC      STATUS, 2
0x00DB	0x28C4      	GOTO       L_Lcd_Chr9
0x00DC	0x28C7      	GOTO       L_Lcd_Chr10
L_Lcd_Chr5:
;__Lib_Lcd.c,74 :: 		
0x00DD	0x0348      	DECF       FARG_Lcd_Chr_column, 0
0x00DE	0x00F0      	MOVWF      R0
0x00DF	0x0847      	MOVF       FARG_Lcd_Chr_row, 0
0x00E0	0x07F0      	ADDWF      R0, 1
0x00E1	0x0870      	MOVF       R0, 0
0x00E2	0x00C7      	MOVWF      FARG_Lcd_Chr_row
;__Lib_Lcd.c,76 :: 		
0x00E3	0x1444      	BSF        __Lib_Lcd_cmd_status, BitPos(__Lib_Lcd_cmd_status+0)
;__Lib_Lcd.c,77 :: 		
0x00E4	0x0870      	MOVF       R0, 0
0x00E5	0x00CA      	MOVWF      FARG_Lcd_Cmd_out_char
0x00E6	0x2043      	CALL       _Lcd_Cmd
;__Lib_Lcd.c,79 :: 		
0x00E7	0x1044      	BCF        __Lib_Lcd_cmd_status, BitPos(__Lib_Lcd_cmd_status+0)
;__Lib_Lcd.c,80 :: 		
0x00E8	0x0849      	MOVF       FARG_Lcd_Chr_out_char, 0
0x00E9	0x00CA      	MOVWF      FARG_Lcd_Cmd_out_char
0x00EA	0x2043      	CALL       _Lcd_Cmd
;__Lib_Lcd.c,81 :: 		
0x00EB	0x1444      	BSF        __Lib_Lcd_cmd_status, BitPos(__Lib_Lcd_cmd_status+0)
;__Lib_Lcd.c,82 :: 		
0x00EC	0x0008      	RETURN
; end of _Lcd_Chr
_disp_horario:
;clockwork.c,73 :: 		void disp_horario()                            //Função para exibir a hora atual
;clockwork.c,77 :: 		text1[7] = segundos%10 + '0';
0x00ED	0x3007      	MOVLW      7
0x00EE	0x1283      	BCF        STATUS, 5
0x00EF	0x1303      	BCF        STATUS, 6
0x00F0	0x073E      	ADDWF      _text1, 0
0x00F1	0x00C6      	MOVWF      FLOC__disp_horario
0x00F2	0x300A      	MOVLW      10
0x00F3	0x00F4      	MOVWF      R4
0x00F4	0x0822      	MOVF       _segundos, 0
0x00F5	0x00F0      	MOVWF      R0
0x00F6	0x208B      	CALL       _Div_8x8_U
0x00F7	0x0878      	MOVF       R8, 0
0x00F8	0x00F0      	MOVWF      R0
0x00F9	0x3030      	MOVLW      48
0x00FA	0x07F0      	ADDWF      R0, 1
0x00FB	0x0846      	MOVF       FLOC__disp_horario, 0
0x00FC	0x0084      	MOVWF      FSR
0x00FD	0x0870      	MOVF       R0, 0
0x00FE	0x0080      	MOVWF      INDF
;clockwork.c,78 :: 		text1[6] = segundos/10 + '0';
0x00FF	0x3006      	MOVLW      6
0x0100	0x073E      	ADDWF      _text1, 0
0x0101	0x00C6      	MOVWF      FLOC__disp_horario
0x0102	0x300A      	MOVLW      10
0x0103	0x00F4      	MOVWF      R4
0x0104	0x0822      	MOVF       _segundos, 0
0x0105	0x00F0      	MOVWF      R0
0x0106	0x208B      	CALL       _Div_8x8_U
0x0107	0x3030      	MOVLW      48
0x0108	0x07F0      	ADDWF      R0, 1
0x0109	0x0846      	MOVF       FLOC__disp_horario, 0
0x010A	0x0084      	MOVWF      FSR
0x010B	0x0870      	MOVF       R0, 0
0x010C	0x0080      	MOVWF      INDF
;clockwork.c,79 :: 		text1[4] = minutos%10 + '0';
0x010D	0x3004      	MOVLW      4
0x010E	0x073E      	ADDWF      _text1, 0
0x010F	0x00C6      	MOVWF      FLOC__disp_horario
0x0110	0x300A      	MOVLW      10
0x0111	0x00F4      	MOVWF      R4
0x0112	0x0825      	MOVF       _minutos, 0
0x0113	0x00F0      	MOVWF      R0
0x0114	0x208B      	CALL       _Div_8x8_U
0x0115	0x0878      	MOVF       R8, 0
0x0116	0x00F0      	MOVWF      R0
0x0117	0x3030      	MOVLW      48
0x0118	0x07F0      	ADDWF      R0, 1
0x0119	0x0846      	MOVF       FLOC__disp_horario, 0
0x011A	0x0084      	MOVWF      FSR
0x011B	0x0870      	MOVF       R0, 0
0x011C	0x0080      	MOVWF      INDF
;clockwork.c,80 :: 		text1[3] = minutos/10 + '0';
0x011D	0x3003      	MOVLW      3
0x011E	0x073E      	ADDWF      _text1, 0
0x011F	0x00C6      	MOVWF      FLOC__disp_horario
0x0120	0x300A      	MOVLW      10
0x0121	0x00F4      	MOVWF      R4
0x0122	0x0825      	MOVF       _minutos, 0
0x0123	0x00F0      	MOVWF      R0
0x0124	0x208B      	CALL       _Div_8x8_U
0x0125	0x3030      	MOVLW      48
0x0126	0x07F0      	ADDWF      R0, 1
0x0127	0x0846      	MOVF       FLOC__disp_horario, 0
0x0128	0x0084      	MOVWF      FSR
0x0129	0x0870      	MOVF       R0, 0
0x012A	0x0080      	MOVWF      INDF
;clockwork.c,81 :: 		text1[1] = horas%10 + '0';
0x012B	0x0A3E      	INCF       _text1, 0
0x012C	0x00C6      	MOVWF      FLOC__disp_horario
0x012D	0x300A      	MOVLW      10
0x012E	0x00F4      	MOVWF      R4
0x012F	0x0823      	MOVF       _horas, 0
0x0130	0x00F0      	MOVWF      R0
0x0131	0x208B      	CALL       _Div_8x8_U
0x0132	0x0878      	MOVF       R8, 0
0x0133	0x00F0      	MOVWF      R0
0x0134	0x3030      	MOVLW      48
0x0135	0x07F0      	ADDWF      R0, 1
0x0136	0x0846      	MOVF       FLOC__disp_horario, 0
0x0137	0x0084      	MOVWF      FSR
0x0138	0x0870      	MOVF       R0, 0
0x0139	0x0080      	MOVWF      INDF
;clockwork.c,82 :: 		text1[0] = horas/10 + '0';
0x013A	0x083E      	MOVF       _text1, 0
0x013B	0x00C6      	MOVWF      FLOC__disp_horario
0x013C	0x300A      	MOVLW      10
0x013D	0x00F4      	MOVWF      R4
0x013E	0x0823      	MOVF       _horas, 0
0x013F	0x00F0      	MOVWF      R0
0x0140	0x208B      	CALL       _Div_8x8_U
0x0141	0x3030      	MOVLW      48
0x0142	0x07F0      	ADDWF      R0, 1
0x0143	0x0846      	MOVF       FLOC__disp_horario, 0
0x0144	0x0084      	MOVWF      FSR
0x0145	0x0870      	MOVF       R0, 0
0x0146	0x0080      	MOVWF      INDF
;clockwork.c,84 :: 		Lcd_Chr(1,5, text1[0]);                   //Imprimi o horário no display
0x0147	0x3001      	MOVLW      1
0x0148	0x00C7      	MOVWF      FARG_Lcd_Chr_row
0x0149	0x3005      	MOVLW      5
0x014A	0x00C8      	MOVWF      FARG_Lcd_Chr_column
0x014B	0x083E      	MOVF       _text1, 0
0x014C	0x0084      	MOVWF      FSR
0x014D	0x0800      	MOVF       INDF, 0
0x014E	0x00C9      	MOVWF      FARG_Lcd_Chr_out_char
0x014F	0x20B8      	CALL       _Lcd_Chr
;clockwork.c,85 :: 		Lcd_Chr_Cp  (text1[1]);                   //
0x0150	0x0A3E      	INCF       _text1, 0
0x0151	0x0084      	MOVWF      FSR
0x0152	0x0800      	MOVF       INDF, 0
0x0153	0x00C7      	MOVWF      FARG_Lcd_Chr_CP_out_char
0x0154	0x2083      	CALL       _Lcd_Chr_CP
;clockwork.c,86 :: 		Lcd_Chr_Cp  (text1[2]);                   //
0x0155	0x3002      	MOVLW      2
0x0156	0x073E      	ADDWF      _text1, 0
0x0157	0x0084      	MOVWF      FSR
0x0158	0x0800      	MOVF       INDF, 0
0x0159	0x00C7      	MOVWF      FARG_Lcd_Chr_CP_out_char
0x015A	0x2083      	CALL       _Lcd_Chr_CP
;clockwork.c,87 :: 		Lcd_Chr_Cp  (text1[3]);                   //
0x015B	0x3003      	MOVLW      3
0x015C	0x073E      	ADDWF      _text1, 0
0x015D	0x0084      	MOVWF      FSR
0x015E	0x0800      	MOVF       INDF, 0
0x015F	0x00C7      	MOVWF      FARG_Lcd_Chr_CP_out_char
0x0160	0x2083      	CALL       _Lcd_Chr_CP
;clockwork.c,88 :: 		Lcd_Chr_Cp  (text1[4]);                   //
0x0161	0x3004      	MOVLW      4
0x0162	0x073E      	ADDWF      _text1, 0
0x0163	0x0084      	MOVWF      FSR
0x0164	0x0800      	MOVF       INDF, 0
0x0165	0x00C7      	MOVWF      FARG_Lcd_Chr_CP_out_char
0x0166	0x2083      	CALL       _Lcd_Chr_CP
;clockwork.c,89 :: 		Lcd_Chr_Cp  (text1[5]);                   //
0x0167	0x3005      	MOVLW      5
0x0168	0x073E      	ADDWF      _text1, 0
0x0169	0x0084      	MOVWF      FSR
0x016A	0x0800      	MOVF       INDF, 0
0x016B	0x00C7      	MOVWF      FARG_Lcd_Chr_CP_out_char
0x016C	0x2083      	CALL       _Lcd_Chr_CP
;clockwork.c,90 :: 		Lcd_Chr_Cp  (text1[6]);                   //
0x016D	0x3006      	MOVLW      6
0x016E	0x073E      	ADDWF      _text1, 0
0x016F	0x0084      	MOVWF      FSR
0x0170	0x0800      	MOVF       INDF, 0
0x0171	0x00C7      	MOVWF      FARG_Lcd_Chr_CP_out_char
0x0172	0x2083      	CALL       _Lcd_Chr_CP
;clockwork.c,91 :: 		Lcd_Chr_Cp  (text1[7]);                   //
0x0173	0x3007      	MOVLW      7
0x0174	0x073E      	ADDWF      _text1, 0
0x0175	0x0084      	MOVWF      FSR
0x0176	0x0800      	MOVF       INDF, 0
0x0177	0x00C7      	MOVWF      FARG_Lcd_Chr_CP_out_char
0x0178	0x2083      	CALL       _Lcd_Chr_CP
;clockwork.c,93 :: 		switch(dias)                              //Converte número do dia para nome do dia
0x0179	0x29DC      	GOTO       L_disp_horario4
;clockwork.c,95 :: 		case 0:
L_disp_horario6:
;clockwork.c,96 :: 		Lcd_Chr(1,14,'D');
0x017A	0x3001      	MOVLW      1
0x017B	0x00C7      	MOVWF      FARG_Lcd_Chr_row
0x017C	0x300E      	MOVLW      14
0x017D	0x00C8      	MOVWF      FARG_Lcd_Chr_column
0x017E	0x3044      	MOVLW      68
0x017F	0x00C9      	MOVWF      FARG_Lcd_Chr_out_char
0x0180	0x20B8      	CALL       _Lcd_Chr
;clockwork.c,97 :: 		Lcd_Chr_Cp  ('O');
0x0181	0x304F      	MOVLW      79
0x0182	0x00C7      	MOVWF      FARG_Lcd_Chr_CP_out_char
0x0183	0x2083      	CALL       _Lcd_Chr_CP
;clockwork.c,98 :: 		Lcd_Chr_Cp  ('M');
0x0184	0x304D      	MOVLW      77
0x0185	0x00C7      	MOVWF      FARG_Lcd_Chr_CP_out_char
0x0186	0x2083      	CALL       _Lcd_Chr_CP
;clockwork.c,99 :: 		break;
0x0187	0x29F8      	GOTO       L_disp_horario5
;clockwork.c,100 :: 		case 1:
L_disp_horario7:
;clockwork.c,101 :: 		Lcd_Chr(1,14,'S');
0x0188	0x3001      	MOVLW      1
0x0189	0x00C7      	MOVWF      FARG_Lcd_Chr_row
0x018A	0x300E      	MOVLW      14
0x018B	0x00C8      	MOVWF      FARG_Lcd_Chr_column
0x018C	0x3053      	MOVLW      83
0x018D	0x00C9      	MOVWF      FARG_Lcd_Chr_out_char
0x018E	0x20B8      	CALL       _Lcd_Chr
;clockwork.c,102 :: 		Lcd_Chr_Cp  ('E');
0x018F	0x3045      	MOVLW      69
0x0190	0x00C7      	MOVWF      FARG_Lcd_Chr_CP_out_char
0x0191	0x2083      	CALL       _Lcd_Chr_CP
;clockwork.c,103 :: 		Lcd_Chr_Cp  ('G');
0x0192	0x3047      	MOVLW      71
0x0193	0x00C7      	MOVWF      FARG_Lcd_Chr_CP_out_char
0x0194	0x2083      	CALL       _Lcd_Chr_CP
;clockwork.c,104 :: 		break;
0x0195	0x29F8      	GOTO       L_disp_horario5
;clockwork.c,105 :: 		case 2:
L_disp_horario8:
;clockwork.c,106 :: 		Lcd_Chr(1,14,'T');
0x0196	0x3001      	MOVLW      1
0x0197	0x00C7      	MOVWF      FARG_Lcd_Chr_row
0x0198	0x300E      	MOVLW      14
0x0199	0x00C8      	MOVWF      FARG_Lcd_Chr_column
0x019A	0x3054      	MOVLW      84
0x019B	0x00C9      	MOVWF      FARG_Lcd_Chr_out_char
0x019C	0x20B8      	CALL       _Lcd_Chr
;clockwork.c,107 :: 		Lcd_Chr_Cp  ('E');
0x019D	0x3045      	MOVLW      69
0x019E	0x00C7      	MOVWF      FARG_Lcd_Chr_CP_out_char
0x019F	0x2083      	CALL       _Lcd_Chr_CP
;clockwork.c,108 :: 		Lcd_Chr_Cp  ('R');
0x01A0	0x3052      	MOVLW      82
0x01A1	0x00C7      	MOVWF      FARG_Lcd_Chr_CP_out_char
0x01A2	0x2083      	CALL       _Lcd_Chr_CP
;clockwork.c,109 :: 		break;
0x01A3	0x29F8      	GOTO       L_disp_horario5
;clockwork.c,110 :: 		case 3:
L_disp_horario9:
;clockwork.c,111 :: 		Lcd_Chr(1,14,'Q');
0x01A4	0x3001      	MOVLW      1
0x01A5	0x00C7      	MOVWF      FARG_Lcd_Chr_row
0x01A6	0x300E      	MOVLW      14
0x01A7	0x00C8      	MOVWF      FARG_Lcd_Chr_column
0x01A8	0x3051      	MOVLW      81
0x01A9	0x00C9      	MOVWF      FARG_Lcd_Chr_out_char
0x01AA	0x20B8      	CALL       _Lcd_Chr
;clockwork.c,112 :: 		Lcd_Chr_Cp  ('U');
0x01AB	0x3055      	MOVLW      85
0x01AC	0x00C7      	MOVWF      FARG_Lcd_Chr_CP_out_char
0x01AD	0x2083      	CALL       _Lcd_Chr_CP
;clockwork.c,113 :: 		Lcd_Chr_Cp  ('A');
0x01AE	0x3041      	MOVLW      65
0x01AF	0x00C7      	MOVWF      FARG_Lcd_Chr_CP_out_char
0x01B0	0x2083      	CALL       _Lcd_Chr_CP
;clockwork.c,114 :: 		break;
0x01B1	0x29F8      	GOTO       L_disp_horario5
;clockwork.c,115 :: 		case 4:
L_disp_horario10:
;clockwork.c,116 :: 		Lcd_Chr(1,14,'Q');
0x01B2	0x3001      	MOVLW      1
0x01B3	0x00C7      	MOVWF      FARG_Lcd_Chr_row
0x01B4	0x300E      	MOVLW      14
0x01B5	0x00C8      	MOVWF      FARG_Lcd_Chr_column
0x01B6	0x3051      	MOVLW      81
0x01B7	0x00C9      	MOVWF      FARG_Lcd_Chr_out_char
0x01B8	0x20B8      	CALL       _Lcd_Chr
;clockwork.c,117 :: 		Lcd_Chr_Cp  ('U');
0x01B9	0x3055      	MOVLW      85
0x01BA	0x00C7      	MOVWF      FARG_Lcd_Chr_CP_out_char
0x01BB	0x2083      	CALL       _Lcd_Chr_CP
;clockwork.c,118 :: 		Lcd_Chr_Cp  ('I');
0x01BC	0x3049      	MOVLW      73
0x01BD	0x00C7      	MOVWF      FARG_Lcd_Chr_CP_out_char
0x01BE	0x2083      	CALL       _Lcd_Chr_CP
;clockwork.c,119 :: 		break;
0x01BF	0x29F8      	GOTO       L_disp_horario5
;clockwork.c,120 :: 		case 5:
L_disp_horario11:
;clockwork.c,121 :: 		Lcd_Chr(1,14,'S');
0x01C0	0x3001      	MOVLW      1
0x01C1	0x00C7      	MOVWF      FARG_Lcd_Chr_row
0x01C2	0x300E      	MOVLW      14
0x01C3	0x00C8      	MOVWF      FARG_Lcd_Chr_column
0x01C4	0x3053      	MOVLW      83
0x01C5	0x00C9      	MOVWF      FARG_Lcd_Chr_out_char
0x01C6	0x20B8      	CALL       _Lcd_Chr
;clockwork.c,122 :: 		Lcd_Chr_Cp  ('E');
0x01C7	0x3045      	MOVLW      69
0x01C8	0x00C7      	MOVWF      FARG_Lcd_Chr_CP_out_char
0x01C9	0x2083      	CALL       _Lcd_Chr_CP
;clockwork.c,123 :: 		Lcd_Chr_Cp  ('X');
0x01CA	0x3058      	MOVLW      88
0x01CB	0x00C7      	MOVWF      FARG_Lcd_Chr_CP_out_char
0x01CC	0x2083      	CALL       _Lcd_Chr_CP
;clockwork.c,124 :: 		break;
0x01CD	0x29F8      	GOTO       L_disp_horario5
;clockwork.c,125 :: 		case 6:
L_disp_horario12:
;clockwork.c,126 :: 		Lcd_Chr(1,14,'S');
0x01CE	0x3001      	MOVLW      1
0x01CF	0x00C7      	MOVWF      FARG_Lcd_Chr_row
0x01D0	0x300E      	MOVLW      14
0x01D1	0x00C8      	MOVWF      FARG_Lcd_Chr_column
0x01D2	0x3053      	MOVLW      83
0x01D3	0x00C9      	MOVWF      FARG_Lcd_Chr_out_char
0x01D4	0x20B8      	CALL       _Lcd_Chr
;clockwork.c,127 :: 		Lcd_Chr_Cp  ('A');
0x01D5	0x3041      	MOVLW      65
0x01D6	0x00C7      	MOVWF      FARG_Lcd_Chr_CP_out_char
0x01D7	0x2083      	CALL       _Lcd_Chr_CP
;clockwork.c,128 :: 		Lcd_Chr_Cp  ('B');
0x01D8	0x3042      	MOVLW      66
0x01D9	0x00C7      	MOVWF      FARG_Lcd_Chr_CP_out_char
0x01DA	0x2083      	CALL       _Lcd_Chr_CP
;clockwork.c,129 :: 		break;
0x01DB	0x29F8      	GOTO       L_disp_horario5
;clockwork.c,131 :: 		} //end switch
L_disp_horario4:
0x01DC	0x083D      	MOVF       _dias, 0
0x01DD	0x3A00      	XORLW      0
0x01DE	0x1903      	BTFSC      STATUS, 2
0x01DF	0x297A      	GOTO       L_disp_horario6
0x01E0	0x083D      	MOVF       _dias, 0
0x01E1	0x3A01      	XORLW      1
0x01E2	0x1903      	BTFSC      STATUS, 2
0x01E3	0x2988      	GOTO       L_disp_horario7
0x01E4	0x083D      	MOVF       _dias, 0
0x01E5	0x3A02      	XORLW      2
0x01E6	0x1903      	BTFSC      STATUS, 2
0x01E7	0x2996      	GOTO       L_disp_horario8
0x01E8	0x083D      	MOVF       _dias, 0
0x01E9	0x3A03      	XORLW      3
0x01EA	0x1903      	BTFSC      STATUS, 2
0x01EB	0x29A4      	GOTO       L_disp_horario9
0x01EC	0x083D      	MOVF       _dias, 0
0x01ED	0x3A04      	XORLW      4
0x01EE	0x1903      	BTFSC      STATUS, 2
0x01EF	0x29B2      	GOTO       L_disp_horario10
0x01F0	0x083D      	MOVF       _dias, 0
0x01F1	0x3A05      	XORLW      5
0x01F2	0x1903      	BTFSC      STATUS, 2
0x01F3	0x29C0      	GOTO       L_disp_horario11
0x01F4	0x083D      	MOVF       _dias, 0
0x01F5	0x3A06      	XORLW      6
0x01F6	0x1903      	BTFSC      STATUS, 2
0x01F7	0x29CE      	GOTO       L_disp_horario12
L_disp_horario5:
;clockwork.c,134 :: 		} //end relogio
0x01F8	0x0008      	RETURN
; end of _disp_horario
_ajusta_relogio:
;clockwork.c,172 :: 		void ajusta_relogio()                          //Função para ajuste do relógio
;clockwork.c,175 :: 		char i = 0;                               //Variável para iterações
0x01F9	0x1283      	BCF        STATUS, 5
0x01FA	0x1303      	BCF        STATUS, 6
0x01FB	0x01C6      	CLRF       ajusta_relogio_i_L0
;clockwork.c,177 :: 		if(!plus)       plus_f      = 0x01;       //Se pressionar o botão 'mais', seta a flag
0x01FC	0x1805      	BTFSC      RA0_bit, 0
0x01FD	0x29FF      	GOTO       L_ajusta_relogio17
0x01FE	0x1440      	BSF        _flagsA, 0
L_ajusta_relogio17:
;clockwork.c,178 :: 		if(!plus10)     plus10_f    = 0x01;       //Se pressionar o botão 'mais 10', seta a flag
0x01FF	0x1885      	BTFSC      RA1_bit, 1
0x0200	0x2A02      	GOTO       L_ajusta_relogio18
0x0201	0x14C0      	BSF        _flagsA, 1
L_ajusta_relogio18:
;clockwork.c,179 :: 		if(!adj_watch)  adj_watch_f = 0x01;       //Se pressionar o botão 'ajuste das horas', seta a flag
0x0202	0x1905      	BTFSC      RA2_bit, 2
0x0203	0x2A05      	GOTO       L_ajusta_relogio19
0x0204	0x1540      	BSF        _flagsA, 2
L_ajusta_relogio19:
;clockwork.c,182 :: 		if(adj_watch && adj_watch_f)              //Soltou botão de ajuste e flag setada?
0x0205	0x1D05      	BTFSS      RA2_bit, 2
0x0206	0x2A10      	GOTO       L_ajusta_relogio22
0x0207	0x1D40      	BTFSS      _flagsA, 2
0x0208	0x2A10      	GOTO       L_ajusta_relogio22
L__ajusta_relogio124:
;clockwork.c,184 :: 		adj_watch_f = 0x00;                    //Limpa flag05
0x0209	0x1140      	BCF        _flagsA, 2
;clockwork.c,185 :: 		ctrl_watch++;                          //Incrementa variável de controle do ajuste
0x020A	0x0ABF      	INCF       _ctrl_watch, 1
;clockwork.c,188 :: 		if(ctrl_watch > 0x05) ctrl_watch = 0x00;
0x020B	0x083F      	MOVF       _ctrl_watch, 0
0x020C	0x3C05      	SUBLW      5
0x020D	0x1803      	BTFSC      STATUS, 0
0x020E	0x2A10      	GOTO       L_ajusta_relogio23
0x020F	0x01BF      	CLRF       _ctrl_watch
L_ajusta_relogio23:
;clockwork.c,190 :: 		} //end if adj_watch
L_ajusta_relogio22:
;clockwork.c,193 :: 		switch(ctrl_watch)                        //Verifica variável de controle de ajuste das horas
0x0210	0x2ADA      	GOTO       L_ajusta_relogio24
;clockwork.c,195 :: 		case 0x00:                             //Caso seja igual a 0
L_ajusta_relogio26:
;clockwork.c,196 :: 		Lcd_Chr (1,1,' ');
0x0211	0x3001      	MOVLW      1
0x0212	0x00C7      	MOVWF      FARG_Lcd_Chr_row
0x0213	0x3001      	MOVLW      1
0x0214	0x00C8      	MOVWF      FARG_Lcd_Chr_column
0x0215	0x3020      	MOVLW      32
0x0216	0x00C9      	MOVWF      FARG_Lcd_Chr_out_char
0x0217	0x20B8      	CALL       _Lcd_Chr
;clockwork.c,197 :: 		Lcd_Chr (2,5,'^');             //Demonstra ajuste das horas
0x0218	0x3002      	MOVLW      2
0x0219	0x00C7      	MOVWF      FARG_Lcd_Chr_row
0x021A	0x3005      	MOVLW      5
0x021B	0x00C8      	MOVWF      FARG_Lcd_Chr_column
0x021C	0x305E      	MOVLW      94
0x021D	0x00C9      	MOVWF      FARG_Lcd_Chr_out_char
0x021E	0x20B8      	CALL       _Lcd_Chr
;clockwork.c,198 :: 		Lcd_Chr_Cp  ('^');
0x021F	0x305E      	MOVLW      94
0x0220	0x00C7      	MOVWF      FARG_Lcd_Chr_CP_out_char
0x0221	0x2083      	CALL       _Lcd_Chr_CP
;clockwork.c,199 :: 		Lcd_Chr (2,8,' ');
0x0222	0x3002      	MOVLW      2
0x0223	0x00C7      	MOVWF      FARG_Lcd_Chr_row
0x0224	0x3008      	MOVLW      8
0x0225	0x00C8      	MOVWF      FARG_Lcd_Chr_column
0x0226	0x3020      	MOVLW      32
0x0227	0x00C9      	MOVWF      FARG_Lcd_Chr_out_char
0x0228	0x20B8      	CALL       _Lcd_Chr
;clockwork.c,200 :: 		Lcd_Chr_Cp  (' ');
0x0229	0x3020      	MOVLW      32
0x022A	0x00C7      	MOVWF      FARG_Lcd_Chr_CP_out_char
0x022B	0x2083      	CALL       _Lcd_Chr_CP
;clockwork.c,201 :: 		Lcd_Chr(2,11,' ');
0x022C	0x3002      	MOVLW      2
0x022D	0x00C7      	MOVWF      FARG_Lcd_Chr_row
0x022E	0x300B      	MOVLW      11
0x022F	0x00C8      	MOVWF      FARG_Lcd_Chr_column
0x0230	0x3020      	MOVLW      32
0x0231	0x00C9      	MOVWF      FARG_Lcd_Chr_out_char
0x0232	0x20B8      	CALL       _Lcd_Chr
;clockwork.c,202 :: 		Lcd_Chr_Cp  (' ');
0x0233	0x3020      	MOVLW      32
0x0234	0x00C7      	MOVWF      FARG_Lcd_Chr_CP_out_char
0x0235	0x2083      	CALL       _Lcd_Chr_CP
;clockwork.c,203 :: 		break;
0x0236	0x2AF2      	GOTO       L_ajusta_relogio25
;clockwork.c,204 :: 		case 0x01:                             //Caso seja igual a 1
L_ajusta_relogio27:
;clockwork.c,205 :: 		Lcd_Chr (2,5,' ');
0x0237	0x3002      	MOVLW      2
0x0238	0x00C7      	MOVWF      FARG_Lcd_Chr_row
0x0239	0x3005      	MOVLW      5
0x023A	0x00C8      	MOVWF      FARG_Lcd_Chr_column
0x023B	0x3020      	MOVLW      32
0x023C	0x00C9      	MOVWF      FARG_Lcd_Chr_out_char
0x023D	0x20B8      	CALL       _Lcd_Chr
;clockwork.c,206 :: 		Lcd_Chr_Cp  (' ');
0x023E	0x3020      	MOVLW      32
0x023F	0x00C7      	MOVWF      FARG_Lcd_Chr_CP_out_char
0x0240	0x2083      	CALL       _Lcd_Chr_CP
;clockwork.c,207 :: 		Lcd_Chr (2,8,'^');             //Demonstra ajuste dos minutos
0x0241	0x3002      	MOVLW      2
0x0242	0x00C7      	MOVWF      FARG_Lcd_Chr_row
0x0243	0x3008      	MOVLW      8
0x0244	0x00C8      	MOVWF      FARG_Lcd_Chr_column
0x0245	0x305E      	MOVLW      94
0x0246	0x00C9      	MOVWF      FARG_Lcd_Chr_out_char
0x0247	0x20B8      	CALL       _Lcd_Chr
;clockwork.c,208 :: 		Lcd_Chr_Cp  ('^');
0x0248	0x305E      	MOVLW      94
0x0249	0x00C7      	MOVWF      FARG_Lcd_Chr_CP_out_char
0x024A	0x2083      	CALL       _Lcd_Chr_CP
;clockwork.c,209 :: 		Lcd_Chr(2,11,' ');
0x024B	0x3002      	MOVLW      2
0x024C	0x00C7      	MOVWF      FARG_Lcd_Chr_row
0x024D	0x300B      	MOVLW      11
0x024E	0x00C8      	MOVWF      FARG_Lcd_Chr_column
0x024F	0x3020      	MOVLW      32
0x0250	0x00C9      	MOVWF      FARG_Lcd_Chr_out_char
0x0251	0x20B8      	CALL       _Lcd_Chr
;clockwork.c,210 :: 		Lcd_Chr_Cp  (' ');
0x0252	0x3020      	MOVLW      32
0x0253	0x00C7      	MOVWF      FARG_Lcd_Chr_CP_out_char
0x0254	0x2083      	CALL       _Lcd_Chr_CP
;clockwork.c,211 :: 		break;
0x0255	0x2AF2      	GOTO       L_ajusta_relogio25
;clockwork.c,212 :: 		case 0x02:                             //Caso seja igual a 2
L_ajusta_relogio28:
;clockwork.c,213 :: 		Lcd_Chr (2,5,' ');
0x0256	0x3002      	MOVLW      2
0x0257	0x00C7      	MOVWF      FARG_Lcd_Chr_row
0x0258	0x3005      	MOVLW      5
0x0259	0x00C8      	MOVWF      FARG_Lcd_Chr_column
0x025A	0x3020      	MOVLW      32
0x025B	0x00C9      	MOVWF      FARG_Lcd_Chr_out_char
0x025C	0x20B8      	CALL       _Lcd_Chr
;clockwork.c,214 :: 		Lcd_Chr_Cp  (' ');
0x025D	0x3020      	MOVLW      32
0x025E	0x00C7      	MOVWF      FARG_Lcd_Chr_CP_out_char
0x025F	0x2083      	CALL       _Lcd_Chr_CP
;clockwork.c,215 :: 		Lcd_Chr (2,8,' ');
0x0260	0x3002      	MOVLW      2
0x0261	0x00C7      	MOVWF      FARG_Lcd_Chr_row
0x0262	0x3008      	MOVLW      8
0x0263	0x00C8      	MOVWF      FARG_Lcd_Chr_column
0x0264	0x3020      	MOVLW      32
0x0265	0x00C9      	MOVWF      FARG_Lcd_Chr_out_char
0x0266	0x20B8      	CALL       _Lcd_Chr
;clockwork.c,216 :: 		Lcd_Chr_Cp  (' ');
0x0267	0x3020      	MOVLW      32
0x0268	0x00C7      	MOVWF      FARG_Lcd_Chr_CP_out_char
0x0269	0x2083      	CALL       _Lcd_Chr_CP
;clockwork.c,217 :: 		Lcd_Chr(2,11,'^');             //Demonstra ajuste dos segundos
0x026A	0x3002      	MOVLW      2
0x026B	0x00C7      	MOVWF      FARG_Lcd_Chr_row
0x026C	0x300B      	MOVLW      11
0x026D	0x00C8      	MOVWF      FARG_Lcd_Chr_column
0x026E	0x305E      	MOVLW      94
0x026F	0x00C9      	MOVWF      FARG_Lcd_Chr_out_char
0x0270	0x20B8      	CALL       _Lcd_Chr
;clockwork.c,218 :: 		Lcd_Chr_Cp  ('^');
0x0271	0x305E      	MOVLW      94
0x0272	0x00C7      	MOVWF      FARG_Lcd_Chr_CP_out_char
0x0273	0x2083      	CALL       _Lcd_Chr_CP
;clockwork.c,219 :: 		break;
0x0274	0x2AF2      	GOTO       L_ajusta_relogio25
;clockwork.c,220 :: 		case 0x03:                             //Caso seja igual a 3
L_ajusta_relogio29:
;clockwork.c,221 :: 		Lcd_Chr (2,5,' ');             //Demonstra ajuste dos dias
0x0275	0x3002      	MOVLW      2
0x0276	0x00C7      	MOVWF      FARG_Lcd_Chr_row
0x0277	0x3005      	MOVLW      5
0x0278	0x00C8      	MOVWF      FARG_Lcd_Chr_column
0x0279	0x3020      	MOVLW      32
0x027A	0x00C9      	MOVWF      FARG_Lcd_Chr_out_char
0x027B	0x20B8      	CALL       _Lcd_Chr
;clockwork.c,222 :: 		Lcd_Chr_Cp  (' ');
0x027C	0x3020      	MOVLW      32
0x027D	0x00C7      	MOVWF      FARG_Lcd_Chr_CP_out_char
0x027E	0x2083      	CALL       _Lcd_Chr_CP
;clockwork.c,223 :: 		Lcd_Chr (2,8,' ');
0x027F	0x3002      	MOVLW      2
0x0280	0x00C7      	MOVWF      FARG_Lcd_Chr_row
0x0281	0x3008      	MOVLW      8
0x0282	0x00C8      	MOVWF      FARG_Lcd_Chr_column
0x0283	0x3020      	MOVLW      32
0x0284	0x00C9      	MOVWF      FARG_Lcd_Chr_out_char
0x0285	0x20B8      	CALL       _Lcd_Chr
;clockwork.c,224 :: 		Lcd_Chr_Cp  (' ');
0x0286	0x3020      	MOVLW      32
0x0287	0x00C7      	MOVWF      FARG_Lcd_Chr_CP_out_char
0x0288	0x2083      	CALL       _Lcd_Chr_CP
;clockwork.c,225 :: 		Lcd_Chr(2,11,' ');
0x0289	0x3002      	MOVLW      2
0x028A	0x00C7      	MOVWF      FARG_Lcd_Chr_row
0x028B	0x300B      	MOVLW      11
0x028C	0x00C8      	MOVWF      FARG_Lcd_Chr_column
0x028D	0x3020      	MOVLW      32
0x028E	0x00C9      	MOVWF      FARG_Lcd_Chr_out_char
0x028F	0x20B8      	CALL       _Lcd_Chr
;clockwork.c,226 :: 		Lcd_Chr_Cp  (' ');
0x0290	0x3020      	MOVLW      32
0x0291	0x00C7      	MOVWF      FARG_Lcd_Chr_CP_out_char
0x0292	0x2083      	CALL       _Lcd_Chr_CP
;clockwork.c,227 :: 		Lcd_Chr(2,14,'^');
0x0293	0x3002      	MOVLW      2
0x0294	0x00C7      	MOVWF      FARG_Lcd_Chr_row
0x0295	0x300E      	MOVLW      14
0x0296	0x00C8      	MOVWF      FARG_Lcd_Chr_column
0x0297	0x305E      	MOVLW      94
0x0298	0x00C9      	MOVWF      FARG_Lcd_Chr_out_char
0x0299	0x20B8      	CALL       _Lcd_Chr
;clockwork.c,228 :: 		break;
0x029A	0x2AF2      	GOTO       L_ajusta_relogio25
;clockwork.c,230 :: 		case 0x04:                             //Caso seja igual a 5
L_ajusta_relogio30:
;clockwork.c,231 :: 		despertar();                                   //Desperta!
0x029B	0x209C      	CALL       _despertar
;clockwork.c,232 :: 		if(minutos == (a_minutos + 10))
0x029C	0x300A      	MOVLW      10
0x029D	0x0724      	ADDWF      _a_minutos, 0
0x029E	0x00F1      	MOVWF      R1
0x029F	0x01F2      	CLRF       R1+1
0x02A0	0x1803      	BTFSC      STATUS, 0
0x02A1	0x0AF2      	INCF       R1+1, 1
0x02A2	0x3000      	MOVLW      0
0x02A3	0x0672      	XORWF      R1+1, 0
0x02A4	0x1D03      	BTFSS      STATUS, 2
0x02A5	0x2AA8      	GOTO       L__ajusta_relogio128
0x02A6	0x0871      	MOVF       R1, 0
0x02A7	0x0625      	XORWF      _minutos, 0
L__ajusta_relogio128:
0x02A8	0x1D03      	BTFSS      STATUS, 2
0x02A9	0x2AAC      	GOTO       L_ajusta_relogio31
;clockwork.c,234 :: 		relay = 0x00;                 //Desliga relé após 10 minutos
0x02AA	0x1206      	BCF        RB4_bit, 4
;clockwork.c,235 :: 		led   = 0x00;                 //Desliga led  após 10 minutos
0x02AB	0x1286      	BCF        RB5_bit, 5
;clockwork.c,237 :: 		}
L_ajusta_relogio31:
;clockwork.c,238 :: 		Lcd_Chr(1,1,'D');
0x02AC	0x3001      	MOVLW      1
0x02AD	0x00C7      	MOVWF      FARG_Lcd_Chr_row
0x02AE	0x3001      	MOVLW      1
0x02AF	0x00C8      	MOVWF      FARG_Lcd_Chr_column
0x02B0	0x3044      	MOVLW      68
0x02B1	0x00C9      	MOVWF      FARG_Lcd_Chr_out_char
0x02B2	0x20B8      	CALL       _Lcd_Chr
;clockwork.c,239 :: 		for(i = 0; i<12; i++) Lcd_Chr(2,i+5,' '); //Limpa display 'manualmente' a partir da quinta coluna
0x02B3	0x01C6      	CLRF       ajusta_relogio_i_L0
L_ajusta_relogio32:
0x02B4	0x300C      	MOVLW      12
0x02B5	0x0246      	SUBWF      ajusta_relogio_i_L0, 0
0x02B6	0x1803      	BTFSC      STATUS, 0
0x02B7	0x2AC2      	GOTO       L_ajusta_relogio33
0x02B8	0x3002      	MOVLW      2
0x02B9	0x00C7      	MOVWF      FARG_Lcd_Chr_row
0x02BA	0x3005      	MOVLW      5
0x02BB	0x0746      	ADDWF      ajusta_relogio_i_L0, 0
0x02BC	0x00C8      	MOVWF      FARG_Lcd_Chr_column
0x02BD	0x3020      	MOVLW      32
0x02BE	0x00C9      	MOVWF      FARG_Lcd_Chr_out_char
0x02BF	0x20B8      	CALL       _Lcd_Chr
0x02C0	0x0AC6      	INCF       ajusta_relogio_i_L0, 1
0x02C1	0x2AB4      	GOTO       L_ajusta_relogio32
L_ajusta_relogio33:
;clockwork.c,240 :: 		break;
0x02C2	0x2AF2      	GOTO       L_ajusta_relogio25
;clockwork.c,241 :: 		case 0x05:                             //Caso seja igual a 5
L_ajusta_relogio35:
;clockwork.c,242 :: 		Lcd_Chr(1,1,' ');
0x02C3	0x3001      	MOVLW      1
0x02C4	0x00C7      	MOVWF      FARG_Lcd_Chr_row
0x02C5	0x3001      	MOVLW      1
0x02C6	0x00C8      	MOVWF      FARG_Lcd_Chr_column
0x02C7	0x3020      	MOVLW      32
0x02C8	0x00C9      	MOVWF      FARG_Lcd_Chr_out_char
0x02C9	0x20B8      	CALL       _Lcd_Chr
;clockwork.c,243 :: 		for(i = 0; i<12; i++) Lcd_Chr(2,i+5,' '); //Limpa display 'manualmente' a partir da quinta coluna
0x02CA	0x01C6      	CLRF       ajusta_relogio_i_L0
L_ajusta_relogio36:
0x02CB	0x300C      	MOVLW      12
0x02CC	0x0246      	SUBWF      ajusta_relogio_i_L0, 0
0x02CD	0x1803      	BTFSC      STATUS, 0
0x02CE	0x2AD9      	GOTO       L_ajusta_relogio37
0x02CF	0x3002      	MOVLW      2
0x02D0	0x00C7      	MOVWF      FARG_Lcd_Chr_row
0x02D1	0x3005      	MOVLW      5
0x02D2	0x0746      	ADDWF      ajusta_relogio_i_L0, 0
0x02D3	0x00C8      	MOVWF      FARG_Lcd_Chr_column
0x02D4	0x3020      	MOVLW      32
0x02D5	0x00C9      	MOVWF      FARG_Lcd_Chr_out_char
0x02D6	0x20B8      	CALL       _Lcd_Chr
0x02D7	0x0AC6      	INCF       ajusta_relogio_i_L0, 1
0x02D8	0x2ACB      	GOTO       L_ajusta_relogio36
L_ajusta_relogio37:
;clockwork.c,244 :: 		break;
0x02D9	0x2AF2      	GOTO       L_ajusta_relogio25
;clockwork.c,245 :: 		} //end switch ctrl_watch
L_ajusta_relogio24:
0x02DA	0x083F      	MOVF       _ctrl_watch, 0
0x02DB	0x3A00      	XORLW      0
0x02DC	0x1903      	BTFSC      STATUS, 2
0x02DD	0x2A11      	GOTO       L_ajusta_relogio26
0x02DE	0x083F      	MOVF       _ctrl_watch, 0
0x02DF	0x3A01      	XORLW      1
0x02E0	0x1903      	BTFSC      STATUS, 2
0x02E1	0x2A37      	GOTO       L_ajusta_relogio27
0x02E2	0x083F      	MOVF       _ctrl_watch, 0
0x02E3	0x3A02      	XORLW      2
0x02E4	0x1903      	BTFSC      STATUS, 2
0x02E5	0x2A56      	GOTO       L_ajusta_relogio28
0x02E6	0x083F      	MOVF       _ctrl_watch, 0
0x02E7	0x3A03      	XORLW      3
0x02E8	0x1903      	BTFSC      STATUS, 2
0x02E9	0x2A75      	GOTO       L_ajusta_relogio29
0x02EA	0x083F      	MOVF       _ctrl_watch, 0
0x02EB	0x3A04      	XORLW      4
0x02EC	0x1903      	BTFSC      STATUS, 2
0x02ED	0x2A9B      	GOTO       L_ajusta_relogio30
0x02EE	0x083F      	MOVF       _ctrl_watch, 0
0x02EF	0x3A05      	XORLW      5
0x02F0	0x1903      	BTFSC      STATUS, 2
0x02F1	0x2AC3      	GOTO       L_ajusta_relogio35
L_ajusta_relogio25:
;clockwork.c,248 :: 		if(plus && plus_f)                  //Botão 'mais' foi solto e a flag foi setada?
0x02F2	0x1C05      	BTFSS      RA0_bit, 0
0x02F3	0x2B24      	GOTO       L_ajusta_relogio41
0x02F4	0x1C40      	BTFSS      _flagsA, 0
0x02F5	0x2B24      	GOTO       L_ajusta_relogio41
L__ajusta_relogio123:
;clockwork.c,250 :: 		plus_f = 0x00;                   //Limpa a flag07
0x02F6	0x1040      	BCF        _flagsA, 0
;clockwork.c,252 :: 		switch(ctrl_watch)               //Switch na variável de controle
0x02F7	0x2B14      	GOTO       L_ajusta_relogio42
;clockwork.c,254 :: 		case 0x00:                     //Caso 0, libera ajuste das horas, incremento de unidades
L_ajusta_relogio44:
;clockwork.c,255 :: 		horas++;
0x02F8	0x0AA3      	INCF       _horas, 1
;clockwork.c,256 :: 		if(horas > 0x17) horas = 0x00;
0x02F9	0x0823      	MOVF       _horas, 0
0x02FA	0x3C17      	SUBLW      23
0x02FB	0x1803      	BTFSC      STATUS, 0
0x02FC	0x2AFE      	GOTO       L_ajusta_relogio45
0x02FD	0x01A3      	CLRF       _horas
L_ajusta_relogio45:
;clockwork.c,257 :: 		break;
0x02FE	0x2B24      	GOTO       L_ajusta_relogio43
;clockwork.c,258 :: 		case 0x01:                     //Caso 1, libera ajuste dos minutos, incremento de unidades
L_ajusta_relogio46:
;clockwork.c,259 :: 		minutos++;
0x02FF	0x0AA5      	INCF       _minutos, 1
;clockwork.c,260 :: 		if(minutos > 0x3b) minutos = 0x00;
0x0300	0x0825      	MOVF       _minutos, 0
0x0301	0x3C3B      	SUBLW      59
0x0302	0x1803      	BTFSC      STATUS, 0
0x0303	0x2B05      	GOTO       L_ajusta_relogio47
0x0304	0x01A5      	CLRF       _minutos
L_ajusta_relogio47:
;clockwork.c,261 :: 		break;
0x0305	0x2B24      	GOTO       L_ajusta_relogio43
;clockwork.c,262 :: 		case 0x02:                     //Caso 2, libera ajuste dos segundos, incremento de unidades
L_ajusta_relogio48:
;clockwork.c,263 :: 		segundos++;
0x0306	0x0AA2      	INCF       _segundos, 1
;clockwork.c,264 :: 		if(segundos > 0x3b) segundos = 0x00;
0x0307	0x0822      	MOVF       _segundos, 0
0x0308	0x3C3B      	SUBLW      59
0x0309	0x1803      	BTFSC      STATUS, 0
0x030A	0x2B0C      	GOTO       L_ajusta_relogio49
0x030B	0x01A2      	CLRF       _segundos
L_ajusta_relogio49:
;clockwork.c,265 :: 		break;
0x030C	0x2B24      	GOTO       L_ajusta_relogio43
;clockwork.c,266 :: 		case 0x03:                     //Caso 3, libera ajuste dos dias, incremento de unidades
L_ajusta_relogio50:
;clockwork.c,267 :: 		dias++;
0x030D	0x0ABD      	INCF       _dias, 1
;clockwork.c,268 :: 		if(dias > 0x06) dias = 0x00;
0x030E	0x083D      	MOVF       _dias, 0
0x030F	0x3C06      	SUBLW      6
0x0310	0x1803      	BTFSC      STATUS, 0
0x0311	0x2B13      	GOTO       L_ajusta_relogio51
0x0312	0x01BD      	CLRF       _dias
L_ajusta_relogio51:
;clockwork.c,269 :: 		break;
0x0313	0x2B24      	GOTO       L_ajusta_relogio43
;clockwork.c,270 :: 		} //end switch
L_ajusta_relogio42:
0x0314	0x083F      	MOVF       _ctrl_watch, 0
0x0315	0x3A00      	XORLW      0
0x0316	0x1903      	BTFSC      STATUS, 2
0x0317	0x2AF8      	GOTO       L_ajusta_relogio44
0x0318	0x083F      	MOVF       _ctrl_watch, 0
0x0319	0x3A01      	XORLW      1
0x031A	0x1903      	BTFSC      STATUS, 2
0x031B	0x2AFF      	GOTO       L_ajusta_relogio46
0x031C	0x083F      	MOVF       _ctrl_watch, 0
0x031D	0x3A02      	XORLW      2
0x031E	0x1903      	BTFSC      STATUS, 2
0x031F	0x2B06      	GOTO       L_ajusta_relogio48
0x0320	0x083F      	MOVF       _ctrl_watch, 0
0x0321	0x3A03      	XORLW      3
0x0322	0x1903      	BTFSC      STATUS, 2
0x0323	0x2B0D      	GOTO       L_ajusta_relogio50
L_ajusta_relogio43:
;clockwork.c,271 :: 		} //end if plus
L_ajusta_relogio41:
;clockwork.c,273 :: 		if(plus10 && plus10_f)              //Botão 'mais10' solto e a flag foi setada?
0x0324	0x1C85      	BTFSS      RA1_bit, 1
0x0325	0x2B62      	GOTO       L_ajusta_relogio54
0x0326	0x1CC0      	BTFSS      _flagsA, 1
0x0327	0x2B62      	GOTO       L_ajusta_relogio54
L__ajusta_relogio122:
;clockwork.c,275 :: 		plus10_f = 0x00;                 //Limpa a flag06
0x0328	0x10C0      	BCF        _flagsA, 1
;clockwork.c,277 :: 		switch(ctrl_watch)        //Switch na variável de controle
0x0329	0x2B52      	GOTO       L_ajusta_relogio55
;clockwork.c,279 :: 		case 0x00:
L_ajusta_relogio57:
;clockwork.c,280 :: 		horas = horas + 10;      //Caso 0, libera ajuste das horas, incremento de dezenas
0x032A	0x300A      	MOVLW      10
0x032B	0x0723      	ADDWF      _horas, 0
0x032C	0x00F1      	MOVWF      R1
0x032D	0x0871      	MOVF       R1, 0
0x032E	0x00A3      	MOVWF      _horas
;clockwork.c,281 :: 		if(horas > 0x17) horas = 0x00;
0x032F	0x0871      	MOVF       R1, 0
0x0330	0x3C17      	SUBLW      23
0x0331	0x1803      	BTFSC      STATUS, 0
0x0332	0x2B34      	GOTO       L_ajusta_relogio58
0x0333	0x01A3      	CLRF       _horas
L_ajusta_relogio58:
;clockwork.c,282 :: 		break;
0x0334	0x2B62      	GOTO       L_ajusta_relogio56
;clockwork.c,283 :: 		case 0x01:                     //Caso 1, libera ajuste dos minutos, incremento de dezenas
L_ajusta_relogio59:
;clockwork.c,284 :: 		minutos = minutos + 10;
0x0335	0x300A      	MOVLW      10
0x0336	0x0725      	ADDWF      _minutos, 0
0x0337	0x00F1      	MOVWF      R1
0x0338	0x0871      	MOVF       R1, 0
0x0339	0x00A5      	MOVWF      _minutos
;clockwork.c,285 :: 		if(minutos > 0x3b) minutos = 0x00;
0x033A	0x0871      	MOVF       R1, 0
0x033B	0x3C3B      	SUBLW      59
0x033C	0x1803      	BTFSC      STATUS, 0
0x033D	0x2B3F      	GOTO       L_ajusta_relogio60
0x033E	0x01A5      	CLRF       _minutos
L_ajusta_relogio60:
;clockwork.c,286 :: 		break;
0x033F	0x2B62      	GOTO       L_ajusta_relogio56
;clockwork.c,287 :: 		case 0x02:                     //Caso 2, libera ajuste dos segundos, incremento de dezenas
L_ajusta_relogio61:
;clockwork.c,288 :: 		segundos = segundos + 10;
0x0340	0x300A      	MOVLW      10
0x0341	0x0722      	ADDWF      _segundos, 0
0x0342	0x00F1      	MOVWF      R1
0x0343	0x0871      	MOVF       R1, 0
0x0344	0x00A2      	MOVWF      _segundos
;clockwork.c,289 :: 		if(segundos > 0x3b) segundos = 0x00;
0x0345	0x0871      	MOVF       R1, 0
0x0346	0x3C3B      	SUBLW      59
0x0347	0x1803      	BTFSC      STATUS, 0
0x0348	0x2B4A      	GOTO       L_ajusta_relogio62
0x0349	0x01A2      	CLRF       _segundos
L_ajusta_relogio62:
;clockwork.c,290 :: 		break;
0x034A	0x2B62      	GOTO       L_ajusta_relogio56
;clockwork.c,291 :: 		case 0x03:                     //Caso 3, libera ajuste dos dias, incremento de unidades
L_ajusta_relogio63:
;clockwork.c,292 :: 		dias++;
0x034B	0x0ABD      	INCF       _dias, 1
;clockwork.c,293 :: 		if(dias > 0x06) dias = 0x00;
0x034C	0x083D      	MOVF       _dias, 0
0x034D	0x3C06      	SUBLW      6
0x034E	0x1803      	BTFSC      STATUS, 0
0x034F	0x2B51      	GOTO       L_ajusta_relogio64
0x0350	0x01BD      	CLRF       _dias
L_ajusta_relogio64:
;clockwork.c,294 :: 		break;
0x0351	0x2B62      	GOTO       L_ajusta_relogio56
;clockwork.c,295 :: 		} //end switch
L_ajusta_relogio55:
0x0352	0x083F      	MOVF       _ctrl_watch, 0
0x0353	0x3A00      	XORLW      0
0x0354	0x1903      	BTFSC      STATUS, 2
0x0355	0x2B2A      	GOTO       L_ajusta_relogio57
0x0356	0x083F      	MOVF       _ctrl_watch, 0
0x0357	0x3A01      	XORLW      1
0x0358	0x1903      	BTFSC      STATUS, 2
0x0359	0x2B35      	GOTO       L_ajusta_relogio59
0x035A	0x083F      	MOVF       _ctrl_watch, 0
0x035B	0x3A02      	XORLW      2
0x035C	0x1903      	BTFSC      STATUS, 2
0x035D	0x2B40      	GOTO       L_ajusta_relogio61
0x035E	0x083F      	MOVF       _ctrl_watch, 0
0x035F	0x3A03      	XORLW      3
0x0360	0x1903      	BTFSC      STATUS, 2
0x0361	0x2B4B      	GOTO       L_ajusta_relogio63
L_ajusta_relogio56:
;clockwork.c,297 :: 		} //end if plus10
L_ajusta_relogio54:
;clockwork.c,299 :: 		} //end ajusta_relogio
0x0362	0x0008      	RETURN
; end of _ajusta_relogio
_ajusta_alarme:
;clockwork.c,374 :: 		void ajusta_alarme()                           //Função para ajuste do despertador
;clockwork.c,378 :: 		char i = 0;                               //Variável para iterações
0x0363	0x1283      	BCF        STATUS, 5
0x0364	0x1303      	BCF        STATUS, 6
0x0365	0x01C6      	CLRF       ajusta_alarme_i_L0
;clockwork.c,380 :: 		if(!plus)       plus_f      = 0x01;       //Se pressionar o botão 'mais', seta a flag
0x0366	0x1805      	BTFSC      RA0_bit, 0
0x0367	0x2B69      	GOTO       L_ajusta_alarme74
0x0368	0x1440      	BSF        _flagsA, 0
L_ajusta_alarme74:
;clockwork.c,381 :: 		if(!plus10)     plus10_f    = 0x01;       //Se pressionar o botão 'mais 10', seta a flag
0x0369	0x1885      	BTFSC      RA1_bit, 1
0x036A	0x2B6C      	GOTO       L_ajusta_alarme75
0x036B	0x14C0      	BSF        _flagsA, 1
L_ajusta_alarme75:
;clockwork.c,382 :: 		if(!adj_watch)  adj_watch_f = 0x01;       //Se pressionar o botão 'ajuste das horas', seta a flag
0x036C	0x1905      	BTFSC      RA2_bit, 2
0x036D	0x2B6F      	GOTO       L_ajusta_alarme76
0x036E	0x1540      	BSF        _flagsA, 2
L_ajusta_alarme76:
;clockwork.c,385 :: 		if(adj_watch && adj_watch_f)              //Soltou botão de ajuste e flag setada?
0x036F	0x1D05      	BTFSS      RA2_bit, 2
0x0370	0x2B7A      	GOTO       L_ajusta_alarme79
0x0371	0x1D40      	BTFSS      _flagsA, 2
0x0372	0x2B7A      	GOTO       L_ajusta_alarme79
L__ajusta_alarme127:
;clockwork.c,387 :: 		adj_watch_f = 0x00;                    //Limpa flag05
0x0373	0x1140      	BCF        _flagsA, 2
;clockwork.c,388 :: 		ctrl_watch++;                          //Incrementa variável de controle do ajuste
0x0374	0x0ABF      	INCF       _ctrl_watch, 1
;clockwork.c,391 :: 		if(ctrl_watch > 0x05) ctrl_watch = 0x00;
0x0375	0x083F      	MOVF       _ctrl_watch, 0
0x0376	0x3C05      	SUBLW      5
0x0377	0x1803      	BTFSC      STATUS, 0
0x0378	0x2B7A      	GOTO       L_ajusta_alarme80
0x0379	0x01BF      	CLRF       _ctrl_watch
L_ajusta_alarme80:
;clockwork.c,393 :: 		} //end if adj_watch
L_ajusta_alarme79:
;clockwork.c,395 :: 		switch(ctrl_watch)                        //Switch da variável de controle de ajuste das horas
0x037A	0x2C44      	GOTO       L_ajusta_alarme81
;clockwork.c,397 :: 		case 0x00:                             //Caso seja igual a 0
L_ajusta_alarme83:
;clockwork.c,398 :: 		Lcd_Chr(1,1,' ');
0x037B	0x3001      	MOVLW      1
0x037C	0x00C7      	MOVWF      FARG_Lcd_Chr_row
0x037D	0x3001      	MOVLW      1
0x037E	0x00C8      	MOVWF      FARG_Lcd_Chr_column
0x037F	0x3020      	MOVLW      32
0x0380	0x00C9      	MOVWF      FARG_Lcd_Chr_out_char
0x0381	0x20B8      	CALL       _Lcd_Chr
;clockwork.c,399 :: 		Lcd_Chr(2,5,'^');              //Demonstra ajuste das horas
0x0382	0x3002      	MOVLW      2
0x0383	0x00C7      	MOVWF      FARG_Lcd_Chr_row
0x0384	0x3005      	MOVLW      5
0x0385	0x00C8      	MOVWF      FARG_Lcd_Chr_column
0x0386	0x305E      	MOVLW      94
0x0387	0x00C9      	MOVWF      FARG_Lcd_Chr_out_char
0x0388	0x20B8      	CALL       _Lcd_Chr
;clockwork.c,400 :: 		Lcd_Chr_Cp('^');
0x0389	0x305E      	MOVLW      94
0x038A	0x00C7      	MOVWF      FARG_Lcd_Chr_CP_out_char
0x038B	0x2083      	CALL       _Lcd_Chr_CP
;clockwork.c,401 :: 		Lcd_Chr(2,8,' ');
0x038C	0x3002      	MOVLW      2
0x038D	0x00C7      	MOVWF      FARG_Lcd_Chr_row
0x038E	0x3008      	MOVLW      8
0x038F	0x00C8      	MOVWF      FARG_Lcd_Chr_column
0x0390	0x3020      	MOVLW      32
0x0391	0x00C9      	MOVWF      FARG_Lcd_Chr_out_char
0x0392	0x20B8      	CALL       _Lcd_Chr
;clockwork.c,402 :: 		Lcd_Chr_Cp(' ');
0x0393	0x3020      	MOVLW      32
0x0394	0x00C7      	MOVWF      FARG_Lcd_Chr_CP_out_char
0x0395	0x2083      	CALL       _Lcd_Chr_CP
;clockwork.c,403 :: 		Lcd_Chr(2,11,' ');
0x0396	0x3002      	MOVLW      2
0x0397	0x00C7      	MOVWF      FARG_Lcd_Chr_row
0x0398	0x300B      	MOVLW      11
0x0399	0x00C8      	MOVWF      FARG_Lcd_Chr_column
0x039A	0x3020      	MOVLW      32
0x039B	0x00C9      	MOVWF      FARG_Lcd_Chr_out_char
0x039C	0x20B8      	CALL       _Lcd_Chr
;clockwork.c,404 :: 		Lcd_Chr_Cp(' ');
0x039D	0x3020      	MOVLW      32
0x039E	0x00C7      	MOVWF      FARG_Lcd_Chr_CP_out_char
0x039F	0x2083      	CALL       _Lcd_Chr_CP
;clockwork.c,406 :: 		break;
0x03A0	0x2C5C      	GOTO       L_ajusta_alarme82
;clockwork.c,407 :: 		case 0x01:                             //Caso seja igual a 1
L_ajusta_alarme84:
;clockwork.c,408 :: 		Lcd_Chr(2,5,' ');
0x03A1	0x3002      	MOVLW      2
0x03A2	0x00C7      	MOVWF      FARG_Lcd_Chr_row
0x03A3	0x3005      	MOVLW      5
0x03A4	0x00C8      	MOVWF      FARG_Lcd_Chr_column
0x03A5	0x3020      	MOVLW      32
0x03A6	0x00C9      	MOVWF      FARG_Lcd_Chr_out_char
0x03A7	0x20B8      	CALL       _Lcd_Chr
;clockwork.c,409 :: 		Lcd_Chr_Cp(' ');
0x03A8	0x3020      	MOVLW      32
0x03A9	0x00C7      	MOVWF      FARG_Lcd_Chr_CP_out_char
0x03AA	0x2083      	CALL       _Lcd_Chr_CP
;clockwork.c,410 :: 		Lcd_Chr(2,8,'^');              //Demonstra ajuste dos minutos
0x03AB	0x3002      	MOVLW      2
0x03AC	0x00C7      	MOVWF      FARG_Lcd_Chr_row
0x03AD	0x3008      	MOVLW      8
0x03AE	0x00C8      	MOVWF      FARG_Lcd_Chr_column
0x03AF	0x305E      	MOVLW      94
0x03B0	0x00C9      	MOVWF      FARG_Lcd_Chr_out_char
0x03B1	0x20B8      	CALL       _Lcd_Chr
;clockwork.c,411 :: 		Lcd_Chr_Cp('^');
0x03B2	0x305E      	MOVLW      94
0x03B3	0x00C7      	MOVWF      FARG_Lcd_Chr_CP_out_char
0x03B4	0x2083      	CALL       _Lcd_Chr_CP
;clockwork.c,412 :: 		Lcd_Chr(2,11,' ');
0x03B5	0x3002      	MOVLW      2
0x03B6	0x00C7      	MOVWF      FARG_Lcd_Chr_row
0x03B7	0x300B      	MOVLW      11
0x03B8	0x00C8      	MOVWF      FARG_Lcd_Chr_column
0x03B9	0x3020      	MOVLW      32
0x03BA	0x00C9      	MOVWF      FARG_Lcd_Chr_out_char
0x03BB	0x20B8      	CALL       _Lcd_Chr
;clockwork.c,413 :: 		Lcd_Chr_Cp(' ');
0x03BC	0x3020      	MOVLW      32
0x03BD	0x00C7      	MOVWF      FARG_Lcd_Chr_CP_out_char
0x03BE	0x2083      	CALL       _Lcd_Chr_CP
;clockwork.c,414 :: 		break;
0x03BF	0x2C5C      	GOTO       L_ajusta_alarme82
;clockwork.c,415 :: 		case 0x02:                             //Caso seja igual a 2
L_ajusta_alarme85:
;clockwork.c,416 :: 		Lcd_Chr(2,5,' ');
0x03C0	0x3002      	MOVLW      2
0x03C1	0x00C7      	MOVWF      FARG_Lcd_Chr_row
0x03C2	0x3005      	MOVLW      5
0x03C3	0x00C8      	MOVWF      FARG_Lcd_Chr_column
0x03C4	0x3020      	MOVLW      32
0x03C5	0x00C9      	MOVWF      FARG_Lcd_Chr_out_char
0x03C6	0x20B8      	CALL       _Lcd_Chr
;clockwork.c,417 :: 		Lcd_Chr_Cp(' ');
0x03C7	0x3020      	MOVLW      32
0x03C8	0x00C7      	MOVWF      FARG_Lcd_Chr_CP_out_char
0x03C9	0x2083      	CALL       _Lcd_Chr_CP
;clockwork.c,418 :: 		Lcd_Chr(2,8,' ');
0x03CA	0x3002      	MOVLW      2
0x03CB	0x00C7      	MOVWF      FARG_Lcd_Chr_row
0x03CC	0x3008      	MOVLW      8
0x03CD	0x00C8      	MOVWF      FARG_Lcd_Chr_column
0x03CE	0x3020      	MOVLW      32
0x03CF	0x00C9      	MOVWF      FARG_Lcd_Chr_out_char
0x03D0	0x20B8      	CALL       _Lcd_Chr
;clockwork.c,419 :: 		Lcd_Chr_Cp(' ');
0x03D1	0x3020      	MOVLW      32
0x03D2	0x00C7      	MOVWF      FARG_Lcd_Chr_CP_out_char
0x03D3	0x2083      	CALL       _Lcd_Chr_CP
;clockwork.c,420 :: 		Lcd_Chr(2,11,'^');             //Demonstra ajuste dos segundos
0x03D4	0x3002      	MOVLW      2
0x03D5	0x00C7      	MOVWF      FARG_Lcd_Chr_row
0x03D6	0x300B      	MOVLW      11
0x03D7	0x00C8      	MOVWF      FARG_Lcd_Chr_column
0x03D8	0x305E      	MOVLW      94
0x03D9	0x00C9      	MOVWF      FARG_Lcd_Chr_out_char
0x03DA	0x20B8      	CALL       _Lcd_Chr
;clockwork.c,421 :: 		Lcd_Chr_Cp('^');
0x03DB	0x305E      	MOVLW      94
0x03DC	0x00C7      	MOVWF      FARG_Lcd_Chr_CP_out_char
0x03DD	0x2083      	CALL       _Lcd_Chr_CP
;clockwork.c,422 :: 		break;
0x03DE	0x2C5C      	GOTO       L_ajusta_alarme82
;clockwork.c,423 :: 		case 0x03:                             //Caso seja igual a 3
L_ajusta_alarme86:
;clockwork.c,424 :: 		Lcd_Chr(2,5,' ');              //Demonstra ajuste dos dias
0x03DF	0x3002      	MOVLW      2
0x03E0	0x00C7      	MOVWF      FARG_Lcd_Chr_row
0x03E1	0x3005      	MOVLW      5
0x03E2	0x00C8      	MOVWF      FARG_Lcd_Chr_column
0x03E3	0x3020      	MOVLW      32
0x03E4	0x00C9      	MOVWF      FARG_Lcd_Chr_out_char
0x03E5	0x20B8      	CALL       _Lcd_Chr
;clockwork.c,425 :: 		Lcd_Chr_Cp(' ');
0x03E6	0x3020      	MOVLW      32
0x03E7	0x00C7      	MOVWF      FARG_Lcd_Chr_CP_out_char
0x03E8	0x2083      	CALL       _Lcd_Chr_CP
;clockwork.c,426 :: 		Lcd_Chr(2,8,' ');
0x03E9	0x3002      	MOVLW      2
0x03EA	0x00C7      	MOVWF      FARG_Lcd_Chr_row
0x03EB	0x3008      	MOVLW      8
0x03EC	0x00C8      	MOVWF      FARG_Lcd_Chr_column
0x03ED	0x3020      	MOVLW      32
0x03EE	0x00C9      	MOVWF      FARG_Lcd_Chr_out_char
0x03EF	0x20B8      	CALL       _Lcd_Chr
;clockwork.c,427 :: 		Lcd_Chr_Cp(' ');
0x03F0	0x3020      	MOVLW      32
0x03F1	0x00C7      	MOVWF      FARG_Lcd_Chr_CP_out_char
0x03F2	0x2083      	CALL       _Lcd_Chr_CP
;clockwork.c,428 :: 		Lcd_Chr(2,11,' ');
0x03F3	0x3002      	MOVLW      2
0x03F4	0x00C7      	MOVWF      FARG_Lcd_Chr_row
0x03F5	0x300B      	MOVLW      11
0x03F6	0x00C8      	MOVWF      FARG_Lcd_Chr_column
0x03F7	0x3020      	MOVLW      32
0x03F8	0x00C9      	MOVWF      FARG_Lcd_Chr_out_char
0x03F9	0x20B8      	CALL       _Lcd_Chr
;clockwork.c,429 :: 		Lcd_Chr_Cp(' ');
0x03FA	0x3020      	MOVLW      32
0x03FB	0x00C7      	MOVWF      FARG_Lcd_Chr_CP_out_char
0x03FC	0x2083      	CALL       _Lcd_Chr_CP
;clockwork.c,430 :: 		Lcd_Chr(2,14,'^');
0x03FD	0x3002      	MOVLW      2
0x03FE	0x00C7      	MOVWF      FARG_Lcd_Chr_row
0x03FF	0x300E      	MOVLW      14
0x0400	0x00C8      	MOVWF      FARG_Lcd_Chr_column
0x0401	0x305E      	MOVLW      94
0x0402	0x00C9      	MOVWF      FARG_Lcd_Chr_out_char
0x0403	0x20B8      	CALL       _Lcd_Chr
;clockwork.c,431 :: 		break;
0x0404	0x2C5C      	GOTO       L_ajusta_alarme82
;clockwork.c,432 :: 		case 0x04:
L_ajusta_alarme87:
;clockwork.c,433 :: 		despertar();                                   //Desperta!
0x0405	0x209C      	CALL       _despertar
;clockwork.c,434 :: 		if(minutos == (a_minutos + 10))
0x0406	0x300A      	MOVLW      10
0x0407	0x0724      	ADDWF      _a_minutos, 0
0x0408	0x00F1      	MOVWF      R1
0x0409	0x01F2      	CLRF       R1+1
0x040A	0x1803      	BTFSC      STATUS, 0
0x040B	0x0AF2      	INCF       R1+1, 1
0x040C	0x3000      	MOVLW      0
0x040D	0x0672      	XORWF      R1+1, 0
0x040E	0x1D03      	BTFSS      STATUS, 2
0x040F	0x2C12      	GOTO       L__ajusta_alarme129
0x0410	0x0871      	MOVF       R1, 0
0x0411	0x0625      	XORWF      _minutos, 0
L__ajusta_alarme129:
0x0412	0x1D03      	BTFSS      STATUS, 2
0x0413	0x2C16      	GOTO       L_ajusta_alarme88
;clockwork.c,436 :: 		relay = 0x00;                 //Desliga relé após 10 minutos
0x0414	0x1206      	BCF        RB4_bit, 4
;clockwork.c,437 :: 		led   = 0x00;                 //Desliga led  após 10 minutos
0x0415	0x1286      	BCF        RB5_bit, 5
;clockwork.c,439 :: 		}
L_ajusta_alarme88:
;clockwork.c,440 :: 		Lcd_Chr(1,1,'D');
0x0416	0x3001      	MOVLW      1
0x0417	0x00C7      	MOVWF      FARG_Lcd_Chr_row
0x0418	0x3001      	MOVLW      1
0x0419	0x00C8      	MOVWF      FARG_Lcd_Chr_column
0x041A	0x3044      	MOVLW      68
0x041B	0x00C9      	MOVWF      FARG_Lcd_Chr_out_char
0x041C	0x20B8      	CALL       _Lcd_Chr
;clockwork.c,441 :: 		for(i = 0; i<12; i++) Lcd_Chr(2,i+5,' '); //Limpa display 'manualmente' a partir da quinta coluna
0x041D	0x01C6      	CLRF       ajusta_alarme_i_L0
L_ajusta_alarme89:
0x041E	0x300C      	MOVLW      12
0x041F	0x0246      	SUBWF      ajusta_alarme_i_L0, 0
0x0420	0x1803      	BTFSC      STATUS, 0
0x0421	0x2C2C      	GOTO       L_ajusta_alarme90
0x0422	0x3002      	MOVLW      2
0x0423	0x00C7      	MOVWF      FARG_Lcd_Chr_row
0x0424	0x3005      	MOVLW      5
0x0425	0x0746      	ADDWF      ajusta_alarme_i_L0, 0
0x0426	0x00C8      	MOVWF      FARG_Lcd_Chr_column
0x0427	0x3020      	MOVLW      32
0x0428	0x00C9      	MOVWF      FARG_Lcd_Chr_out_char
0x0429	0x20B8      	CALL       _Lcd_Chr
0x042A	0x0AC6      	INCF       ajusta_alarme_i_L0, 1
0x042B	0x2C1E      	GOTO       L_ajusta_alarme89
L_ajusta_alarme90:
;clockwork.c,442 :: 		break;
0x042C	0x2C5C      	GOTO       L_ajusta_alarme82
;clockwork.c,443 :: 		case 0x05:                             //Caso seja igual a 5
L_ajusta_alarme92:
;clockwork.c,444 :: 		Lcd_Chr(1,1,' ');
0x042D	0x3001      	MOVLW      1
0x042E	0x00C7      	MOVWF      FARG_Lcd_Chr_row
0x042F	0x3001      	MOVLW      1
0x0430	0x00C8      	MOVWF      FARG_Lcd_Chr_column
0x0431	0x3020      	MOVLW      32
0x0432	0x00C9      	MOVWF      FARG_Lcd_Chr_out_char
0x0433	0x20B8      	CALL       _Lcd_Chr
;clockwork.c,445 :: 		for(i = 0; i<12; i++) Lcd_Chr(2,i+5,' '); //Limpa display 'manualmente' a partir da quinta coluna
0x0434	0x01C6      	CLRF       ajusta_alarme_i_L0
L_ajusta_alarme93:
0x0435	0x300C      	MOVLW      12
0x0436	0x0246      	SUBWF      ajusta_alarme_i_L0, 0
0x0437	0x1803      	BTFSC      STATUS, 0
0x0438	0x2C43      	GOTO       L_ajusta_alarme94
0x0439	0x3002      	MOVLW      2
0x043A	0x00C7      	MOVWF      FARG_Lcd_Chr_row
0x043B	0x3005      	MOVLW      5
0x043C	0x0746      	ADDWF      ajusta_alarme_i_L0, 0
0x043D	0x00C8      	MOVWF      FARG_Lcd_Chr_column
0x043E	0x3020      	MOVLW      32
0x043F	0x00C9      	MOVWF      FARG_Lcd_Chr_out_char
0x0440	0x20B8      	CALL       _Lcd_Chr
0x0441	0x0AC6      	INCF       ajusta_alarme_i_L0, 1
0x0442	0x2C35      	GOTO       L_ajusta_alarme93
L_ajusta_alarme94:
;clockwork.c,446 :: 		break;
0x0443	0x2C5C      	GOTO       L_ajusta_alarme82
;clockwork.c,447 :: 		}
L_ajusta_alarme81:
0x0444	0x083F      	MOVF       _ctrl_watch, 0
0x0445	0x3A00      	XORLW      0
0x0446	0x1903      	BTFSC      STATUS, 2
0x0447	0x2B7B      	GOTO       L_ajusta_alarme83
0x0448	0x083F      	MOVF       _ctrl_watch, 0
0x0449	0x3A01      	XORLW      1
0x044A	0x1903      	BTFSC      STATUS, 2
0x044B	0x2BA1      	GOTO       L_ajusta_alarme84
0x044C	0x083F      	MOVF       _ctrl_watch, 0
0x044D	0x3A02      	XORLW      2
0x044E	0x1903      	BTFSC      STATUS, 2
0x044F	0x2BC0      	GOTO       L_ajusta_alarme85
0x0450	0x083F      	MOVF       _ctrl_watch, 0
0x0451	0x3A03      	XORLW      3
0x0452	0x1903      	BTFSC      STATUS, 2
0x0453	0x2BDF      	GOTO       L_ajusta_alarme86
0x0454	0x083F      	MOVF       _ctrl_watch, 0
0x0455	0x3A04      	XORLW      4
0x0456	0x1903      	BTFSC      STATUS, 2
0x0457	0x2C05      	GOTO       L_ajusta_alarme87
0x0458	0x083F      	MOVF       _ctrl_watch, 0
0x0459	0x3A05      	XORLW      5
0x045A	0x1903      	BTFSC      STATUS, 2
0x045B	0x2C2D      	GOTO       L_ajusta_alarme92
L_ajusta_alarme82:
;clockwork.c,450 :: 		if(plus && plus_f)                  //Botão 'mais' foi solto e a flag foi setada?
0x045C	0x1C05      	BTFSS      RA0_bit, 0
0x045D	0x2C8E      	GOTO       L_ajusta_alarme98
0x045E	0x1C40      	BTFSS      _flagsA, 0
0x045F	0x2C8E      	GOTO       L_ajusta_alarme98
L__ajusta_alarme126:
;clockwork.c,452 :: 		plus_f = 0x00;                   //Limpa a flag07
0x0460	0x1040      	BCF        _flagsA, 0
;clockwork.c,454 :: 		switch(ctrl_watch)               //Switch na variável de controle
0x0461	0x2C7E      	GOTO       L_ajusta_alarme99
;clockwork.c,456 :: 		case 0x00:                     //Caso 0, libera ajuste das horas, incremento de unidades
L_ajusta_alarme101:
;clockwork.c,457 :: 		a_horas++;
0x0462	0x0AA6      	INCF       _a_horas, 1
;clockwork.c,458 :: 		if(a_horas > 0x17) a_horas = 0x00;
0x0463	0x0826      	MOVF       _a_horas, 0
0x0464	0x3C17      	SUBLW      23
0x0465	0x1803      	BTFSC      STATUS, 0
0x0466	0x2C68      	GOTO       L_ajusta_alarme102
0x0467	0x01A6      	CLRF       _a_horas
L_ajusta_alarme102:
;clockwork.c,459 :: 		break;
0x0468	0x2C8E      	GOTO       L_ajusta_alarme100
;clockwork.c,460 :: 		case 0x01:                     //Caso 1, libera ajuste dos minutos, incremento de unidades
L_ajusta_alarme103:
;clockwork.c,461 :: 		a_minutos++;
0x0469	0x0AA4      	INCF       _a_minutos, 1
;clockwork.c,462 :: 		if(a_minutos > 0x3b) a_minutos = 0x00;
0x046A	0x0824      	MOVF       _a_minutos, 0
0x046B	0x3C3B      	SUBLW      59
0x046C	0x1803      	BTFSC      STATUS, 0
0x046D	0x2C6F      	GOTO       L_ajusta_alarme104
0x046E	0x01A4      	CLRF       _a_minutos
L_ajusta_alarme104:
;clockwork.c,463 :: 		break;
0x046F	0x2C8E      	GOTO       L_ajusta_alarme100
;clockwork.c,464 :: 		case 0x02:                     //Caso 2, libera ajuste dos segundos, incremento de unidades
L_ajusta_alarme105:
;clockwork.c,465 :: 		a_segundos++;
0x0470	0x0AA1      	INCF       _a_segundos, 1
;clockwork.c,466 :: 		if(a_segundos > 0x3b) a_segundos = 0x00;
0x0471	0x0821      	MOVF       _a_segundos, 0
0x0472	0x3C3B      	SUBLW      59
0x0473	0x1803      	BTFSC      STATUS, 0
0x0474	0x2C76      	GOTO       L_ajusta_alarme106
0x0475	0x01A1      	CLRF       _a_segundos
L_ajusta_alarme106:
;clockwork.c,467 :: 		break;
0x0476	0x2C8E      	GOTO       L_ajusta_alarme100
;clockwork.c,468 :: 		case 0x03:                     //Caso 3, libera ajuste dos dias, incremento de unidades
L_ajusta_alarme107:
;clockwork.c,469 :: 		a_dias++;
0x0477	0x0ABC      	INCF       _a_dias, 1
;clockwork.c,470 :: 		if(a_dias > 0x06) a_dias = 0x00;
0x0478	0x083C      	MOVF       _a_dias, 0
0x0479	0x3C06      	SUBLW      6
0x047A	0x1803      	BTFSC      STATUS, 0
0x047B	0x2C7D      	GOTO       L_ajusta_alarme108
0x047C	0x01BC      	CLRF       _a_dias
L_ajusta_alarme108:
;clockwork.c,471 :: 		break;
0x047D	0x2C8E      	GOTO       L_ajusta_alarme100
;clockwork.c,472 :: 		} //end switch
L_ajusta_alarme99:
0x047E	0x083F      	MOVF       _ctrl_watch, 0
0x047F	0x3A00      	XORLW      0
0x0480	0x1903      	BTFSC      STATUS, 2
0x0481	0x2C62      	GOTO       L_ajusta_alarme101
0x0482	0x083F      	MOVF       _ctrl_watch, 0
0x0483	0x3A01      	XORLW      1
0x0484	0x1903      	BTFSC      STATUS, 2
0x0485	0x2C69      	GOTO       L_ajusta_alarme103
0x0486	0x083F      	MOVF       _ctrl_watch, 0
0x0487	0x3A02      	XORLW      2
0x0488	0x1903      	BTFSC      STATUS, 2
0x0489	0x2C70      	GOTO       L_ajusta_alarme105
0x048A	0x083F      	MOVF       _ctrl_watch, 0
0x048B	0x3A03      	XORLW      3
0x048C	0x1903      	BTFSC      STATUS, 2
0x048D	0x2C77      	GOTO       L_ajusta_alarme107
L_ajusta_alarme100:
;clockwork.c,473 :: 		} //end if plus
L_ajusta_alarme98:
;clockwork.c,475 :: 		if(plus10 && plus10_f)              //Botão 'mais10' solto e a flag foi setada?
0x048E	0x1C85      	BTFSS      RA1_bit, 1
0x048F	0x2CCC      	GOTO       L_ajusta_alarme111
0x0490	0x1CC0      	BTFSS      _flagsA, 1
0x0491	0x2CCC      	GOTO       L_ajusta_alarme111
L__ajusta_alarme125:
;clockwork.c,477 :: 		plus10_f = 0x00;                 //Limpa a flag06
0x0492	0x10C0      	BCF        _flagsA, 1
;clockwork.c,479 :: 		switch(ctrl_watch)        //Switch na variável de controle
0x0493	0x2CBC      	GOTO       L_ajusta_alarme112
;clockwork.c,481 :: 		case 0x00:
L_ajusta_alarme114:
;clockwork.c,482 :: 		a_horas = a_horas + 10;      //Caso 0, libera ajuste das horas, incremento de dezenas
0x0494	0x300A      	MOVLW      10
0x0495	0x0726      	ADDWF      _a_horas, 0
0x0496	0x00F1      	MOVWF      R1
0x0497	0x0871      	MOVF       R1, 0
0x0498	0x00A6      	MOVWF      _a_horas
;clockwork.c,483 :: 		if(a_horas > 0x17) a_horas = 0x00;
0x0499	0x0871      	MOVF       R1, 0
0x049A	0x3C17      	SUBLW      23
0x049B	0x1803      	BTFSC      STATUS, 0
0x049C	0x2C9E      	GOTO       L_ajusta_alarme115
0x049D	0x01A6      	CLRF       _a_horas
L_ajusta_alarme115:
;clockwork.c,484 :: 		break;
0x049E	0x2CCC      	GOTO       L_ajusta_alarme113
;clockwork.c,485 :: 		case 0x01:                     //Caso 1, libera ajuste dos minutos, incremento de dezenas
L_ajusta_alarme116:
;clockwork.c,486 :: 		a_minutos = a_minutos + 10;
0x049F	0x300A      	MOVLW      10
0x04A0	0x0724      	ADDWF      _a_minutos, 0
0x04A1	0x00F1      	MOVWF      R1
0x04A2	0x0871      	MOVF       R1, 0
0x04A3	0x00A4      	MOVWF      _a_minutos
;clockwork.c,487 :: 		if(a_minutos > 0x3b) a_minutos = 0x00;
0x04A4	0x0871      	MOVF       R1, 0
0x04A5	0x3C3B      	SUBLW      59
0x04A6	0x1803      	BTFSC      STATUS, 0
0x04A7	0x2CA9      	GOTO       L_ajusta_alarme117
0x04A8	0x01A4      	CLRF       _a_minutos
L_ajusta_alarme117:
;clockwork.c,488 :: 		break;
0x04A9	0x2CCC      	GOTO       L_ajusta_alarme113
;clockwork.c,489 :: 		case 0x02:                     //Caso 2, libera ajuste dos segundos, incremento de dezenas
L_ajusta_alarme118:
;clockwork.c,490 :: 		a_segundos = a_segundos + 10;
0x04AA	0x300A      	MOVLW      10
0x04AB	0x0721      	ADDWF      _a_segundos, 0
0x04AC	0x00F1      	MOVWF      R1
0x04AD	0x0871      	MOVF       R1, 0
0x04AE	0x00A1      	MOVWF      _a_segundos
;clockwork.c,491 :: 		if(a_segundos > 0x3b) a_segundos = 0x00;
0x04AF	0x0871      	MOVF       R1, 0
0x04B0	0x3C3B      	SUBLW      59
0x04B1	0x1803      	BTFSC      STATUS, 0
0x04B2	0x2CB4      	GOTO       L_ajusta_alarme119
0x04B3	0x01A1      	CLRF       _a_segundos
L_ajusta_alarme119:
;clockwork.c,492 :: 		break;
0x04B4	0x2CCC      	GOTO       L_ajusta_alarme113
;clockwork.c,493 :: 		case 0x03:                     //Caso 3, libera ajuste dos dias, incremento de unidades
L_ajusta_alarme120:
;clockwork.c,494 :: 		a_dias++;
0x04B5	0x0ABC      	INCF       _a_dias, 1
;clockwork.c,495 :: 		if(a_dias > 0x06) a_dias = 0x00;
0x04B6	0x083C      	MOVF       _a_dias, 0
0x04B7	0x3C06      	SUBLW      6
0x04B8	0x1803      	BTFSC      STATUS, 0
0x04B9	0x2CBB      	GOTO       L_ajusta_alarme121
0x04BA	0x01BC      	CLRF       _a_dias
L_ajusta_alarme121:
;clockwork.c,496 :: 		break;
0x04BB	0x2CCC      	GOTO       L_ajusta_alarme113
;clockwork.c,497 :: 		} //end switch
L_ajusta_alarme112:
0x04BC	0x083F      	MOVF       _ctrl_watch, 0
0x04BD	0x3A00      	XORLW      0
0x04BE	0x1903      	BTFSC      STATUS, 2
0x04BF	0x2C94      	GOTO       L_ajusta_alarme114
0x04C0	0x083F      	MOVF       _ctrl_watch, 0
0x04C1	0x3A01      	XORLW      1
0x04C2	0x1903      	BTFSC      STATUS, 2
0x04C3	0x2C9F      	GOTO       L_ajusta_alarme116
0x04C4	0x083F      	MOVF       _ctrl_watch, 0
0x04C5	0x3A02      	XORLW      2
0x04C6	0x1903      	BTFSC      STATUS, 2
0x04C7	0x2CAA      	GOTO       L_ajusta_alarme118
0x04C8	0x083F      	MOVF       _ctrl_watch, 0
0x04C9	0x3A03      	XORLW      3
0x04CA	0x1903      	BTFSC      STATUS, 2
0x04CB	0x2CB5      	GOTO       L_ajusta_alarme120
L_ajusta_alarme113:
;clockwork.c,499 :: 		} //end if plus10
L_ajusta_alarme111:
;clockwork.c,501 :: 		} //end ajusta_alarme
0x04CC	0x0008      	RETURN
; end of _ajusta_alarme
_Lcd_Init:
;__Lib_Lcd.c,84 :: 		
;__Lib_Lcd.c,86 :: 		
0x04CD	0x1683      	BSF        STATUS, 5
0x04CE	0x1303      	BCF        STATUS, 6
0x04CF	0x1187      	BCF        LCD_EN_Direction, BitPos(LCD_EN_Direction+0)
;__Lib_Lcd.c,87 :: 		
0x04D0	0x1107      	BCF        LCD_RS_Direction, BitPos(LCD_RS_Direction+0)
;__Lib_Lcd.c,88 :: 		
0x04D1	0x1207      	BCF        LCD_D4_Direction, BitPos(LCD_D4_Direction+0)
;__Lib_Lcd.c,89 :: 		
0x04D2	0x1287      	BCF        LCD_D5_Direction, BitPos(LCD_D5_Direction+0)
;__Lib_Lcd.c,90 :: 		
0x04D3	0x1307      	BCF        LCD_D6_Direction, BitPos(LCD_D6_Direction+0)
;__Lib_Lcd.c,91 :: 		
0x04D4	0x1387      	BCF        LCD_D7_Direction, BitPos(LCD_D7_Direction+0)
;__Lib_Lcd.c,93 :: 		
0x04D5	0x1283      	BCF        STATUS, 5
0x04D6	0x1187      	BCF        LCD_EN, BitPos(LCD_EN+0)
;__Lib_Lcd.c,94 :: 		
0x04D7	0x1107      	BCF        LCD_RS, BitPos(LCD_RS+0)
;__Lib_Lcd.c,95 :: 		
0x04D8	0x1387      	BCF        LCD_D7, BitPos(LCD_D7+0)
;__Lib_Lcd.c,96 :: 		
0x04D9	0x1307      	BCF        LCD_D6, BitPos(LCD_D6+0)
;__Lib_Lcd.c,97 :: 		
0x04DA	0x1287      	BCF        LCD_D5, BitPos(LCD_D5+0)
;__Lib_Lcd.c,98 :: 		
0x04DB	0x1207      	BCF        LCD_D4, BitPos(LCD_D4+0)
;__Lib_Lcd.c,100 :: 		
0x04DC	0x2038      	CALL       _Delay_5500us
;__Lib_Lcd.c,101 :: 		
0x04DD	0x2038      	CALL       _Delay_5500us
;__Lib_Lcd.c,102 :: 		
0x04DE	0x2038      	CALL       _Delay_5500us
;__Lib_Lcd.c,105 :: 		
0x04DF	0x1687      	BSF        LCD_D5, BitPos(LCD_D5+0)
;__Lib_Lcd.c,106 :: 		
0x04E0	0x1607      	BSF        LCD_D4, BitPos(LCD_D4+0)
;__Lib_Lcd.c,107 :: 		
0x04E1	0x1587      	BSF        LCD_EN, BitPos(LCD_EN+0)
;__Lib_Lcd.c,108 :: 		
0x04E2	0x202B      	CALL       _Delay_1us
;__Lib_Lcd.c,109 :: 		
0x04E3	0x1187      	BCF        LCD_EN, BitPos(LCD_EN+0)
;__Lib_Lcd.c,110 :: 		
0x04E4	0x2038      	CALL       _Delay_5500us
;__Lib_Lcd.c,112 :: 		
0x04E5	0x1587      	BSF        LCD_EN, BitPos(LCD_EN+0)
;__Lib_Lcd.c,113 :: 		
0x04E6	0x202B      	CALL       _Delay_1us
;__Lib_Lcd.c,114 :: 		
0x04E7	0x1187      	BCF        LCD_EN, BitPos(LCD_EN+0)
;__Lib_Lcd.c,115 :: 		
0x04E8	0x2038      	CALL       _Delay_5500us
;__Lib_Lcd.c,117 :: 		
0x04E9	0x1587      	BSF        LCD_EN, BitPos(LCD_EN+0)
;__Lib_Lcd.c,118 :: 		
0x04EA	0x202B      	CALL       _Delay_1us
;__Lib_Lcd.c,119 :: 		
0x04EB	0x1187      	BCF        LCD_EN, BitPos(LCD_EN+0)
;__Lib_Lcd.c,120 :: 		
0x04EC	0x2038      	CALL       _Delay_5500us
;__Lib_Lcd.c,123 :: 		
0x04ED	0x1207      	BCF        LCD_D4, BitPos(LCD_D4+0)
;__Lib_Lcd.c,124 :: 		
0x04EE	0x1587      	BSF        LCD_EN, BitPos(LCD_EN+0)
;__Lib_Lcd.c,125 :: 		
0x04EF	0x202B      	CALL       _Delay_1us
;__Lib_Lcd.c,126 :: 		
0x04F0	0x1187      	BCF        LCD_EN, BitPos(LCD_EN+0)
;__Lib_Lcd.c,127 :: 		
0x04F1	0x2038      	CALL       _Delay_5500us
;__Lib_Lcd.c,130 :: 		
0x04F2	0x1587      	BSF        LCD_EN, BitPos(LCD_EN+0)
;__Lib_Lcd.c,131 :: 		
0x04F3	0x202B      	CALL       _Delay_1us
;__Lib_Lcd.c,132 :: 		
0x04F4	0x1187      	BCF        LCD_EN, BitPos(LCD_EN+0)
;__Lib_Lcd.c,134 :: 		
0x04F5	0x1287      	BCF        LCD_D5, BitPos(LCD_D5+0)
;__Lib_Lcd.c,135 :: 		
0x04F6	0x1787      	BSF        LCD_D7, BitPos(LCD_D7+0)
;__Lib_Lcd.c,136 :: 		
0x04F7	0x1587      	BSF        LCD_EN, BitPos(LCD_EN+0)
;__Lib_Lcd.c,137 :: 		
0x04F8	0x202B      	CALL       _Delay_1us
;__Lib_Lcd.c,138 :: 		
0x04F9	0x1187      	BCF        LCD_EN, BitPos(LCD_EN+0)
;__Lib_Lcd.c,139 :: 		
0x04FA	0x2038      	CALL       _Delay_5500us
;__Lib_Lcd.c,142 :: 		
0x04FB	0x1387      	BCF        LCD_D7, BitPos(LCD_D7+0)
;__Lib_Lcd.c,143 :: 		
0x04FC	0x1607      	BSF        LCD_D4, BitPos(LCD_D4+0)
;__Lib_Lcd.c,144 :: 		
0x04FD	0x1587      	BSF        LCD_EN, BitPos(LCD_EN+0)
;__Lib_Lcd.c,145 :: 		
0x04FE	0x202B      	CALL       _Delay_1us
;__Lib_Lcd.c,146 :: 		
0x04FF	0x1187      	BCF        LCD_EN, BitPos(LCD_EN+0)
;__Lib_Lcd.c,148 :: 		
0x0500	0x1207      	BCF        LCD_D4, BitPos(LCD_D4+0)
;__Lib_Lcd.c,149 :: 		
0x0501	0x1587      	BSF        LCD_EN, BitPos(LCD_EN+0)
;__Lib_Lcd.c,150 :: 		
0x0502	0x202B      	CALL       _Delay_1us
;__Lib_Lcd.c,151 :: 		
0x0503	0x1187      	BCF        LCD_EN, BitPos(LCD_EN+0)
;__Lib_Lcd.c,152 :: 		
0x0504	0x2038      	CALL       _Delay_5500us
;__Lib_Lcd.c,155 :: 		
0x0505	0x1587      	BSF        LCD_EN, BitPos(LCD_EN+0)
;__Lib_Lcd.c,156 :: 		
0x0506	0x202B      	CALL       _Delay_1us
;__Lib_Lcd.c,157 :: 		
0x0507	0x1187      	BCF        LCD_EN, BitPos(LCD_EN+0)
;__Lib_Lcd.c,159 :: 		
0x0508	0x1607      	BSF        LCD_D4, BitPos(LCD_D4+0)
;__Lib_Lcd.c,160 :: 		
0x0509	0x1587      	BSF        LCD_EN, BitPos(LCD_EN+0)
;__Lib_Lcd.c,161 :: 		
0x050A	0x202B      	CALL       _Delay_1us
;__Lib_Lcd.c,162 :: 		
0x050B	0x1187      	BCF        LCD_EN, BitPos(LCD_EN+0)
;__Lib_Lcd.c,163 :: 		
0x050C	0x2038      	CALL       _Delay_5500us
;__Lib_Lcd.c,166 :: 		
0x050D	0x1207      	BCF        LCD_D4, BitPos(LCD_D4+0)
;__Lib_Lcd.c,167 :: 		
0x050E	0x1587      	BSF        LCD_EN, BitPos(LCD_EN+0)
;__Lib_Lcd.c,168 :: 		
0x050F	0x202B      	CALL       _Delay_1us
;__Lib_Lcd.c,169 :: 		
0x0510	0x1187      	BCF        LCD_EN, BitPos(LCD_EN+0)
;__Lib_Lcd.c,171 :: 		
0x0511	0x1787      	BSF        LCD_D7, BitPos(LCD_D7+0)
;__Lib_Lcd.c,172 :: 		
0x0512	0x1707      	BSF        LCD_D6, BitPos(LCD_D6+0)
;__Lib_Lcd.c,173 :: 		
0x0513	0x1687      	BSF        LCD_D5, BitPos(LCD_D5+0)
;__Lib_Lcd.c,174 :: 		
0x0514	0x1607      	BSF        LCD_D4, BitPos(LCD_D4+0)
;__Lib_Lcd.c,175 :: 		
0x0515	0x1587      	BSF        LCD_EN, BitPos(LCD_EN+0)
;__Lib_Lcd.c,176 :: 		
0x0516	0x202B      	CALL       _Delay_1us
;__Lib_Lcd.c,177 :: 		
0x0517	0x1187      	BCF        LCD_EN, BitPos(LCD_EN+0)
;__Lib_Lcd.c,179 :: 		
0x0518	0x2038      	CALL       _Delay_5500us
;__Lib_Lcd.c,181 :: 		
0x0519	0x1444      	BSF        __Lib_Lcd_cmd_status, BitPos(__Lib_Lcd_cmd_status+0)
;__Lib_Lcd.c,182 :: 		
0x051A	0x0008      	RETURN
; end of _Lcd_Init
___CC2DW:
;__Lib_System.c,24 :: 		
;__Lib_System.c,27 :: 		
_CC2D_Loop1:
;__Lib_System.c,29 :: 		
0x051B	0x20B1      	CALL       _____DoICP
0x051C	0x118A      	BCF        PCLATH, 3
0x051D	0x120A      	BCF        PCLATH, 4
;__Lib_System.c,31 :: 		
0x051E	0x0080      	MOVWF      INDF
;__Lib_System.c,32 :: 		
0x051F	0x0A84      	INCF       FSR, 1
;__Lib_System.c,33 :: 		
0x0520	0x0AC1      	INCF       ___DoICPAddr, 1
;__Lib_System.c,35 :: 		
0x0521	0x1903      	BTFSC      STATUS, 2
;__Lib_System.c,36 :: 		
0x0522	0x0AC2      	INCF       ___DoICPAddr+1, 1
;__Lib_System.c,37 :: 		
0x0523	0x03F0      	DECF       R0, 1
;__Lib_System.c,39 :: 		
0x0524	0x1D03      	BTFSS      STATUS, 2
;__Lib_System.c,40 :: 		
0x0525	0x2D1B      	GOTO       _CC2D_Loop1
;__Lib_System.c,42 :: 		
0x0526	0x0008      	RETURN
; end of ___CC2DW
_disp_alarme:
;clockwork.c,308 :: 		void disp_alarme()                             //Função para exibir a hora ajustada para o despertador
;clockwork.c,312 :: 		text2[7] = a_segundos%10 + '0';
0x0527	0x3007      	MOVLW      7
0x0528	0x1283      	BCF        STATUS, 5
0x0529	0x1303      	BCF        STATUS, 6
0x052A	0x073B      	ADDWF      _text2, 0
0x052B	0x00C6      	MOVWF      FLOC__disp_alarme
0x052C	0x300A      	MOVLW      10
0x052D	0x00F4      	MOVWF      R4
0x052E	0x0821      	MOVF       _a_segundos, 0
0x052F	0x00F0      	MOVWF      R0
0x0530	0x208B      	CALL       _Div_8x8_U
0x0531	0x0878      	MOVF       R8, 0
0x0532	0x00F0      	MOVWF      R0
0x0533	0x3030      	MOVLW      48
0x0534	0x07F0      	ADDWF      R0, 1
0x0535	0x0846      	MOVF       FLOC__disp_alarme, 0
0x0536	0x0084      	MOVWF      FSR
0x0537	0x0870      	MOVF       R0, 0
0x0538	0x0080      	MOVWF      INDF
;clockwork.c,313 :: 		text2[6] = a_segundos/10 + '0';
0x0539	0x3006      	MOVLW      6
0x053A	0x073B      	ADDWF      _text2, 0
0x053B	0x00C6      	MOVWF      FLOC__disp_alarme
0x053C	0x300A      	MOVLW      10
0x053D	0x00F4      	MOVWF      R4
0x053E	0x0821      	MOVF       _a_segundos, 0
0x053F	0x00F0      	MOVWF      R0
0x0540	0x208B      	CALL       _Div_8x8_U
0x0541	0x3030      	MOVLW      48
0x0542	0x07F0      	ADDWF      R0, 1
0x0543	0x0846      	MOVF       FLOC__disp_alarme, 0
0x0544	0x0084      	MOVWF      FSR
0x0545	0x0870      	MOVF       R0, 0
0x0546	0x0080      	MOVWF      INDF
;clockwork.c,314 :: 		text2[4] = a_minutos%10 + '0';
0x0547	0x3004      	MOVLW      4
0x0548	0x073B      	ADDWF      _text2, 0
0x0549	0x00C6      	MOVWF      FLOC__disp_alarme
0x054A	0x300A      	MOVLW      10
0x054B	0x00F4      	MOVWF      R4
0x054C	0x0824      	MOVF       _a_minutos, 0
0x054D	0x00F0      	MOVWF      R0
0x054E	0x208B      	CALL       _Div_8x8_U
0x054F	0x0878      	MOVF       R8, 0
0x0550	0x00F0      	MOVWF      R0
0x0551	0x3030      	MOVLW      48
0x0552	0x07F0      	ADDWF      R0, 1
0x0553	0x0846      	MOVF       FLOC__disp_alarme, 0
0x0554	0x0084      	MOVWF      FSR
0x0555	0x0870      	MOVF       R0, 0
0x0556	0x0080      	MOVWF      INDF
;clockwork.c,315 :: 		text2[3] = a_minutos/10 + '0';
0x0557	0x3003      	MOVLW      3
0x0558	0x073B      	ADDWF      _text2, 0
0x0559	0x00C6      	MOVWF      FLOC__disp_alarme
0x055A	0x300A      	MOVLW      10
0x055B	0x00F4      	MOVWF      R4
0x055C	0x0824      	MOVF       _a_minutos, 0
0x055D	0x00F0      	MOVWF      R0
0x055E	0x208B      	CALL       _Div_8x8_U
0x055F	0x3030      	MOVLW      48
0x0560	0x07F0      	ADDWF      R0, 1
0x0561	0x0846      	MOVF       FLOC__disp_alarme, 0
0x0562	0x0084      	MOVWF      FSR
0x0563	0x0870      	MOVF       R0, 0
0x0564	0x0080      	MOVWF      INDF
;clockwork.c,316 :: 		text2[1] = a_horas%10 + '0';
0x0565	0x0A3B      	INCF       _text2, 0
0x0566	0x00C6      	MOVWF      FLOC__disp_alarme
0x0567	0x300A      	MOVLW      10
0x0568	0x00F4      	MOVWF      R4
0x0569	0x0826      	MOVF       _a_horas, 0
0x056A	0x00F0      	MOVWF      R0
0x056B	0x208B      	CALL       _Div_8x8_U
0x056C	0x0878      	MOVF       R8, 0
0x056D	0x00F0      	MOVWF      R0
0x056E	0x3030      	MOVLW      48
0x056F	0x07F0      	ADDWF      R0, 1
0x0570	0x0846      	MOVF       FLOC__disp_alarme, 0
0x0571	0x0084      	MOVWF      FSR
0x0572	0x0870      	MOVF       R0, 0
0x0573	0x0080      	MOVWF      INDF
;clockwork.c,317 :: 		text2[0] = a_horas/10 + '0';
0x0574	0x083B      	MOVF       _text2, 0
0x0575	0x00C6      	MOVWF      FLOC__disp_alarme
0x0576	0x300A      	MOVLW      10
0x0577	0x00F4      	MOVWF      R4
0x0578	0x0826      	MOVF       _a_horas, 0
0x0579	0x00F0      	MOVWF      R0
0x057A	0x208B      	CALL       _Div_8x8_U
0x057B	0x3030      	MOVLW      48
0x057C	0x07F0      	ADDWF      R0, 1
0x057D	0x0846      	MOVF       FLOC__disp_alarme, 0
0x057E	0x0084      	MOVWF      FSR
0x057F	0x0870      	MOVF       R0, 0
0x0580	0x0080      	MOVWF      INDF
;clockwork.c,319 :: 		Lcd_Chr(1,5, text2[0]);                   //Imprimi o horário de despertar no display
0x0581	0x3001      	MOVLW      1
0x0582	0x00C7      	MOVWF      FARG_Lcd_Chr_row
0x0583	0x3005      	MOVLW      5
0x0584	0x00C8      	MOVWF      FARG_Lcd_Chr_column
0x0585	0x083B      	MOVF       _text2, 0
0x0586	0x0084      	MOVWF      FSR
0x0587	0x0800      	MOVF       INDF, 0
0x0588	0x00C9      	MOVWF      FARG_Lcd_Chr_out_char
0x0589	0x20B8      	CALL       _Lcd_Chr
;clockwork.c,320 :: 		Lcd_Chr_Cp  (text2[1]);                   //
0x058A	0x0A3B      	INCF       _text2, 0
0x058B	0x0084      	MOVWF      FSR
0x058C	0x0800      	MOVF       INDF, 0
0x058D	0x00C7      	MOVWF      FARG_Lcd_Chr_CP_out_char
0x058E	0x2083      	CALL       _Lcd_Chr_CP
;clockwork.c,321 :: 		Lcd_Chr_Cp  (text2[2]);                   //
0x058F	0x3002      	MOVLW      2
0x0590	0x073B      	ADDWF      _text2, 0
0x0591	0x0084      	MOVWF      FSR
0x0592	0x0800      	MOVF       INDF, 0
0x0593	0x00C7      	MOVWF      FARG_Lcd_Chr_CP_out_char
0x0594	0x2083      	CALL       _Lcd_Chr_CP
;clockwork.c,322 :: 		Lcd_Chr_Cp  (text2[3]);                   //
0x0595	0x3003      	MOVLW      3
0x0596	0x073B      	ADDWF      _text2, 0
0x0597	0x0084      	MOVWF      FSR
0x0598	0x0800      	MOVF       INDF, 0
0x0599	0x00C7      	MOVWF      FARG_Lcd_Chr_CP_out_char
0x059A	0x2083      	CALL       _Lcd_Chr_CP
;clockwork.c,323 :: 		Lcd_Chr_Cp  (text2[4]);                   //
0x059B	0x3004      	MOVLW      4
0x059C	0x073B      	ADDWF      _text2, 0
0x059D	0x0084      	MOVWF      FSR
0x059E	0x0800      	MOVF       INDF, 0
0x059F	0x00C7      	MOVWF      FARG_Lcd_Chr_CP_out_char
0x05A0	0x2083      	CALL       _Lcd_Chr_CP
;clockwork.c,324 :: 		Lcd_Chr_Cp  (text2[5]);                   //
0x05A1	0x3005      	MOVLW      5
0x05A2	0x073B      	ADDWF      _text2, 0
0x05A3	0x0084      	MOVWF      FSR
0x05A4	0x0800      	MOVF       INDF, 0
0x05A5	0x00C7      	MOVWF      FARG_Lcd_Chr_CP_out_char
0x05A6	0x2083      	CALL       _Lcd_Chr_CP
;clockwork.c,325 :: 		Lcd_Chr_Cp  (text2[6]);                   //
0x05A7	0x3006      	MOVLW      6
0x05A8	0x073B      	ADDWF      _text2, 0
0x05A9	0x0084      	MOVWF      FSR
0x05AA	0x0800      	MOVF       INDF, 0
0x05AB	0x00C7      	MOVWF      FARG_Lcd_Chr_CP_out_char
0x05AC	0x2083      	CALL       _Lcd_Chr_CP
;clockwork.c,326 :: 		Lcd_Chr_Cp  (text2[7]);                   //
0x05AD	0x3007      	MOVLW      7
0x05AE	0x073B      	ADDWF      _text2, 0
0x05AF	0x0084      	MOVWF      FSR
0x05B0	0x0800      	MOVF       INDF, 0
0x05B1	0x00C7      	MOVWF      FARG_Lcd_Chr_CP_out_char
0x05B2	0x2083      	CALL       _Lcd_Chr_CP
;clockwork.c,328 :: 		switch(a_dias)                             //Converte o número dos dias em string
0x05B3	0x2E16      	GOTO       L_disp_alarme65
;clockwork.c,330 :: 		case 0:
L_disp_alarme67:
;clockwork.c,331 :: 		Lcd_Chr(1,14,'D');
0x05B4	0x3001      	MOVLW      1
0x05B5	0x00C7      	MOVWF      FARG_Lcd_Chr_row
0x05B6	0x300E      	MOVLW      14
0x05B7	0x00C8      	MOVWF      FARG_Lcd_Chr_column
0x05B8	0x3044      	MOVLW      68
0x05B9	0x00C9      	MOVWF      FARG_Lcd_Chr_out_char
0x05BA	0x20B8      	CALL       _Lcd_Chr
;clockwork.c,332 :: 		Lcd_Chr_Cp('O');
0x05BB	0x304F      	MOVLW      79
0x05BC	0x00C7      	MOVWF      FARG_Lcd_Chr_CP_out_char
0x05BD	0x2083      	CALL       _Lcd_Chr_CP
;clockwork.c,333 :: 		Lcd_Chr_Cp('M');
0x05BE	0x304D      	MOVLW      77
0x05BF	0x00C7      	MOVWF      FARG_Lcd_Chr_CP_out_char
0x05C0	0x2083      	CALL       _Lcd_Chr_CP
;clockwork.c,334 :: 		break;
0x05C1	0x2E32      	GOTO       L_disp_alarme66
;clockwork.c,335 :: 		case 1:
L_disp_alarme68:
;clockwork.c,336 :: 		Lcd_Chr(1,14,'S');
0x05C2	0x3001      	MOVLW      1
0x05C3	0x00C7      	MOVWF      FARG_Lcd_Chr_row
0x05C4	0x300E      	MOVLW      14
0x05C5	0x00C8      	MOVWF      FARG_Lcd_Chr_column
0x05C6	0x3053      	MOVLW      83
0x05C7	0x00C9      	MOVWF      FARG_Lcd_Chr_out_char
0x05C8	0x20B8      	CALL       _Lcd_Chr
;clockwork.c,337 :: 		Lcd_Chr_Cp('E');
0x05C9	0x3045      	MOVLW      69
0x05CA	0x00C7      	MOVWF      FARG_Lcd_Chr_CP_out_char
0x05CB	0x2083      	CALL       _Lcd_Chr_CP
;clockwork.c,338 :: 		Lcd_Chr_Cp('G');
0x05CC	0x3047      	MOVLW      71
0x05CD	0x00C7      	MOVWF      FARG_Lcd_Chr_CP_out_char
0x05CE	0x2083      	CALL       _Lcd_Chr_CP
;clockwork.c,339 :: 		break;
0x05CF	0x2E32      	GOTO       L_disp_alarme66
;clockwork.c,340 :: 		case 2:
L_disp_alarme69:
;clockwork.c,341 :: 		Lcd_Chr(1,14,'T');
0x05D0	0x3001      	MOVLW      1
0x05D1	0x00C7      	MOVWF      FARG_Lcd_Chr_row
0x05D2	0x300E      	MOVLW      14
0x05D3	0x00C8      	MOVWF      FARG_Lcd_Chr_column
0x05D4	0x3054      	MOVLW      84
0x05D5	0x00C9      	MOVWF      FARG_Lcd_Chr_out_char
0x05D6	0x20B8      	CALL       _Lcd_Chr
;clockwork.c,342 :: 		Lcd_Chr_Cp('E');
0x05D7	0x3045      	MOVLW      69
0x05D8	0x00C7      	MOVWF      FARG_Lcd_Chr_CP_out_char
0x05D9	0x2083      	CALL       _Lcd_Chr_CP
;clockwork.c,343 :: 		Lcd_Chr_Cp('R');
0x05DA	0x3052      	MOVLW      82
0x05DB	0x00C7      	MOVWF      FARG_Lcd_Chr_CP_out_char
0x05DC	0x2083      	CALL       _Lcd_Chr_CP
;clockwork.c,344 :: 		break;
0x05DD	0x2E32      	GOTO       L_disp_alarme66
;clockwork.c,345 :: 		case 3:
L_disp_alarme70:
;clockwork.c,346 :: 		Lcd_Chr(1,14,'Q');
0x05DE	0x3001      	MOVLW      1
0x05DF	0x00C7      	MOVWF      FARG_Lcd_Chr_row
0x05E0	0x300E      	MOVLW      14
0x05E1	0x00C8      	MOVWF      FARG_Lcd_Chr_column
0x05E2	0x3051      	MOVLW      81
0x05E3	0x00C9      	MOVWF      FARG_Lcd_Chr_out_char
0x05E4	0x20B8      	CALL       _Lcd_Chr
;clockwork.c,347 :: 		Lcd_Chr_Cp('U');
0x05E5	0x3055      	MOVLW      85
0x05E6	0x00C7      	MOVWF      FARG_Lcd_Chr_CP_out_char
0x05E7	0x2083      	CALL       _Lcd_Chr_CP
;clockwork.c,348 :: 		Lcd_Chr_Cp('A');
0x05E8	0x3041      	MOVLW      65
0x05E9	0x00C7      	MOVWF      FARG_Lcd_Chr_CP_out_char
0x05EA	0x2083      	CALL       _Lcd_Chr_CP
;clockwork.c,349 :: 		break;
0x05EB	0x2E32      	GOTO       L_disp_alarme66
;clockwork.c,350 :: 		case 4:
L_disp_alarme71:
;clockwork.c,351 :: 		Lcd_Chr(1,14,'Q');
0x05EC	0x3001      	MOVLW      1
0x05ED	0x00C7      	MOVWF      FARG_Lcd_Chr_row
0x05EE	0x300E      	MOVLW      14
0x05EF	0x00C8      	MOVWF      FARG_Lcd_Chr_column
0x05F0	0x3051      	MOVLW      81
0x05F1	0x00C9      	MOVWF      FARG_Lcd_Chr_out_char
0x05F2	0x20B8      	CALL       _Lcd_Chr
;clockwork.c,352 :: 		Lcd_Chr_Cp('U');
0x05F3	0x3055      	MOVLW      85
0x05F4	0x00C7      	MOVWF      FARG_Lcd_Chr_CP_out_char
0x05F5	0x2083      	CALL       _Lcd_Chr_CP
;clockwork.c,353 :: 		Lcd_Chr_Cp('I');
0x05F6	0x3049      	MOVLW      73
0x05F7	0x00C7      	MOVWF      FARG_Lcd_Chr_CP_out_char
0x05F8	0x2083      	CALL       _Lcd_Chr_CP
;clockwork.c,354 :: 		break;
0x05F9	0x2E32      	GOTO       L_disp_alarme66
;clockwork.c,355 :: 		case 5:
L_disp_alarme72:
;clockwork.c,356 :: 		Lcd_Chr(1,14,'S');
0x05FA	0x3001      	MOVLW      1
0x05FB	0x00C7      	MOVWF      FARG_Lcd_Chr_row
0x05FC	0x300E      	MOVLW      14
0x05FD	0x00C8      	MOVWF      FARG_Lcd_Chr_column
0x05FE	0x3053      	MOVLW      83
0x05FF	0x00C9      	MOVWF      FARG_Lcd_Chr_out_char
0x0600	0x20B8      	CALL       _Lcd_Chr
;clockwork.c,357 :: 		Lcd_Chr_Cp('E');
0x0601	0x3045      	MOVLW      69
0x0602	0x00C7      	MOVWF      FARG_Lcd_Chr_CP_out_char
0x0603	0x2083      	CALL       _Lcd_Chr_CP
;clockwork.c,358 :: 		Lcd_Chr_Cp('X');
0x0604	0x3058      	MOVLW      88
0x0605	0x00C7      	MOVWF      FARG_Lcd_Chr_CP_out_char
0x0606	0x2083      	CALL       _Lcd_Chr_CP
;clockwork.c,359 :: 		break;
0x0607	0x2E32      	GOTO       L_disp_alarme66
;clockwork.c,360 :: 		case 6:
L_disp_alarme73:
;clockwork.c,361 :: 		Lcd_Chr(1,14,'S');
0x0608	0x3001      	MOVLW      1
0x0609	0x00C7      	MOVWF      FARG_Lcd_Chr_row
0x060A	0x300E      	MOVLW      14
0x060B	0x00C8      	MOVWF      FARG_Lcd_Chr_column
0x060C	0x3053      	MOVLW      83
0x060D	0x00C9      	MOVWF      FARG_Lcd_Chr_out_char
0x060E	0x20B8      	CALL       _Lcd_Chr
;clockwork.c,362 :: 		Lcd_Chr_Cp('A');
0x060F	0x3041      	MOVLW      65
0x0610	0x00C7      	MOVWF      FARG_Lcd_Chr_CP_out_char
0x0611	0x2083      	CALL       _Lcd_Chr_CP
;clockwork.c,363 :: 		Lcd_Chr_Cp('B');
0x0612	0x3042      	MOVLW      66
0x0613	0x00C7      	MOVWF      FARG_Lcd_Chr_CP_out_char
0x0614	0x2083      	CALL       _Lcd_Chr_CP
;clockwork.c,364 :: 		break;
0x0615	0x2E32      	GOTO       L_disp_alarme66
;clockwork.c,366 :: 		} //end switch
L_disp_alarme65:
0x0616	0x083C      	MOVF       _a_dias, 0
0x0617	0x3A00      	XORLW      0
0x0618	0x1903      	BTFSC      STATUS, 2
0x0619	0x2DB4      	GOTO       L_disp_alarme67
0x061A	0x083C      	MOVF       _a_dias, 0
0x061B	0x3A01      	XORLW      1
0x061C	0x1903      	BTFSC      STATUS, 2
0x061D	0x2DC2      	GOTO       L_disp_alarme68
0x061E	0x083C      	MOVF       _a_dias, 0
0x061F	0x3A02      	XORLW      2
0x0620	0x1903      	BTFSC      STATUS, 2
0x0621	0x2DD0      	GOTO       L_disp_alarme69
0x0622	0x083C      	MOVF       _a_dias, 0
0x0623	0x3A03      	XORLW      3
0x0624	0x1903      	BTFSC      STATUS, 2
0x0625	0x2DDE      	GOTO       L_disp_alarme70
0x0626	0x083C      	MOVF       _a_dias, 0
0x0627	0x3A04      	XORLW      4
0x0628	0x1903      	BTFSC      STATUS, 2
0x0629	0x2DEC      	GOTO       L_disp_alarme71
0x062A	0x083C      	MOVF       _a_dias, 0
0x062B	0x3A05      	XORLW      5
0x062C	0x1903      	BTFSC      STATUS, 2
0x062D	0x2DFA      	GOTO       L_disp_alarme72
0x062E	0x083C      	MOVF       _a_dias, 0
0x062F	0x3A06      	XORLW      6
0x0630	0x1903      	BTFSC      STATUS, 2
0x0631	0x2E08      	GOTO       L_disp_alarme73
L_disp_alarme66:
;clockwork.c,369 :: 		} //end disp_alarme
0x0632	0x0008      	RETURN
; end of _disp_alarme
_relogio:
;clockwork.c,139 :: 		void relogio()                                 //Função para controle das variáveis do relógio
;clockwork.c,141 :: 		segundos++;                               //Incrementa os segundos
0x0633	0x1283      	BCF        STATUS, 5
0x0634	0x1303      	BCF        STATUS, 6
0x0635	0x0AA2      	INCF       _segundos, 1
;clockwork.c,143 :: 		if(segundos == 0x3c)                      //Segundos igual a 60?
0x0636	0x0822      	MOVF       _segundos, 0
0x0637	0x3A3C      	XORLW      60
0x0638	0x1D03      	BTFSS      STATUS, 2
0x0639	0x2E4D      	GOTO       L_relogio13
;clockwork.c,145 :: 		segundos = 0x00;                      //Reinicia os segundos
0x063A	0x01A2      	CLRF       _segundos
;clockwork.c,146 :: 		minutos++;                            //Incrementa os minutos
0x063B	0x0AA5      	INCF       _minutos, 1
;clockwork.c,148 :: 		if(minutos == 0x3c)                   //Minutos igual a 60?
0x063C	0x0825      	MOVF       _minutos, 0
0x063D	0x3A3C      	XORLW      60
0x063E	0x1D03      	BTFSS      STATUS, 2
0x063F	0x2E4D      	GOTO       L_relogio14
;clockwork.c,150 :: 		minutos = 0x00;                    //Reinicia os minutos
0x0640	0x01A5      	CLRF       _minutos
;clockwork.c,151 :: 		horas++;                           //Incrementa as horas
0x0641	0x0AA3      	INCF       _horas, 1
;clockwork.c,153 :: 		if(horas == 0x18)                  //Horas igual a 24 ?
0x0642	0x0823      	MOVF       _horas, 0
0x0643	0x3A18      	XORLW      24
0x0644	0x1D03      	BTFSS      STATUS, 2
0x0645	0x2E4D      	GOTO       L_relogio15
;clockwork.c,155 :: 		horas = 0x00;                   //Reinicia as horas
0x0646	0x01A3      	CLRF       _horas
;clockwork.c,156 :: 		dias++;                         //Incrementa os dias
0x0647	0x0ABD      	INCF       _dias, 1
;clockwork.c,158 :: 		if(dias == 0x07) dias = 0x00;   //Se dias igual a 7, reinicia
0x0648	0x083D      	MOVF       _dias, 0
0x0649	0x3A07      	XORLW      7
0x064A	0x1D03      	BTFSS      STATUS, 2
0x064B	0x2E4D      	GOTO       L_relogio16
0x064C	0x01BD      	CLRF       _dias
L_relogio16:
;clockwork.c,161 :: 		} //end if horas
L_relogio15:
;clockwork.c,163 :: 		} //end if minutos
L_relogio14:
;clockwork.c,165 :: 		} //end if segundos
L_relogio13:
;clockwork.c,167 :: 		} //end relogio
0x064D	0x0008      	RETURN
; end of _relogio
_main:
0x064E	0x1283      	BCF        STATUS, 5
0x064F	0x1303      	BCF        STATUS, 6
0x0650	0x01A1      	CLRF       _a_segundos
0x0651	0x01A2      	CLRF       _segundos
0x0652	0x01A3      	CLRF       _horas
0x0653	0x01A4      	CLRF       _a_minutos
0x0654	0x01A5      	CLRF       _minutos
0x0655	0x01A6      	CLRF       _a_horas
0x0656	0x3030      	MOVLW      48
0x0657	0x00A7      	MOVWF      ?lstr2_source_file_PICmid_proj02
0x0658	0x3030      	MOVLW      48
0x0659	0x00A8      	MOVWF      40
0x065A	0x303A      	MOVLW      58
0x065B	0x00A9      	MOVWF      41
0x065C	0x3030      	MOVLW      48
0x065D	0x00AA      	MOVWF      42
0x065E	0x3030      	MOVLW      48
0x065F	0x00AB      	MOVWF      43
0x0660	0x303A      	MOVLW      58
0x0661	0x00AC      	MOVWF      44
0x0662	0x3030      	MOVLW      48
0x0663	0x00AD      	MOVWF      45
0x0664	0x3030      	MOVLW      48
0x0665	0x00AE      	MOVWF      46
0x0666	0x01AF      	CLRF       47
0x0667	0x3030      	MOVLW      48
0x0668	0x00B0      	MOVWF      ?lstr1_source_file_PICmid_proj02
0x0669	0x3030      	MOVLW      48
0x066A	0x00B1      	MOVWF      49
0x066B	0x303A      	MOVLW      58
0x066C	0x00B2      	MOVWF      50
0x066D	0x3030      	MOVLW      48
0x066E	0x00B3      	MOVWF      51
0x066F	0x3030      	MOVLW      48
0x0670	0x00B4      	MOVWF      52
0x0671	0x303A      	MOVLW      58
0x0672	0x00B5      	MOVWF      53
0x0673	0x3030      	MOVLW      48
0x0674	0x00B6      	MOVWF      54
0x0675	0x3030      	MOVLW      48
0x0676	0x00B7      	MOVWF      55
0x0677	0x01B8      	CLRF       56
0x0678	0x01B9      	CLRF       _counter_T0
0x0679	0x01BA      	CLRF       58
0x067A	0x3027      	MOVLW      39
0x067B	0x00BB      	MOVWF      _text2
0x067C	0x01BC      	CLRF       _a_dias
0x067D	0x01BD      	CLRF       _dias
0x067E	0x3030      	MOVLW      48
0x067F	0x00BE      	MOVWF      _text1
0x0680	0x3005      	MOVLW      5
0x0681	0x00BF      	MOVWF      _ctrl_watch
0x0682	0x01C0      	CLRF       _flagsA
;source_file_PICmid_proj02.c,134 :: 		void main()
;source_file_PICmid_proj02.c,136 :: 		TRISB        = 0xCF;                        //Configura RB4 e RB5 como saída
0x0683	0x30CF      	MOVLW      207
0x0684	0x1683      	BSF        STATUS, 5
0x0685	0x0086      	MOVWF      TRISB
;source_file_PICmid_proj02.c,137 :: 		PORTB        = 0xCF;                        //Inicializa PORTB
0x0686	0x30CF      	MOVLW      207
0x0687	0x1283      	BCF        STATUS, 5
0x0688	0x0086      	MOVWF      PORTB
;source_file_PICmid_proj02.c,139 :: 		CMCON        = 0x07;                        //Desabilita comparadores
0x0689	0x3007      	MOVLW      7
0x068A	0x1683      	BSF        STATUS, 5
0x068B	0x009C      	MOVWF      CMCON
;source_file_PICmid_proj02.c,140 :: 		ADCON1       = 0x07;                        //Configura todos I/Os como digitais
0x068C	0x3007      	MOVLW      7
0x068D	0x009F      	MOVWF      ADCON1
;source_file_PICmid_proj02.c,142 :: 		OPTION_REG   = 0x84;                        //Desabilita resistores de pull-up internos, prescaler 1:32 associado ao Timer0
0x068E	0x3084      	MOVLW      132
0x068F	0x0081      	MOVWF      OPTION_REG
;source_file_PICmid_proj02.c,143 :: 		GIE_bit      = 0x01;                        //Habilita interrupção global
0x0690	0x178B      	BSF        GIE_bit, 7
;source_file_PICmid_proj02.c,144 :: 		TMR0IE_bit   = 0x01;                        //Habilita interrupção do timer0
0x0691	0x168B      	BSF        TMR0IE_bit, 5
;source_file_PICmid_proj02.c,145 :: 		TMR0         = 0x06;                        //Inicializa Timer0 em 6
0x0692	0x3006      	MOVLW      6
0x0693	0x1283      	BCF        STATUS, 5
0x0694	0x0081      	MOVWF      TMR0
;source_file_PICmid_proj02.c,155 :: 		TRISC        = 0x02;                        //Configura todo PORTD como saída, exceto RC1
0x0695	0x3002      	MOVLW      2
0x0696	0x1683      	BSF        STATUS, 5
0x0697	0x0087      	MOVWF      TRISC
;source_file_PICmid_proj02.c,156 :: 		PORTC        = 0x02;                        //Inicializa PORTC
0x0698	0x3002      	MOVLW      2
0x0699	0x1283      	BCF        STATUS, 5
0x069A	0x0087      	MOVWF      PORTC
;source_file_PICmid_proj02.c,158 :: 		Lcd_Init();                                 //Inicia módulo LCD
0x069B	0x24CD      	CALL       _Lcd_Init
;source_file_PICmid_proj02.c,159 :: 		Lcd_Cmd(_LCD_CLEAR);                        //Limpa display
0x069C	0x3001      	MOVLW      1
0x069D	0x00CA      	MOVWF      FARG_Lcd_Cmd_out_char
0x069E	0x2043      	CALL       _Lcd_Cmd
;source_file_PICmid_proj02.c,160 :: 		Lcd_Cmd(_LCD_CURSOR_OFF);                   //Apaga cursor
0x069F	0x300C      	MOVLW      12
0x06A0	0x00CA      	MOVWF      FARG_Lcd_Cmd_out_char
0x06A1	0x2043      	CALL       _Lcd_Cmd
;source_file_PICmid_proj02.c,164 :: 		while(1)                                    //Loop Infinito
L_main2:
;source_file_PICmid_proj02.c,166 :: 		if(!adj_alarm) adj_alarm_f = 0x01;
0x06A2	0x1985      	BTFSC      RA3_bit, 3
0x06A3	0x2EA5      	GOTO       L_main4
0x06A4	0x15C0      	BSF        _flagsA, 3
L_main4:
;source_file_PICmid_proj02.c,167 :: 		if(adj_alarm && adj_alarm_f)
0x06A5	0x1D85      	BTFSS      RA3_bit, 3
0x06A6	0x2EAC      	GOTO       L_main7
0x06A7	0x1DC0      	BTFSS      _flagsA, 3
0x06A8	0x2EAC      	GOTO       L_main7
L__main10:
;source_file_PICmid_proj02.c,169 :: 		adj_alarm_f = 0x00;
0x06A9	0x11C0      	BCF        _flagsA, 3
;source_file_PICmid_proj02.c,170 :: 		alarm_mode = ~alarm_mode;
0x06AA	0x3010      	MOVLW      16
0x06AB	0x06C0      	XORWF      _flagsA, 1
;source_file_PICmid_proj02.c,172 :: 		} //end if adj_alarm
L_main7:
;source_file_PICmid_proj02.c,175 :: 		if(alarm_mode)
0x06AC	0x1E40      	BTFSS      _flagsA, 4
0x06AD	0x2EB1      	GOTO       L_main8
;source_file_PICmid_proj02.c,177 :: 		disp_alarme();
0x06AE	0x2527      	CALL       _disp_alarme
;source_file_PICmid_proj02.c,178 :: 		ajusta_alarme();
0x06AF	0x2363      	CALL       _ajusta_alarme
;source_file_PICmid_proj02.c,180 :: 		} //end if alarm_mode
0x06B0	0x2EB3      	GOTO       L_main9
L_main8:
;source_file_PICmid_proj02.c,184 :: 		disp_horario();
0x06B1	0x20ED      	CALL       _disp_horario
;source_file_PICmid_proj02.c,185 :: 		ajusta_relogio();
0x06B2	0x21F9      	CALL       _ajusta_relogio
;source_file_PICmid_proj02.c,187 :: 		} //end else
L_main9:
;source_file_PICmid_proj02.c,189 :: 		} //end while
0x06B3	0x2EA2      	GOTO       L_main2
;source_file_PICmid_proj02.c,192 :: 		} //end main
0x06B4	0x2EB4      	GOTO       $+0
; end of _main
Symbol List:
//** Routines locations **
//ADDRESS    SIZE    PROCEDURE
//----------------------------------------------
0x0004      [39]    _interrupt
0x002B       [5]    _Delay_1us
0x0030       [8]    _Delay_50us
0x0038      [11]    _Delay_5500us
0x0043      [64]    _Lcd_Cmd
0x0083       [8]    _Lcd_Chr_CP
0x008B      [17]    _Div_8x8_U
0x009C      [21]    _despertar
0x00B1       [7]    _____DoICP
0x00B8      [53]    _Lcd_Chr
0x00ED     [268]    _disp_horario
0x01F9     [362]    _ajusta_relogio
0x0363     [362]    _ajusta_alarme
0x04CD      [78]    _Lcd_Init
0x051B      [12]    ___CC2DW
0x0527     [268]    _disp_alarme
0x0633      [27]    _relogio
0x064E     [103]    _main
//** Variables locations ** 
//ADDRESS    SIZE    VARIABLE
//----------------------------------------------
0x0000       [1]    INDF
0x0001       [1]    TMR0
0x0002       [1]    PCL
0x0003       [0]    Z_bit
0x0003       [0]    RP0_bit
0x0003       [1]    STATUS
0x0003       [0]    NOT_TO_bit
0x0003       [0]    NOT_PD_bit
0x0003       [0]    IRP_bit
0x0003       [0]    DC_bit
0x0003       [0]    RP1_bit
0x0003       [0]    C_bit
0x0004       [1]    FSRPTR
0x0004       [1]    FSR
0x0005       [0]    RA1_bit
0x0005       [0]    RA0_bit
0x0005       [0]    RA2_bit
0x0005       [0]    RA5_bit
0x0005       [1]    PORTA
0x0005       [0]    RA3_bit
0x0005       [0]    RA4_bit
0x0006       [0]    RB3_bit
0x0006       [0]    RB2_bit
0x0006       [1]    PORTB
0x0006       [0]    RB6_bit
0x0006       [0]    RB7_bit
0x0006       [0]    RB4_bit
0x0006       [0]    RB5_bit
0x0006       [0]    RB1_bit
0x0006       [0]    RB0_bit
0x0007       [0]    LCD_D4
0x0007       [0]    LCD_EN
0x0007       [0]    LCD_RS
0x0007       [0]    LCD_D5
0x0007       [1]    PORTC
0x0007       [0]    LCD_D7
0x0007       [0]    LCD_D6
0x0007       [0]    RC0_bit
0x0007       [0]    RC5_bit
0x0007       [0]    RC6_bit
0x0007       [0]    RC7_bit
0x0007       [0]    RC4_bit
0x0007       [0]    RC1_bit
0x0007       [0]    RC2_bit
0x0007       [0]    RC3_bit
0x000A       [1]    PCLATH
0x000B       [1]    INTCON
0x000B       [0]    T0IE_bit
0x000B       [0]    PEIE_bit
0x000B       [0]    GIE_bit
0x000B       [0]    TMR0IF_bit
0x000B       [0]    INTF_bit
0x000B       [0]    RBIE_bit
0x000B       [0]    T0IF_bit
0x000B       [0]    RBIF_bit
0x000B       [0]    TMR0IE_bit
0x000B       [0]    INTE_bit
0x000C       [0]    TMR2IF_bit
0x000C       [0]    RCIF_bit
0x000C       [1]    PIR1
0x000C       [0]    TMR1IF_bit
0x000C       [0]    TXIF_bit
0x000C       [0]    CCP1IF_bit
0x000C       [0]    ADIF_bit
0x000C       [0]    SSPIF_bit
0x000D       [1]    PIR2
0x000D       [0]    CCP2IF_bit
0x000D       [0]    EEIF_bit
0x000D       [0]    CMIF_bit
0x000D       [0]    BCLIF_bit
0x000E       [1]    TMR1L
0x000F       [1]    TMR1H
0x0010       [0]    TMR1CS_bit
0x0010       [0]    T1SYNC_bit
0x0010       [1]    T1CON
0x0010       [0]    TMR1ON_bit
0x0010       [0]    T1INSYNC_bit
0x0010       [0]    T1CKPS0_bit
0x0010       [0]    T1CKPS1_bit
0x0010       [0]    NOT_T1SYNC_bit
0x0010       [0]    T1OSCEN_bit
0x0011       [1]    TMR2
0x0012       [1]    T2CON
0x0012       [0]    TOUTPS1_bit
0x0012       [0]    TOUTPS2_bit
0x0012       [0]    TOUTPS0_bit
0x0012       [0]    T2CKPS0_bit
0x0012       [0]    T2CKPS1_bit
0x0012       [0]    TMR2ON_bit
0x0012       [0]    TOUTPS3_bit
0x0013       [1]    SSPBUF
0x0014       [0]    SSPM3_bit
0x0014       [0]    CKP_bit
0x0014       [0]    WCOL_bit
0x0014       [1]    SSPCON
0x0014       [0]    SSPM2_bit
0x0014       [0]    SSPM1_bit
0x0014       [0]    SSPM0_bit
0x0014       [0]    SSPEN_bit
0x0014       [0]    SSPOV_bit
0x0015       [1]    CCPR1L
0x0015       [2]    CCPR1
0x0016       [1]    CCPR1H
0x0017       [0]    CCP1M2_bit
0x0017       [0]    CCP1M1_bit
0x0017       [0]    CCP1M0_bit
0x0017       [0]    CCP1X_bit
0x0017       [0]    CCP1Y_bit
0x0017       [0]    CCP1M3_bit
0x0017       [1]    CCP1CON
0x0018       [0]    FERR_bit
0x0018       [0]    ADDEN_bit
0x0018       [0]    OERR_bit
0x0018       [0]    RCD8_bit
0x0018       [0]    RX9D_bit
0x0018       [0]    RC9_bit
0x0018       [0]    SREN_bit
0x0018       [1]    RCSTA
0x0018       [0]    RC8_9_bit
0x0018       [0]    NOT_RC8_bit
0x0018       [0]    RX9_bit
0x0018       [0]    CREN_bit
0x0018       [0]    SPEN_bit
0x0019       [1]    TXREG
0x001A       [1]    RCREG
0x001B       [1]    CCPR2L
0x001B       [2]    CCPR2
0x001C       [1]    CCPR2H
0x001D       [0]    CCP2M1_bit
0x001D       [0]    CCP2M0_bit
0x001D       [0]    CCP2M2_bit
0x001D       [0]    CCP2X_bit
0x001D       [1]    CCP2CON
0x001D       [0]    CCP2Y_bit
0x001D       [0]    CCP2M3_bit
0x001E       [1]    ADRESH
0x001F       [0]    CHS0_bit
0x001F       [0]    GO_bit
0x001F       [0]    ADON_bit
0x001F       [0]    GO_DONE_bit
0x001F       [0]    NOT_DONE_bit
0x001F       [0]    CHS1_bit
0x001F       [1]    ADCON0
0x001F       [0]    ADCS1_bit
0x001F       [0]    CHS2_bit
0x001F       [0]    ADCS0_bit
0x0021       [1]    _a_segundos
0x0022       [1]    _segundos
0x0023       [1]    _horas
0x0024       [1]    _a_minutos
0x0025       [1]    _minutos
0x0026       [1]    _a_horas
0x0027       [9]    ?lstr2_source_file_PICmid_proj02
0x0030       [9]    ?lstr1_source_file_PICmid_proj02
0x0039       [2]    _counter_T0
0x003B       [1]    _text2
0x003C       [1]    _a_dias
0x003D       [1]    _dias
0x003E       [1]    _text1
0x003F       [1]    _ctrl_watch
0x0040       [1]    _flagsA
0x0041       [2]    ___DoICPAddr
0x0043       [1]    ___saveSTATUS
0x0044       [0]    __Lib_Lcd_cmd_status
0x0045       [1]    ___savePCLATH
0x0046       [1]    FLOC__disp_horario
0x0046       [1]    ajusta_alarme_i_L0
0x0046       [1]    FLOC__disp_alarme
0x0046       [1]    ajusta_relogio_i_L0
0x0047       [1]    FARG_Lcd_Chr_row
0x0047       [1]    FARG_Lcd_Chr_CP_out_char
0x0048       [1]    FARG_Lcd_Chr_column
0x0049       [1]    FARG_Lcd_Chr_out_char
0x004A       [1]    FARG_Lcd_Cmd_out_char
0x0070       [1]    R0
0x0071       [1]    R1
0x0072       [1]    R2
0x0073       [1]    R3
0x0074       [1]    R4
0x0075       [1]    R5
0x0076       [1]    R6
0x0077       [1]    R7
0x0078       [1]    R8
0x0079       [1]    R9
0x007A       [1]    R10
0x007B       [1]    R11
0x007C       [1]    R12
0x007D       [1]    R13
0x007E       [1]    R14
0x007F       [1]    R15
0x0081       [0]    T0SE_bit
0x0081       [0]    PSA_bit
0x0081       [0]    INTEDG_bit
0x0081       [0]    T0CS_bit
0x0081       [0]    PS2_bit
0x0081       [1]    OPTION_REG
0x0081       [0]    NOT_RBPU_bit
0x0081       [0]    PS1_bit
0x0081       [0]    PS0_bit
0x0085       [0]    TRISA2_bit
0x0085       [0]    TRISA0_bit
0x0085       [0]    TRISA1_bit
0x0085       [0]    TRISA3_bit
0x0085       [1]    TRISA
0x0085       [0]    TRISA5_bit
0x0085       [0]    TRISA4_bit
0x0086       [0]    TRISB2_bit
0x0086       [0]    TRISB3_bit
0x0086       [0]    TRISB0_bit
0x0086       [0]    TRISB1_bit
0x0086       [0]    TRISB4_bit
0x0086       [0]    TRISB7_bit
0x0086       [1]    TRISB
0x0086       [0]    TRISB5_bit
0x0086       [0]    TRISB6_bit
0x0087       [0]    LCD_D4_Direction
0x0087       [0]    LCD_EN_Direction
0x0087       [0]    LCD_RS_Direction
0x0087       [0]    LCD_D5_Direction
0x0087       [0]    LCD_D7_Direction
0x0087       [1]    TRISC
0x0087       [0]    LCD_D6_Direction
0x0087       [0]    TRISC0_bit
0x0087       [0]    TRISC5_bit
0x0087       [0]    TRISC4_bit
0x0087       [0]    TRISC3_bit
0x0087       [0]    TRISC6_bit
0x0087       [0]    TRISC1_bit
0x0087       [0]    TRISC2_bit
0x0087       [0]    TRISC7_bit
0x008C       [1]    PIE1
0x008C       [0]    TMR1IE_bit
0x008C       [0]    TMR2IE_bit
0x008C       [0]    RCIE_bit
0x008C       [0]    TXIE_bit
0x008C       [0]    ADIE_bit
0x008C       [0]    CCP1IE_bit
0x008C       [0]    SSPIE_bit
0x008D       [0]    CCP2IE_bit
0x008D       [0]    BCLIE_bit
0x008D       [0]    CMIE_bit
0x008D       [1]    PIE2
0x008D       [0]    EEIE_bit
0x008E       [1]    PCON
0x008E       [0]    NOT_BOR_bit
0x008E       [0]    NOT_BO_bit
0x008E       [0]    NOT_POR_bit
0x0091       [0]    RSEN_bit
0x0091       [0]    PEN_bit
0x0091       [1]    SSPCON2
0x0091       [0]    SEN_bit
0x0091       [0]    RCEN_bit
0x0091       [0]    ACKSTAT_bit
0x0091       [0]    GCEN_bit
0x0091       [0]    ACKEN_bit
0x0091       [0]    ACKDT_bit
0x0092       [1]    PR2
0x0093       [1]    SSPADD
0x0094       [0]    I2C_STOP__bit
0x0094       [0]    P_bit
0x0094       [0]    D_A_bit
0x0094       [0]    DATA_ADDRESS_bit
0x0094       [0]    S_bit
0x0094       [0]    NOT_W_bit
0x0094       [0]    NOT_WRITE_bit
0x0094       [0]    R_W_bit
0x0094       [0]    I2C_START__bit
0x0094       [0]    R_bit
0x0094       [0]    I2C_READ_bit
0x0094       [0]    I2C_DATA_bit
0x0094       [0]    NOT_A_bit
0x0094       [0]    NOT_ADDRESS_bit
0x0094       [0]    SMP_bit
0x0094       [0]    CKE_bit
0x0094       [0]    D_bit
0x0094       [0]    UA_bit
0x0094       [0]    BF_bit
0x0094       [1]    SSPSTAT
0x0094       [0]    READ_WRITE_bit
0x0098       [0]    NOT_TX8_bit
0x0098       [0]    TXEN_bit
0x0098       [0]    TX8_9_bit
0x0098       [0]    TX9D_bit
0x0098       [0]    TXD8_bit
0x0098       [1]    TXSTA
0x0098       [0]    SYNC_bit
0x0098       [0]    BRGH_bit
0x0098       [0]    TRMT_bit
0x0098       [0]    CSRC_bit
0x0098       [0]    TX9_bit
0x0099       [1]    SPBRG
0x009C       [0]    CIS_bit
0x009C       [0]    C1INV_bit
0x009C       [0]    C2INV_bit
0x009C       [0]    CM1_bit
0x009C       [0]    CM0_bit
0x009C       [0]    CM2_bit
0x009C       [0]    C1OUT_bit
0x009C       [1]    CMCON
0x009C       [0]    C2OUT_bit
0x009D       [0]    CVRR_bit
0x009D       [0]    CVR3_bit
0x009D       [0]    CVR0_bit
0x009D       [0]    CVR1_bit
0x009D       [0]    CVR2_bit
0x009D       [1]    CVRCON
0x009D       [0]    CVREN_bit
0x009D       [0]    CVROE_bit
0x009E       [1]    ADRESL
0x009F       [0]    PCFG1_bit
0x009F       [0]    PCFG2_bit
0x009F       [1]    ADCON1
0x009F       [0]    PCFG0_bit
0x009F       [0]    ADFM_bit
0x009F       [0]    ADCS2_bit
0x009F       [0]    PCFG3_bit
0x010C       [1]    EEDATA
0x010D       [1]    EEADR
0x010E       [1]    EEDATH
0x010F       [1]    EEADRH
0x018C       [0]    WR_bit
0x018C       [0]    RD_bit
0x018C       [0]    WREN_bit
0x018C       [1]    EECON1
0x018C       [0]    EEPGD_bit
0x018C       [0]    WRERR_bit
0x018D       [1]    EECON2
//** Label List: ** 
//----------------------------------------------
  L_despertar0
  L_despertar1
  L_despertar2
  L_despertar3
  L_disp_horario4
  L_disp_horario5
  L_disp_horario6
  L_disp_horario7
  L_disp_horario8
  L_disp_horario9
  L_disp_horario10
  L_disp_horario11
  L_disp_horario12
  L_relogio13
  L_relogio14
  L_relogio15
  L_relogio16
  L_ajusta_relogio17
  L_ajusta_relogio18
  L_ajusta_relogio19
  L_ajusta_relogio20
  L_ajusta_relogio21
  L_ajusta_relogio22
  L_ajusta_relogio23
  L_ajusta_relogio24
  L_ajusta_relogio25
  L_ajusta_relogio26
  L_ajusta_relogio27
  L_ajusta_relogio28
  L_ajusta_relogio29
  L_ajusta_relogio30
  L_ajusta_relogio31
  L_ajusta_relogio32
  L_ajusta_relogio33
  L_ajusta_relogio34
  L_ajusta_relogio35
  L_ajusta_relogio36
  L_ajusta_relogio37
  L_ajusta_relogio38
  L_ajusta_relogio39
  L_ajusta_relogio40
  L_ajusta_relogio41
  L_ajusta_relogio42
  L_ajusta_relogio43
  L_ajusta_relogio44
  L_ajusta_relogio45
  L_ajusta_relogio46
  L_ajusta_relogio47
  L_ajusta_relogio48
  L_ajusta_relogio49
  L_ajusta_relogio50
  L_ajusta_relogio51
  L_ajusta_relogio52
  L_ajusta_relogio53
  L_ajusta_relogio54
  L_ajusta_relogio55
  L_ajusta_relogio56
  L_ajusta_relogio57
  L_ajusta_relogio58
  L_ajusta_relogio59
  L_ajusta_relogio60
  L_ajusta_relogio61
  L_ajusta_relogio62
  L_ajusta_relogio63
  L_ajusta_relogio64
  L_disp_alarme65
  L_disp_alarme66
  L_disp_alarme67
  L_disp_alarme68
  L_disp_alarme69
  L_disp_alarme70
  L_disp_alarme71
  L_disp_alarme72
  L_disp_alarme73
  L_ajusta_alarme74
  L_ajusta_alarme75
  L_ajusta_alarme76
  L_ajusta_alarme77
  L_ajusta_alarme78
  L_ajusta_alarme79
  L_ajusta_alarme80
  L_ajusta_alarme81
  L_ajusta_alarme82
  L_ajusta_alarme83
  L_ajusta_alarme84
  L_ajusta_alarme85
  L_ajusta_alarme86
  L_ajusta_alarme87
  L_ajusta_alarme88
  L_ajusta_alarme89
  L_ajusta_alarme90
  L_ajusta_alarme91
  L_ajusta_alarme92
  L_ajusta_alarme93
  L_ajusta_alarme94
  L_ajusta_alarme95
  L_ajusta_alarme96
  L_ajusta_alarme97
  L_ajusta_alarme98
  L_ajusta_alarme99
  L_ajusta_alarme100
  L_ajusta_alarme101
  L_ajusta_alarme102
  L_ajusta_alarme103
  L_ajusta_alarme104
  L_ajusta_alarme105
  L_ajusta_alarme106
  L_ajusta_alarme107
  L_ajusta_alarme108
  L_ajusta_alarme109
  L_ajusta_alarme110
  L_ajusta_alarme111
  L_ajusta_alarme112
  L_ajusta_alarme113
  L_ajusta_alarme114
  L_ajusta_alarme115
  L_ajusta_alarme116
  L_ajusta_alarme117
  L_ajusta_alarme118
  L_ajusta_alarme119
  L_ajusta_alarme120
  L_ajusta_alarme121
  L__ajusta_relogio122
  L__ajusta_relogio123
  L__ajusta_relogio124
  L__ajusta_alarme125
  L__ajusta_alarme126
  L__ajusta_alarme127
  _despertar
  _disp_horario
  _relogio
  _ajusta_relogio
  L__ajusta_relogio128
  _disp_alarme
  _ajusta_alarme
  L__ajusta_alarme129
  L_interrupt0
  L_interrupt1
  L_main2
  L_main3
  L_main4
  L_main5
  L_main6
  L_main7
  L_main8
  L_main9
  L__main10
  _interrupt
  L__interrupt11
  L__interrupt12
  _main
  L_Delay_10us0
  L_Delay_22us1
  L_Delay_50us2
  L_Delay_80us3
  L_Delay_500us4
  L_Delay_5500us5
  L_Delay_1ms6
  L_Delay_5ms7
  L_Delay_8ms8
  L_Delay_100ms9
  L_Delay_1sec10
  L_boot16_Delay_5ms11
  L_Delay_Cyc12
  L_Delay_Cyc13
  L_VDelay_ms14
  L_VDelay_ms15
  L_VDelay_ms16
  L_VDelay_Advanced_ms17
  L_VDelay_Advanced_ms18
  L_VDelay_Advanced_ms19
  _Get_Fosc_kHz
  _Delay_1us
  _Delay_10us
  _Delay_22us
  _Delay_50us
  _Delay_80us
  _Delay_500us
  _Delay_5500us
  _Delay_1ms
  _Delay_5ms
  _Delay_8ms
  _Delay_100ms
  _Delay_1sec
  _boot16_Delay_5ms
  _Delay_Cyc
  _VDelay_ms
  L__VDelay_ms20
  L__VDelay_ms21
  L__VDelay_ms22
  _VDelay_Advanced_ms
  L__VDelay_Advanced_ms23
  L__VDelay_Advanced_ms24
  L__VDelay_Advanced_ms25
  L_Lcd_Cmd0
  L_Lcd_Cmd1
  L_Lcd_Out_CP2
  L_Lcd_Out_CP3
  L_Lcd_Chr4
  L_Lcd_Chr5
  L_Lcd_Chr6
  L_Lcd_Chr7
  L_Lcd_Chr8
  L_Lcd_Chr9
  L_Lcd_Chr10
  L_Lcd_Out11
  L_Lcd_Out12
  L_Lcd_Out13
  L_Lcd_Out14
  L_Lcd_Out15
  L_Lcd_Out16
  L_Lcd_Out17
  L_Lcd_Out18
  L_Lcd_Out19
  _Lcd_Cmd
  L__Lcd_Cmd20
  L__Lcd_Cmd21
  L__Lcd_Cmd22
  L__Lcd_Cmd23
  L__Lcd_Cmd24
  L__Lcd_Cmd25
  L__Lcd_Cmd26
  L__Lcd_Cmd27
  L__Lcd_Cmd28
  L__Lcd_Cmd29
  L__Lcd_Cmd30
  L__Lcd_Cmd31
  L__Lcd_Cmd32
  L__Lcd_Cmd33
  L__Lcd_Cmd34
  L__Lcd_Cmd35
  L__Lcd_Cmd36
  L__Lcd_Cmd37
  L__Lcd_Cmd38
  L__Lcd_Cmd39
  _Lcd_Chr_CP
  _Lcd_Out_CP
  _Lcd_Chr
  _Lcd_Init
  _Lcd_Out
  L_Div_16x16_S0
  L_Div_16x16_S1
  LOOPS3232A
  SADD22LA
  SOK22LA
  SADD22L8
  SOK22L8
  LOOPS3232B
  SADD22LB
  SOK22LB
  SADD22L16
  SOK22L16
  LOOPS3232C
  SADD22LC
  SOK22LC
  SADD22L24
  SOK22L24
  LOOPS3232D
  SADD22LD
  SOK22LD
  SOK22L
  L_Div_32x32_S6
  L_Div_32x32_S7
  L_Div_32x32_S8
  L_Div_32x32_S9
  FXD3232S
  END_ALL
  CA3232S
  C3232SX
  C3232SX1
  C3232S
  C3232S2
  C3232SX4
  C3232SOK
  C3232SX3
  C3232SX2
  avoid_comfrem
  LOOPU3232A
  UADD22LA
  UOK22LA
  UADD22L8
  UOK22L8
  LOOPU3232B
  UADD22LB
  UOK22LB
  UADD22L16
  UOK22L16
  LOOPU3232C
  UADD22LC
  UOK22LC
  UADD22L24
  UOK22L24
  LOOPU3232D
  UADD22LD
  UOK22LD
  UOK22L
  _NEXT
  _EXIT2
  _LOOP
  _EXIT1
  _IF_FIRST
  _IF_SECOND
  _INVERCE_FIRST
  _MULT
  _INBERSE_SECOND
  _EXIT
  _Mul_8x8_U
  _Mul_16x16_U
  _Div_8x8_U
  _Div_16x16_U
  _Mul_8x8_S
  _Mul_16x16_S
  _Div_16x16_S_L
  _Div_16x16_S
  _Div_8x8_S
  _SDIV3232L
  _COMFREM
  _Div_32x32_S
  _Div_32x32_U
  _Mul_32x32_U
  _Mul_32x32_S
  _CC2D_Loop1
  _____DoICP
  _____DoIFC
  ___CC2DW
  _Swap
  L_despertar0
  L_despertar1
  L_despertar2
  L_despertar3
  L_disp_horario4
  L_disp_horario5
  L_disp_horario6
  L_disp_horario7
  L_disp_horario8
  L_disp_horario9
  L_disp_horario10
  L_disp_horario11
  L_disp_horario12
  L_relogio13
  L_relogio14
  L_relogio15
  L_relogio16
  L_ajusta_relogio17
  L_ajusta_relogio18
  L_ajusta_relogio19
  L_ajusta_relogio20
  L_ajusta_relogio21
  L_ajusta_relogio22
  L_ajusta_relogio23
  L_ajusta_relogio24
  L_ajusta_relogio25
  L_ajusta_relogio26
  L_ajusta_relogio27
  L_ajusta_relogio28
  L_ajusta_relogio29
  L_ajusta_relogio30
  L_ajusta_relogio31
  L_ajusta_relogio32
  L_ajusta_relogio33
  L_ajusta_relogio34
  L_ajusta_relogio35
  L_ajusta_relogio36
  L_ajusta_relogio37
  L_ajusta_relogio38
  L_ajusta_relogio39
  L_ajusta_relogio40
  L_ajusta_relogio41
  L_ajusta_relogio42
  L_ajusta_relogio43
  L_ajusta_relogio44
  L_ajusta_relogio45
  L_ajusta_relogio46
  L_ajusta_relogio47
  L_ajusta_relogio48
  L_ajusta_relogio49
  L_ajusta_relogio50
  L_ajusta_relogio51
  L_ajusta_relogio52
  L_ajusta_relogio53
  L_ajusta_relogio54
  L_ajusta_relogio55
  L_ajusta_relogio56
  L_ajusta_relogio57
  L_ajusta_relogio58
  L_ajusta_relogio59
  L_ajusta_relogio60
  L_ajusta_relogio61
  L_ajusta_relogio62
  L_ajusta_relogio63
  L_ajusta_relogio64
  L_disp_alarme65
  L_disp_alarme66
  L_disp_alarme67
  L_disp_alarme68
  L_disp_alarme69
  L_disp_alarme70
  L_disp_alarme71
  L_disp_alarme72
  L_disp_alarme73
  L_ajusta_alarme74
  L_ajusta_alarme75
  L_ajusta_alarme76
  L_ajusta_alarme77
  L_ajusta_alarme78
  L_ajusta_alarme79
  L_ajusta_alarme80
  L_ajusta_alarme81
  L_ajusta_alarme82
  L_ajusta_alarme83
  L_ajusta_alarme84
  L_ajusta_alarme85
  L_ajusta_alarme86
  L_ajusta_alarme87
  L_ajusta_alarme88
  L_ajusta_alarme89
  L_ajusta_alarme90
  L_ajusta_alarme91
  L_ajusta_alarme92
  L_ajusta_alarme93
  L_ajusta_alarme94
  L_ajusta_alarme95
  L_ajusta_alarme96
  L_ajusta_alarme97
  L_ajusta_alarme98
  L_ajusta_alarme99
  L_ajusta_alarme100
  L_ajusta_alarme101
  L_ajusta_alarme102
  L_ajusta_alarme103
  L_ajusta_alarme104
  L_ajusta_alarme105
  L_ajusta_alarme106
  L_ajusta_alarme107
  L_ajusta_alarme108
  L_ajusta_alarme109
  L_ajusta_alarme110
  L_ajusta_alarme111
  L_ajusta_alarme112
  L_ajusta_alarme113
  L_ajusta_alarme114
  L_ajusta_alarme115
  L_ajusta_alarme116
  L_ajusta_alarme117
  L_ajusta_alarme118
  L_ajusta_alarme119
  L_ajusta_alarme120
  L_ajusta_alarme121
  L__ajusta_relogio122
  L__ajusta_relogio123
  L__ajusta_relogio124
  L__ajusta_alarme125
  L__ajusta_alarme126
  L__ajusta_alarme127
  _despertar
  _disp_horario
  _relogio
  _ajusta_relogio
  L__ajusta_relogio128
  _disp_alarme
  _ajusta_alarme
  L__ajusta_alarme129
  L_interrupt0
  L_interrupt1
  L_main2
  L_main3
  L_main4
  L_main5
  L_main6
  L_main7
  L_main8
  L_main9
  L__main10
  _interrupt
  L__interrupt11
  L__interrupt12
  _main
