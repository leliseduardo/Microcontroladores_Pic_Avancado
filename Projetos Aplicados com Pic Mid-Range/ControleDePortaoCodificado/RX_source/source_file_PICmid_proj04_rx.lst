;  LST file generated by mikroListExporter - v.2.0 
; Date/Time: 12/06/2018 16:47:22
;----------------------------------------------

;Address Opcode 	ASM
0x0000	0x289B      	GOTO       155
_interrupt:
0x0004	0x00FF      	MOVWF      R15
0x0005	0x0E03      	SWAPF      STATUS, 0
0x0006	0x0183      	CLRF       STATUS
0x0007	0x00AB      	MOVWF      ___saveSTATUS
0x0008	0x080A      	MOVF       PCLATH, 0
0x0009	0x00AC      	MOVWF      ___savePCLATH
0x000A	0x018A      	CLRF       PCLATH
0x000B	0x0870      	MOVF       R0, 0
0x000C	0x00A0      	MOVWF      32
0x000D	0x0804      	MOVF       FSR, 0
0x000E	0x00A1      	MOVWF      33
;source_file_PICmid_proj04_rx.c,32 :: 		void interrupt()
;source_file_PICmid_proj04_rx.c,34 :: 		rx_func(&comand, &value, &check);           //verifica comando e valor recebido
0x000F	0x3027      	MOVLW      _comand
0x0010	0x00AD      	MOVWF      FARG_rx_func_cmd
0x0011	0x3029      	MOVLW      _value
0x0012	0x00AE      	MOVWF      FARG_rx_func_val
0x0013	0x3028      	MOVLW      _check
0x0014	0x00AF      	MOVWF      FARG_rx_func_ok
0x0015	0x205C      	CALL       _rx_func
;source_file_PICmid_proj04_rx.c,36 :: 		if(check)                                   //check verdadeiro?
0x0016	0x0828      	MOVF       _check, 0
0x0017	0x1903      	BTFSC      STATUS, 2
0x0018	0x2823      	GOTO       L_interrupt0
;source_file_PICmid_proj04_rx.c,39 :: 		if(comand == 'A')
0x0019	0x0827      	MOVF       _comand, 0
0x001A	0x3A41      	XORLW      65
0x001B	0x1D03      	BTFSS      STATUS, 2
0x001C	0x2823      	GOTO       L_interrupt1
;source_file_PICmid_proj04_rx.c,41 :: 		RB0_bit = value;
0x001D	0x1829      	BTFSC      _value, 0
0x001E	0x2821      	GOTO       L__interrupt26
0x001F	0x1006      	BCF        RB0_bit, 0
0x0020	0x2822      	GOTO       L__interrupt27
L__interrupt26:
0x0021	0x1406      	BSF        RB0_bit, 0
L__interrupt27:
;source_file_PICmid_proj04_rx.c,42 :: 		flag_c = 1;
0x0022	0x142A      	BSF        _flag_c, BitPos(_flag_c+0)
;source_file_PICmid_proj04_rx.c,44 :: 		} //end if
L_interrupt1:
;source_file_PICmid_proj04_rx.c,48 :: 		} //end if ok
L_interrupt0:
;source_file_PICmid_proj04_rx.c,50 :: 		} //end interrupt
L__interrupt25:
0x0023	0x0820      	MOVF       32, 0
0x0024	0x00F0      	MOVWF      R0
0x0025	0x0821      	MOVF       33, 0
0x0026	0x0084      	MOVWF      FSR
0x0027	0x082C      	MOVF       ___savePCLATH, 0
0x0028	0x008A      	MOVWF      PCLATH
0x0029	0x0E2B      	SWAPF      ___saveSTATUS, 0
0x002A	0x0083      	MOVWF      STATUS
0x002B	0x0EFF      	SWAPF      R15, 1
0x002C	0x0E7F      	SWAPF      R15, 0
0x002D	0x0009      	RETFIE
; end of _interrupt
_UART1_Read:
;__Lib_UART_b21.c,20 :: 		
;__Lib_UART_b21.c,23 :: 		
0x002E	0x1283      	BCF        STATUS, 5
0x002F	0x1303      	BCF        STATUS, 6
0x0030	0x081A      	MOVF       RCREG, 0
0x0031	0x00F1      	MOVWF      R1
;__Lib_UART_b21.c,24 :: 		
0x0032	0x1C98      	BTFSS      RCSTA, 1
0x0033	0x2836      	GOTO       L_UART1_Read2
;__Lib_UART_b21.c,25 :: 		
0x0034	0x1218      	BCF        RCSTA, 4
;__Lib_UART_b21.c,26 :: 		
0x0035	0x1618      	BSF        RCSTA, 4
;__Lib_UART_b21.c,27 :: 		
L_UART1_Read2:
;__Lib_UART_b21.c,28 :: 		
0x0036	0x0871      	MOVF       R1, 0
0x0037	0x00F0      	MOVWF      R0
;__Lib_UART_b21.c,29 :: 		
0x0038	0x0008      	RETURN
; end of _UART1_Read
_____DoICP:
;__Lib_System.c,6 :: 		
;__Lib_System.c,9 :: 		
0x0039	0x1283      	BCF        STATUS, 5
0x003A	0x1303      	BCF        STATUS, 6
0x003B	0x0824      	MOVF       ___DoICPAddr+1, 0
0x003C	0x008A      	MOVWF      PCLATH
;__Lib_System.c,10 :: 		
0x003D	0x0823      	MOVF       ___DoICPAddr, 0
0x003E	0x0082      	MOVWF      PCL
;__Lib_System.c,12 :: 		
0x003F	0x0008      	RETURN
; end of _____DoICP
_UART1_Init:
;__Lib_UART_b21.c,2 :: 		
;__Lib_UART_b21.c,5 :: 		
0x0040	0x1683      	BSF        STATUS, 5
0x0041	0x1303      	BCF        STATUS, 6
0x0042	0x1698      	BSF        TXSTA, 5
;__Lib_UART_b21.c,6 :: 		
0x0043	0x3090      	MOVLW      144
0x0044	0x1283      	BCF        STATUS, 5
0x0045	0x0098      	MOVWF      RCSTA
;__Lib_UART_b21.c,7 :: 		
0x0046	0x1683      	BSF        STATUS, 5
0x0047	0x1486      	BSF        TRISB1_bit, 1
;__Lib_UART_b21.c,8 :: 		
0x0048	0x1106      	BCF        TRISB2_bit, 2
;__Lib_UART_b21.c,9 :: 		
L_UART1_Init0:
0x0049	0x1283      	BCF        STATUS, 5
0x004A	0x1E8C      	BTFSS      PIR1, 5
0x004B	0x284F      	GOTO       L_UART1_Init1
;__Lib_UART_b21.c,10 :: 		
0x004C	0x081A      	MOVF       RCREG, 0
0x004D	0x00F0      	MOVWF      R0
0x004E	0x2849      	GOTO       L_UART1_Init0
L_UART1_Init1:
;__Lib_UART_b21.c,11 :: 		
0x004F	0x0008      	RETURN
; end of _UART1_Init
___CC2DW:
;__Lib_System.c,24 :: 		
;__Lib_System.c,27 :: 		
_CC2D_Loop1:
;__Lib_System.c,29 :: 		
0x0050	0x2039      	CALL       _____DoICP
0x0051	0x118A      	BCF        PCLATH, 3
0x0052	0x120A      	BCF        PCLATH, 4
;__Lib_System.c,31 :: 		
0x0053	0x0080      	MOVWF      INDF
;__Lib_System.c,32 :: 		
0x0054	0x0A84      	INCF       FSR, 1
;__Lib_System.c,33 :: 		
0x0055	0x0AA3      	INCF       ___DoICPAddr, 1
;__Lib_System.c,35 :: 		
0x0056	0x1903      	BTFSC      STATUS, 2
;__Lib_System.c,36 :: 		
0x0057	0x0AA4      	INCF       ___DoICPAddr+1, 1
;__Lib_System.c,37 :: 		
0x0058	0x03F0      	DECF       R0, 1
;__Lib_System.c,39 :: 		
0x0059	0x1D03      	BTFSS      STATUS, 2
;__Lib_System.c,40 :: 		
0x005A	0x2850      	GOTO       _CC2D_Loop1
;__Lib_System.c,42 :: 		
0x005B	0x0008      	RETURN
; end of ___CC2DW
_rx_func:
;source_file_PICmid_proj04_rx.c,120 :: 		void rx_func(char *cmd, char *val, char *ok)
;source_file_PICmid_proj04_rx.c,124 :: 		*ok = 0;                                    //bit de verificação
0x005C	0x1283      	BCF        STATUS, 5
0x005D	0x1303      	BCF        STATUS, 6
0x005E	0x082F      	MOVF       FARG_rx_func_ok, 0
0x005F	0x0084      	MOVWF      FSR
0x0060	0x0180      	CLRF       INDF
;source_file_PICmid_proj04_rx.c,126 :: 		if(RCIF_bit)                                //houve interrupção na recepção serial?
0x0061	0x1E8C      	BTFSS      RCIF_bit, 5
0x0062	0x289A      	GOTO       L_rx_func16
;source_file_PICmid_proj04_rx.c,128 :: 		RCIF_bit = 0x00;                         //limpa flag
0x0063	0x128C      	BCF        RCIF_bit, 5
;source_file_PICmid_proj04_rx.c,130 :: 		buffer = Uart1_Read();                   //lê serial e armazena em buffer
0x0064	0x202E      	CALL       _UART1_Read
0x0065	0x0870      	MOVF       R0, 0
0x0066	0x00B0      	MOVWF      rx_func_buffer_L0
;source_file_PICmid_proj04_rx.c,132 :: 		if(start)                                //se start verdadeiro
0x0067	0x0826      	MOVF       _start, 0
0x0068	0x1903      	BTFSC      STATUS, 2
0x0069	0x2893      	GOTO       L_rx_func17
;source_file_PICmid_proj04_rx.c,134 :: 		cnt++;                                //incrementa contador
0x006A	0x0AA5      	INCF       _cnt, 1
;source_file_PICmid_proj04_rx.c,136 :: 		if(cnt == 1) *cmd = buffer;           //atualiza cmd, se contador igual a 1
0x006B	0x0825      	MOVF       _cnt, 0
0x006C	0x3A01      	XORLW      1
0x006D	0x1D03      	BTFSS      STATUS, 2
0x006E	0x2873      	GOTO       L_rx_func18
0x006F	0x082D      	MOVF       FARG_rx_func_cmd, 0
0x0070	0x0084      	MOVWF      FSR
0x0071	0x0830      	MOVF       rx_func_buffer_L0, 0
0x0072	0x0080      	MOVWF      INDF
L_rx_func18:
;source_file_PICmid_proj04_rx.c,138 :: 		if(cnt == 2) *val = buffer;           //atualiza val, se contador igual a 2
0x0073	0x0825      	MOVF       _cnt, 0
0x0074	0x3A02      	XORLW      2
0x0075	0x1D03      	BTFSS      STATUS, 2
0x0076	0x287B      	GOTO       L_rx_func19
0x0077	0x082E      	MOVF       FARG_rx_func_val, 0
0x0078	0x0084      	MOVWF      FSR
0x0079	0x0830      	MOVF       rx_func_buffer_L0, 0
0x007A	0x0080      	MOVWF      INDF
L_rx_func19:
;source_file_PICmid_proj04_rx.c,140 :: 		if(cnt == 3)                          //contador igual a 3?
0x007B	0x0825      	MOVF       _cnt, 0
0x007C	0x3A03      	XORLW      3
0x007D	0x1D03      	BTFSS      STATUS, 2
0x007E	0x2892      	GOTO       L_rx_func20
;source_file_PICmid_proj04_rx.c,143 :: 		start    = 0x00;                   //limpa start
0x007F	0x01A6      	CLRF       _start
;source_file_PICmid_proj04_rx.c,145 :: 		if(checksum == ~(char)(*cmd + *val)) *ok = 1; //seta ok, se checksum estiver correto
0x0080	0x082D      	MOVF       FARG_rx_func_cmd, 0
0x0081	0x0084      	MOVWF      FSR
0x0082	0x0800      	MOVF       INDF, 0
0x0083	0x00F0      	MOVWF      R0
0x0084	0x082E      	MOVF       FARG_rx_func_val, 0
0x0085	0x0084      	MOVWF      FSR
0x0086	0x0800      	MOVF       INDF, 0
0x0087	0x07F0      	ADDWF      R0, 1
0x0088	0x0970      	COMF       R0, 0
0x0089	0x00F1      	MOVWF      R1
0x008A	0x0830      	MOVF       rx_func_buffer_L0, 0
0x008B	0x0671      	XORWF      R1, 0
0x008C	0x1D03      	BTFSS      STATUS, 2
0x008D	0x2892      	GOTO       L_rx_func21
0x008E	0x082F      	MOVF       FARG_rx_func_ok, 0
0x008F	0x0084      	MOVWF      FSR
0x0090	0x3001      	MOVLW      1
0x0091	0x0080      	MOVWF      INDF
L_rx_func21:
;source_file_PICmid_proj04_rx.c,147 :: 		} //end if cnt 3
L_rx_func20:
;source_file_PICmid_proj04_rx.c,149 :: 		} //end if start
0x0092	0x289A      	GOTO       L_rx_func22
L_rx_func17:
;source_file_PICmid_proj04_rx.c,153 :: 		if(buffer == 0xFF)                    //buffer completo?
0x0093	0x0830      	MOVF       rx_func_buffer_L0, 0
0x0094	0x3AFF      	XORLW      255
0x0095	0x1D03      	BTFSS      STATUS, 2
0x0096	0x289A      	GOTO       L_rx_func23
;source_file_PICmid_proj04_rx.c,155 :: 		start = 0x01;                      //seta start
0x0097	0x3001      	MOVLW      1
0x0098	0x00A6      	MOVWF      _start
;source_file_PICmid_proj04_rx.c,156 :: 		cnt   = 0x00;                      //reinicia contador
0x0099	0x01A5      	CLRF       _cnt
;source_file_PICmid_proj04_rx.c,158 :: 		} //end if buffer
L_rx_func23:
;source_file_PICmid_proj04_rx.c,160 :: 		} //end else
L_rx_func22:
;source_file_PICmid_proj04_rx.c,162 :: 		} //end if RCIF
L_rx_func16:
;source_file_PICmid_proj04_rx.c,164 :: 		} //end rx_func
0x009A	0x0008      	RETURN
; end of _rx_func
_main:
0x009B	0x3001      	MOVLW      1
0x009C	0x1283      	BCF        STATUS, 5
0x009D	0x1303      	BCF        STATUS, 6
0x009E	0x00A2      	MOVWF      _m_control
;source_file_PICmid_proj04_rx.c,55 :: 		void main()
;source_file_PICmid_proj04_rx.c,57 :: 		CMCON = 0x07;                              //Desabilita comparadores
0x009F	0x3007      	MOVLW      7
0x00A0	0x009F      	MOVWF      CMCON
;source_file_PICmid_proj04_rx.c,58 :: 		TRISB = 0xCE;                              //Configura RB0, RB4 e RB5 como saída
0x00A1	0x30CE      	MOVLW      206
0x00A2	0x1683      	BSF        STATUS, 5
0x00A3	0x0086      	MOVWF      TRISB
;source_file_PICmid_proj04_rx.c,59 :: 		PORTB = 0xCE;                              //Inicializa PORTB
0x00A4	0x30CE      	MOVLW      206
0x00A5	0x1283      	BCF        STATUS, 5
0x00A6	0x0086      	MOVWF      PORTB
;source_file_PICmid_proj04_rx.c,61 :: 		flag_c = 0x00;
0x00A7	0x102A      	BCF        _flag_c, BitPos(_flag_c+0)
;source_file_PICmid_proj04_rx.c,63 :: 		RCIE_bit = 0x01;                           //habilita interrupção da recepção serial
0x00A8	0x1683      	BSF        STATUS, 5
0x00A9	0x168C      	BSF        RCIE_bit, 5
;source_file_PICmid_proj04_rx.c,64 :: 		GIE_bit  = 0x01;                           //habilita interrupção global
0x00AA	0x178B      	BSF        GIE_bit, 7
;source_file_PICmid_proj04_rx.c,65 :: 		PEIE_Bit = 0x01;                           //habilita interrupção dos periféricos
0x00AB	0x170B      	BSF        PEIE_bit, 6
;source_file_PICmid_proj04_rx.c,67 :: 		UART1_Init(1200);                          //Inicializa UART1 com 1200 baud rate
0x00AC	0x30CF      	MOVLW      207
0x00AD	0x0099      	MOVWF      SPBRG
0x00AE	0x1518      	BSF        TXSTA, 2
0x00AF	0x2040      	CALL       _UART1_Init
;source_file_PICmid_proj04_rx.c,68 :: 		delay_ms(100);                             //aguarda 100ms
0x00B0	0x3082      	MOVLW      130
0x00B1	0x00FC      	MOVWF      R12
0x00B2	0x30DD      	MOVLW      221
0x00B3	0x00FD      	MOVWF      R13
L_main2:
0x00B4	0x0BFD      	DECFSZ     R13, 1
0x00B5	0x28B4      	GOTO       L_main2
0x00B6	0x0BFC      	DECFSZ     R12, 1
0x00B7	0x28B4      	GOTO       L_main2
0x00B8	0x0000      	NOP
0x00B9	0x0000      	NOP
;source_file_PICmid_proj04_rx.c,72 :: 		while(1)                                  //Loop Infinito
L_main3:
;source_file_PICmid_proj04_rx.c,75 :: 		if(RB0_bit && flag_c)
0x00BA	0x1C06      	BTFSS      RB0_bit, 0
0x00BB	0x28D3      	GOTO       L_main7
0x00BC	0x1C2A      	BTFSS      _flag_c, BitPos(_flag_c+0)
0x00BD	0x28D3      	GOTO       L_main7
L__main24:
;source_file_PICmid_proj04_rx.c,77 :: 		flag_c = 0;
0x00BE	0x102A      	BCF        _flag_c, BitPos(_flag_c+0)
;source_file_PICmid_proj04_rx.c,78 :: 		m_control += 1;
0x00BF	0x0AA2      	INCF       _m_control, 1
;source_file_PICmid_proj04_rx.c,79 :: 		delay_ms(200);
0x00C0	0x3002      	MOVLW      2
0x00C1	0x00FB      	MOVWF      R11
0x00C2	0x3004      	MOVLW      4
0x00C3	0x00FC      	MOVWF      R12
0x00C4	0x30BA      	MOVLW      186
0x00C5	0x00FD      	MOVWF      R13
L_main8:
0x00C6	0x0BFD      	DECFSZ     R13, 1
0x00C7	0x28C6      	GOTO       L_main8
0x00C8	0x0BFC      	DECFSZ     R12, 1
0x00C9	0x28C6      	GOTO       L_main8
0x00CA	0x0BFB      	DECFSZ     R11, 1
0x00CB	0x28C6      	GOTO       L_main8
0x00CC	0x0000      	NOP
;source_file_PICmid_proj04_rx.c,81 :: 		if(m_control > 4) m_control = 1;
0x00CD	0x0822      	MOVF       _m_control, 0
0x00CE	0x3C04      	SUBLW      4
0x00CF	0x1803      	BTFSC      STATUS, 0
0x00D0	0x28D3      	GOTO       L_main9
0x00D1	0x3001      	MOVLW      1
0x00D2	0x00A2      	MOVWF      _m_control
L_main9:
;source_file_PICmid_proj04_rx.c,83 :: 		} //end if value
L_main7:
;source_file_PICmid_proj04_rx.c,87 :: 		switch(m_control)
0x00D3	0x28E0      	GOTO       L_main10
;source_file_PICmid_proj04_rx.c,89 :: 		case 1:
L_main12:
;source_file_PICmid_proj04_rx.c,90 :: 		RB4_bit = 0x00;
0x00D4	0x1206      	BCF        RB4_bit, 4
;source_file_PICmid_proj04_rx.c,91 :: 		RB5_bit = 0x00;
0x00D5	0x1286      	BCF        RB5_bit, 5
;source_file_PICmid_proj04_rx.c,92 :: 		break;
0x00D6	0x28F0      	GOTO       L_main11
;source_file_PICmid_proj04_rx.c,93 :: 		case 2:
L_main13:
;source_file_PICmid_proj04_rx.c,94 :: 		RB4_bit = 0x01;
0x00D7	0x1606      	BSF        RB4_bit, 4
;source_file_PICmid_proj04_rx.c,95 :: 		RB5_bit = 0x00;
0x00D8	0x1286      	BCF        RB5_bit, 5
;source_file_PICmid_proj04_rx.c,96 :: 		break;
0x00D9	0x28F0      	GOTO       L_main11
;source_file_PICmid_proj04_rx.c,97 :: 		case 3:
L_main14:
;source_file_PICmid_proj04_rx.c,98 :: 		RB4_bit = 0x00;
0x00DA	0x1206      	BCF        RB4_bit, 4
;source_file_PICmid_proj04_rx.c,99 :: 		RB5_bit = 0x00;
0x00DB	0x1286      	BCF        RB5_bit, 5
;source_file_PICmid_proj04_rx.c,100 :: 		break;
0x00DC	0x28F0      	GOTO       L_main11
;source_file_PICmid_proj04_rx.c,101 :: 		case 4:
L_main15:
;source_file_PICmid_proj04_rx.c,102 :: 		RB4_bit = 0x00;
0x00DD	0x1206      	BCF        RB4_bit, 4
;source_file_PICmid_proj04_rx.c,103 :: 		RB5_bit = 0x01;
0x00DE	0x1686      	BSF        RB5_bit, 5
;source_file_PICmid_proj04_rx.c,104 :: 		break;
0x00DF	0x28F0      	GOTO       L_main11
;source_file_PICmid_proj04_rx.c,107 :: 		} //end switch
L_main10:
0x00E0	0x0822      	MOVF       _m_control, 0
0x00E1	0x3A01      	XORLW      1
0x00E2	0x1903      	BTFSC      STATUS, 2
0x00E3	0x28D4      	GOTO       L_main12
0x00E4	0x0822      	MOVF       _m_control, 0
0x00E5	0x3A02      	XORLW      2
0x00E6	0x1903      	BTFSC      STATUS, 2
0x00E7	0x28D7      	GOTO       L_main13
0x00E8	0x0822      	MOVF       _m_control, 0
0x00E9	0x3A03      	XORLW      3
0x00EA	0x1903      	BTFSC      STATUS, 2
0x00EB	0x28DA      	GOTO       L_main14
0x00EC	0x0822      	MOVF       _m_control, 0
0x00ED	0x3A04      	XORLW      4
0x00EE	0x1903      	BTFSC      STATUS, 2
0x00EF	0x28DD      	GOTO       L_main15
L_main11:
;source_file_PICmid_proj04_rx.c,109 :: 		} //end while
0x00F0	0x28BA      	GOTO       L_main3
;source_file_PICmid_proj04_rx.c,111 :: 		} //end main
0x00F1	0x28F1      	GOTO       $+0
; end of _main
Symbol List:
//** Routines locations **
//ADDRESS    SIZE    PROCEDURE
//----------------------------------------------
0x0004      [42]    _interrupt
0x002E      [11]    _UART1_Read
0x0039       [7]    _____DoICP
0x0040      [16]    _UART1_Init
0x0050      [12]    ___CC2DW
0x005C      [63]    _rx_func
0x009B      [87]    _main
//** Variables locations ** 
//ADDRESS    SIZE    VARIABLE
//----------------------------------------------
0x0000       [1]    INDF
0x0001       [1]    TMR0
0x0002       [1]    PCL
0x0003       [0]    NOT_PD_bit
0x0003       [0]    RP0_bit
0x0003       [0]    C_bit
0x0003       [0]    NOT_TO_bit
0x0003       [1]    STATUS
0x0003       [0]    Z_bit
0x0003       [0]    DC_bit
0x0003       [0]    RP1_bit
0x0003       [0]    IRP_bit
0x0004       [1]    FSR
0x0004       [1]    FSRPTR
0x0005       [0]    RA4_bit
0x0005       [0]    RA0_bit
0x0005       [0]    RA7_bit
0x0005       [0]    RA1_bit
0x0005       [0]    RA6_bit
0x0005       [0]    RA5_bit
0x0005       [0]    RA2_bit
0x0005       [1]    PORTA
0x0005       [0]    RA3_bit
0x0006       [0]    RB0_bit
0x0006       [0]    RB2_bit
0x0006       [0]    RB7_bit
0x0006       [0]    RB1_bit
0x0006       [0]    RB3_bit
0x0006       [0]    RB6_bit
0x0006       [1]    PORTB
0x0006       [0]    RB5_bit
0x0006       [0]    RB4_bit
0x000A       [1]    PCLATH
0x000B       [0]    RBIE_bit
0x000B       [0]    INTF_bit
0x000B       [0]    T0IF_bit
0x000B       [1]    INTCON
0x000B       [0]    PEIE_bit
0x000B       [0]    T0IE_bit
0x000B       [0]    GIE_bit
0x000B       [0]    INTE_bit
0x000B       [0]    RBIF_bit
0x000C       [0]    TMR2IF_bit
0x000C       [0]    RCIF_bit
0x000C       [1]    PIR1
0x000C       [0]    CMIF_bit
0x000C       [0]    TMR1IF_bit
0x000C       [0]    TXIF_bit
0x000C       [0]    EEIF_bit
0x000C       [0]    CCP1IF_bit
0x000E       [1]    TMR1L
0x000F       [1]    TMR1H
0x0010       [0]    T1OSCEN_bit
0x0010       [0]    NOT_T1SYNC_bit
0x0010       [0]    T1CKPS1_bit
0x0010       [0]    T1CKPS0_bit
0x0010       [0]    TMR1ON_bit
0x0010       [1]    T1CON
0x0010       [0]    TMR1CS_bit
0x0011       [1]    TMR2
0x0012       [0]    T2CKPS1_bit
0x0012       [0]    T2CKPS0_bit
0x0012       [0]    TOUTPS2_bit
0x0012       [0]    TOUTPS3_bit
0x0012       [1]    T2CON
0x0012       [0]    TMR2ON_bit
0x0012       [0]    TOUTPS0_bit
0x0012       [0]    TOUTPS1_bit
0x0015       [1]    CCPR1L
0x0015       [2]    CCPR1
0x0016       [1]    CCPR1H
0x0017       [0]    CCP1M3_bit
0x0017       [0]    CCP1X_bit
0x0017       [1]    CCP1CON
0x0017       [0]    CCP1Y_bit
0x0017       [0]    CCP1M2_bit
0x0017       [0]    CCP1M1_bit
0x0017       [0]    CCP1M0_bit
0x0018       [0]    OERR_bit
0x0018       [0]    RX9D_bit
0x0018       [1]    RCSTA
0x0018       [0]    SREN_bit
0x0018       [0]    RX9_bit
0x0018       [0]    SPEN_bit
0x0018       [0]    ADEN_bit
0x0018       [0]    CREN_bit
0x0018       [0]    FERR_bit
0x0019       [1]    TXREG
0x001A       [1]    RCREG
0x001F       [0]    CM0_bit
0x001F       [1]    CMCON
0x001F       [0]    C2INV_bit
0x001F       [0]    C1OUT_bit
0x001F       [0]    C2OUT_bit
0x001F       [0]    C1INV_bit
0x001F       [0]    CM1_bit
0x001F       [0]    CM2_bit
0x001F       [0]    CIS_bit
0x0022       [1]    _m_control
0x0023       [2]    ___DoICPAddr
0x0025       [1]    _cnt
0x0026       [1]    _start
0x0027       [1]    _comand
0x0028       [1]    _check
0x0029       [1]    _value
0x002A       [0]    _flag_c
0x002B       [1]    ___saveSTATUS
0x002C       [1]    ___savePCLATH
0x002D       [1]    FARG_rx_func_cmd
0x002E       [1]    FARG_rx_func_val
0x002F       [1]    FARG_rx_func_ok
0x0030       [1]    rx_func_buffer_L0
0x0070       [1]    R0
0x0071       [1]    R1
0x0072       [1]    R2
0x0073       [1]    R3
0x0074       [1]    R4
0x0075       [1]    R5
0x0076       [1]    R6
0x0077       [1]    R7
0x0078       [1]    R8
0x0079       [1]    R9
0x007A       [1]    R10
0x007B       [1]    R11
0x007C       [1]    R12
0x007D       [1]    R13
0x007E       [1]    R14
0x007F       [1]    R15
0x0081       [0]    T0CS_bit
0x0081       [0]    T0SE_bit
0x0081       [0]    PSA_bit
0x0081       [0]    INTEDG_bit
0x0081       [0]    NOT_RBPU_bit
0x0081       [1]    OPTION_REG
0x0081       [0]    PS0_bit
0x0081       [0]    PS2_bit
0x0081       [0]    PS1_bit
0x0085       [0]    TRISA3_bit
0x0085       [0]    TRISA0_bit
0x0085       [0]    TRISA1_bit
0x0085       [0]    TRISA2_bit
0x0085       [0]    TRISA7_bit
0x0085       [0]    TRISA5_bit
0x0085       [0]    TRISA6_bit
0x0085       [0]    TRISA4_bit
0x0085       [1]    TRISA
0x0086       [0]    TRISB1_bit
0x0086       [0]    TRISB2_bit
0x0086       [1]    TRISB
0x0086       [0]    TRISB0_bit
0x0086       [0]    TRISB6_bit
0x0086       [0]    TRISB7_bit
0x0086       [0]    TRISB5_bit
0x0086       [0]    TRISB3_bit
0x0086       [0]    TRISB4_bit
0x008C       [0]    TMR2IE_bit
0x008C       [0]    CCP1IE_bit
0x008C       [1]    PIE1
0x008C       [0]    TMR1IE_bit
0x008C       [0]    TXIE_bit
0x008C       [0]    EEIE_bit
0x008C       [0]    CMIE_bit
0x008C       [0]    RCIE_bit
0x008E       [0]    NOT_BO_bit
0x008E       [0]    NOT_POR_bit
0x008E       [0]    NOT_BOD_bit
0x008E       [0]    NOT_BOR_bit
0x008E       [1]    PCON
0x008E       [0]    OSCF_bit
0x0092       [1]    PR2
0x0098       [0]    TX9_bit
0x0098       [0]    TXEN_bit
0x0098       [1]    TXSTA
0x0098       [0]    CSRC_bit
0x0098       [0]    SYNC_bit
0x0098       [0]    TRMT_bit
0x0098       [0]    TX9D_bit
0x0098       [0]    BRGH_bit
0x0099       [1]    SPBRG
0x009A       [1]    EEDATA
0x009B       [1]    EEADR
0x009C       [1]    EECON1
0x009C       [0]    WREN_bit
0x009C       [0]    WRERR_bit
0x009C       [0]    RD_bit
0x009C       [0]    WR_bit
0x009D       [1]    EECON2
0x009F       [0]    VR1_bit
0x009F       [0]    VR0_bit
0x009F       [0]    VROE_bit
0x009F       [0]    VREN_bit
0x009F       [1]    VRCON
0x009F       [0]    VR3_bit
0x009F       [0]    VR2_bit
0x009F       [0]    VRR_bit
//** Label List: ** 
//----------------------------------------------
  L_interrupt0
  L_interrupt1
  L_main2
  L_main3
  L_main4
  L_main5
  L_main6
  L_main7
  L_main8
  L_main9
  L_main10
  L_main11
  L_main12
  L_main13
  L_main14
  L_main15
  L_rx_func16
  L_rx_func17
  L_rx_func18
  L_rx_func19
  L_rx_func20
  L_rx_func21
  L_rx_func22
  L_rx_func23
  L__main24
  _interrupt
  L__interrupt25
  L__interrupt26
  L__interrupt27
  _main
  _rx_func
  _CC2D_Loop1
  _____DoICP
  _____DoIFC
  ___CC2DW
  _Swap
  L_UART1_Init0
  L_UART1_Init1
  L_UART1_Read2
  L_UART1_Write3
  L_UART1_Write4
  L_UART1_Write_Text5
  L_UART1_Write_Text6
  L_UART1_Read_Text7
  L_UART1_Read_Text8
  L_UART1_Read_Text9
  L_UART1_Read_Text10
  L_UART1_Read_Text11
  L_UART1_Read_Text12
  L_UART1_Read_Text13
  L_UART1_Read_Text14
  L_UART1_Read_Text15
  _UART1_Init
  _UART1_Data_Ready
  _UART1_Read
  _UART1_Tx_Idle
  _UART1_Write
  _UART1_Write_Text
  _UART1_Read_Text
  L_interrupt0
  L_interrupt1
  L_main2
  L_main3
  L_main4
  L_main5
  L_main6
  L_main7
  L_main8
  L_main9
  L_main10
  L_main11
  L_main12
  L_main13
  L_main14
  L_main15
  L_rx_func16
  L_rx_func17
  L_rx_func18
  L_rx_func19
  L_rx_func20
  L_rx_func21
  L_rx_func22
  L_rx_func23
  L__main24
  _interrupt
  L__interrupt25
  L__interrupt26
  L__interrupt27
  _main
  _rx_func
  L_UART1_Init0
  L_UART1_Init1
  L_UART1_Read2
  L_UART1_Write3
  L_UART1_Write4
  L_UART1_Write_Text5
  L_UART1_Write_Text6
  L_UART1_Read_Text7
  L_UART1_Read_Text8
  L_UART1_Read_Text9
  L_UART1_Read_Text10
  L_UART1_Read_Text11
  L_UART1_Read_Text12
  L_UART1_Read_Text13
  L_UART1_Read_Text14
  L_UART1_Read_Text15
  _UART1_Init
  _UART1_Data_Ready
  _UART1_Read
  _UART1_Tx_Idle
  _UART1_Write
  _UART1_Write_Text
  _UART1_Read_Text
