

Microchip MPLAB XC8 Assembler V2.31 build 20201012212115 
                                                                                               Thu Jan 14 23:50:04 2021

Microchip MPLAB XC8 C Compiler v2.31 (Free license) build 20201012212115 Og1 
     1                           	processor	18F2550
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	idataBANK0,global,class=CODE,delta=1,noexec
     6                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
     7                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     8                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
     9                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    10                           	psect	text0,global,reloc=2,class=CODE,delta=1
    11                           	psect	text1,global,reloc=2,class=CODE,delta=1
    12                           	psect	text2,global,reloc=2,class=CODE,delta=1
    13                           	psect	text3,global,reloc=2,class=CODE,delta=1,group=1
    14                           	psect	text4,global,reloc=2,class=CODE,delta=1
    15                           	psect	text5,global,reloc=2,class=CODE,delta=1
    16                           	psect	text6,global,reloc=2,class=CODE,delta=1
    17                           	psect	text7,global,reloc=2,class=CODE,delta=1
    18                           	psect	text8,global,reloc=2,class=CODE,delta=1
    19                           	psect	text9,global,reloc=2,class=CODE,delta=1
    20                           	psect	text10,global,reloc=2,class=CODE,delta=1,group=2
    21                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    22                           	psect	intcode_body,global,reloc=2,class=CODE,delta=1
    23                           	psect	text12,global,reloc=2,class=CODE,delta=1
    24                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    25                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    26                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    27                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=1,noexec
    28                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    29  0000                     
    30                           ; Version 2.20
    31                           ; Generated 12/02/2020 GMT
    32                           ; 
    33                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    34                           ; All rights reserved.
    35                           ; 
    36                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    37                           ; 
    38                           ; Redistribution and use in source and binary forms, with or without modification, are
    39                           ; permitted provided that the following conditions are met:
    40                           ; 
    41                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    42                           ;        conditions and the following disclaimer.
    43                           ; 
    44                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    45                           ;        of conditions and the following disclaimer in the documentation and/or other
    46                           ;        materials provided with the distribution.
    47                           ; 
    48                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    49                           ;        software without specific prior written permission.
    50                           ; 
    51                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    52                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    53                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    54                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    55                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    56                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    57                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    58                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    59                           ; 
    60                           ; 
    61                           ; Code-generator required, PIC18F2550 Definitions
    62                           ; 
    63                           ; SFR Addresses
    64  0000                     
    65                           	psect	idataBANK0
    66  000DC0                     __pidataBANK0:
    67                           	callstack 0
    68                           
    69                           ;initializer for _UARTBUFF
    70  000DC0  20                 	db	32
    71  000DC1  20                 	db	32
    72  000DC2  20                 	db	32
    73  000DC3  20                 	db	32
    74  000DC4  20                 	db	32
    75  000DC5  20                 	db	32
    76  000DC6  20                 	db	32
    77  000DC7  20                 	db	32
    78  000DC8  20                 	db	32
    79  000DC9  20                 	db	32
    80  000DCA  20                 	db	32
    81  000DCB  20                 	db	32
    82  000DCC  20                 	db	32
    83  000DCD  20                 	db	32
    84  000DCE  20                 	db	32
    85  000DCF  20                 	db	32
    86  000DD0  20                 	db	32
    87  000DD1  20                 	db	32
    88  000DD2  20                 	db	32
    89  000DD3  20                 	db	32
    90  000DD4  20                 	db	32
    91  000DD5  20                 	db	32
    92  000DD6  20                 	db	32
    93  000DD7  20                 	db	32
    94  000DD8  20                 	db	32
    95  000DD9  20                 	db	32
    96  000DDA  20                 	db	32
    97  000DDB  20                 	db	32
    98  000DDC  20                 	db	32
    99  000DDD  20                 	db	32
   100  000DDE  20                 	db	32
   101  000DDF  20                 	db	32
   102  000DE0  20                 	db	32
   103  000DE1  20                 	db	32
   104  000DE2  20                 	db	32
   105  000DE3  20                 	db	32
   106  000DE4  20                 	db	32
   107  000DE5  20                 	db	32
   108  000DE6  20                 	db	32
   109  000DE7  20                 	db	32
   110  000DE8  20                 	db	32
   111  000DE9  20                 	db	32
   112  000DEA  20                 	db	32
   113  000DEB  20                 	db	32
   114  000DEC  20                 	db	32
   115  000DED  20                 	db	32
   116  000DEE  20                 	db	32
   117  000DEF  20                 	db	32
   118  000DF0  20                 	db	32
   119  000DF1  20                 	db	32
   120  000DF2  20                 	db	32
   121  000DF3  20                 	db	32
   122  000DF4  20                 	db	32
   123  000DF5  20                 	db	32
   124  000DF6  20                 	db	32
   125  000DF7  20                 	db	32
   126  000DF8  20                 	db	32
   127  000DF9  20                 	db	32
   128  000DFA  20                 	db	32
   129  000DFB  20                 	db	32
   130  000DFC  20                 	db	32
   131  000DFD  20                 	db	32
   132  000DFE  20                 	db	32
   133  000DFF  20                 	db	32
   134  000E00  00                 	db	0
   135  0000                     _LATBbits	set	3978
   136  0000                     _PIE1bits	set	3997
   137  0000                     _INTCONbits	set	4082
   138  0000                     _UCFGbits	set	3951
   139  0000                     _TRISBbits	set	3987
   140  0000                     _OSCCON	set	4051
   141  0000                     _OSCTUNE	set	3995
   142  0000                     _RCREG	set	4014
   143  0000                     _TXREG	set	4013
   144  0000                     _TRISCbits	set	3988
   145  0000                     _RCSTAbits	set	4011
   146  0000                     _TXSTAbits	set	4012
   147  0000                     _SPBRG	set	4015
   148  0000                     _RCIF	set	31989
   149  0000                     _TRMT	set	32097
   150  0000                     _BRGH	set	32098
   151                           
   152                           	psect	smallconst
   153  000800                     __psmallconst:
   154                           	callstack 0
   155  000800  00                 	db	0
   156  000801                     STR_3:
   157  000801  4C                 	db	76	;'L'
   158  000802  6F                 	db	111	;'o'
   159  000803  63                 	db	99	;'c'
   160  000804  61                 	db	97	;'a'
   161  000805  6C                 	db	108	;'l'
   162  000806  69                 	db	105	;'i'
   163  000807  7A                 	db	122	;'z'
   164  000808  61                 	db	97	;'a'
   165  000809  64                 	db	100	;'d'
   166  00080A  6F                 	db	111	;'o'
   167  00080B  00                 	db	0
   168  00080C                     STR_1:
   169  00080C  42                 	db	66	;'B'
   170  00080D  75                 	db	117	;'u'
   171  00080E  66                 	db	102	;'f'
   172  00080F  66                 	db	102	;'f'
   173  000810  65                 	db	101	;'e'
   174  000811  72                 	db	114	;'r'
   175  000812  3A                 	db	58	;':'
   176  000813  20                 	db	32
   177  000814  00                 	db	0
   178  000815                     STR_2:
   179  000815  4C                 	db	76	;'L'
   180  000816  41                 	db	65	;'A'
   181  000817  4D                 	db	77	;'M'
   182  000818  50                 	db	80	;'P'
   183  000819  31                 	db	49	;'1'
   184  00081A  00                 	db	0
   185  00081B  00                 	db	0	; dummy byte at the end
   186  0000                     
   187                           ; #config settings
   188                           
   189                           	psect	cinit
   190  000E3C                     __pcinit:
   191                           	callstack 0
   192  000E3C                     start_initialization:
   193                           	callstack 0
   194  000E3C                     __initialization:
   195                           	callstack 0
   196                           
   197                           ; Initialize objects allocated to BANK0 (65 bytes)
   198                           ; load TBLPTR registers with __pidataBANK0
   199  000E3C  0EC0               	movlw	low __pidataBANK0
   200  000E3E  6EF6               	movwf	tblptrl,c
   201  000E40  0E0D               	movlw	high __pidataBANK0
   202  000E42  6EF7               	movwf	tblptrh,c
   203  000E44  0E00               	movlw	low (__pidataBANK0 shr (0+16))
   204  000E46  6EF8               	movwf	tblptru,c
   205  000E48  EE00  F060         	lfsr	0,__pdataBANK0
   206  000E4C  EE10 F041          	lfsr	1,65
   207  000E50                     copy_data0:
   208  000E50  0009               	tblrd		*+
   209  000E52  CFF5 FFEE          	movff	tablat,postinc0
   210  000E56  50E5               	movf	postdec1,w,c
   211  000E58  50E1               	movf	fsr1l,w,c
   212  000E5A  E1FA               	bnz	copy_data0
   213  000E5C                     end_of_initialization:
   214                           	callstack 0
   215  000E5C                     __end_of__initialization:
   216                           	callstack 0
   217  000E5C  9029               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   218  000E5E  9229               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   219  000E60  0E00               	movlw	low (__Lmediumconst shr (0+16))
   220  000E62  6EF8               	movwf	tblptru,c
   221  000E64  0100               	movlb	0
   222  000E66  EFBB  F005         	goto	_main	;jump to C main() function
   223                           
   224                           	psect	dataBANK0
   225  000060                     __pdataBANK0:
   226                           	callstack 0
   227  000060                     _UARTBUFF:
   228                           	callstack 0
   229  000060                     	ds	65
   230                           
   231                           	psect	cstackCOMRAM
   232  000001                     __pcstackCOMRAM:
   233                           	callstack 0
   234  000001                     UART_Interrupt@temp:
   235                           	callstack 0
   236                           
   237                           ; 1 bytes @ 0x0
   238  000001                     	ds	1
   239  000002                     UART_Interrupt@i:
   240                           	callstack 0
   241                           
   242                           ; 2 bytes @ 0x1
   243  000002                     	ds	2
   244  000004                     ??_interrupcoes:
   245                           
   246                           ; 1 bytes @ 0x3
   247  000004                     	ds	4
   248  000008                     ?_strlen:
   249                           	callstack 0
   250  000008                     ?___aldiv:
   251                           	callstack 0
   252  000008                     UART_Write@data:
   253                           	callstack 0
   254  000008                     delay_ms@delayms:
   255                           	callstack 0
   256  000008                     strlen@s:
   257                           	callstack 0
   258  000008                     ___aldiv@dividend:
   259                           	callstack 0
   260                           
   261                           ; 4 bytes @ 0x7
   262  000008                     	ds	1
   263  000009                     UART_Write_Text@text:
   264                           	callstack 0
   265                           
   266                           ; 2 bytes @ 0x8
   267  000009                     	ds	1
   268  00000A                     delay_ms@i:
   269                           	callstack 0
   270  00000A                     strlen@a:
   271                           	callstack 0
   272                           
   273                           ; 2 bytes @ 0x9
   274  00000A                     	ds	1
   275  00000B                     ??_UART_Write_Text:
   276                           
   277                           ; 1 bytes @ 0xA
   278  00000B                     	ds	1
   279  00000C                     UART_FindOnBuffer@compare:
   280                           	callstack 0
   281  00000C                     UART_ClearOnBuffer@compare:
   282                           	callstack 0
   283  00000C                     delay_ms@j:
   284                           	callstack 0
   285  00000C                     ___aldiv@divisor:
   286                           	callstack 0
   287                           
   288                           ; 4 bytes @ 0xB
   289  00000C                     	ds	1
   290  00000D                     UART_Write_Text@i:
   291                           	callstack 0
   292                           
   293                           ; 2 bytes @ 0xC
   294  00000D                     	ds	1
   295  00000E                     UART_FindOnBuffer@addr:
   296                           	callstack 0
   297  00000E                     UART_ClearOnBuffer@addr:
   298                           	callstack 0
   299                           
   300                           ; 2 bytes @ 0xD
   301  00000E                     	ds	1
   302  00000F                     UART_Write_Text_ln@text:
   303                           	callstack 0
   304                           
   305                           ; 2 bytes @ 0xE
   306  00000F                     	ds	1
   307  000010                     ??_UART_FindOnBuffer:
   308  000010                     ___aldiv@counter:
   309                           	callstack 0
   310  000010                     UART_ClearOnBuffer@finalADDR:
   311                           	callstack 0
   312                           
   313                           ; 2 bytes @ 0xF
   314  000010                     	ds	1
   315  000011                     ___aldiv@sign:
   316                           	callstack 0
   317                           
   318                           ; 1 bytes @ 0x10
   319  000011                     	ds	1
   320  000012                     UART_ClearOnBuffer@i:
   321                           	callstack 0
   322  000012                     ___aldiv@quotient:
   323                           	callstack 0
   324                           
   325                           ; 4 bytes @ 0x11
   326  000012                     	ds	3
   327  000015                     UART_FindOnBuffer@datasize:
   328                           	callstack 0
   329                           
   330                           ; 2 bytes @ 0x14
   331  000015                     	ds	1
   332  000016                     UART_Init@baudrate:
   333                           	callstack 0
   334                           
   335                           ; 4 bytes @ 0x15
   336  000016                     	ds	1
   337  000017                     UART_FindOnBuffer@located:
   338                           	callstack 0
   339                           
   340                           ; 2 bytes @ 0x16
   341  000017                     	ds	2
   342  000019                     UART_FindOnBuffer@i:
   343                           	callstack 0
   344                           
   345                           ; 2 bytes @ 0x18
   346  000019                     	ds	1
   347  00001A                     ??_UART_Init:
   348                           
   349                           ; 1 bytes @ 0x19
   350  00001A                     	ds	1
   351  00001B                     UART_FindOnBuffer@z:
   352                           	callstack 0
   353                           
   354                           ; 2 bytes @ 0x1A
   355  00001B                     	ds	7
   356  000022                     UART_Init@x:
   357                           	callstack 0
   358                           
   359                           ; 2 bytes @ 0x21
   360  000022                     	ds	2
   361  000024                     ??_main:
   362                           
   363                           ; 1 bytes @ 0x23
   364  000024                     	ds	1
   365  000025                     main@FNSTATR:
   366                           	callstack 0
   367                           
   368                           ; 2 bytes @ 0x24
   369  000025                     	ds	2
   370  000027                     main@LocatedADDR:
   371                           	callstack 0
   372                           
   373                           ; 2 bytes @ 0x26
   374  000027                     	ds	2
   375                           
   376 ;;
   377 ;;Main: autosize = 0, tempsize = 1, incstack = 0, save=0
   378 ;;
   379 ;; *************** function _main *****************
   380 ;; Defined at:
   381 ;;		line 45 in file "main.c"
   382 ;; Parameters:    Size  Location     Type
   383 ;;		None
   384 ;; Auto vars:     Size  Location     Type
   385 ;;  temp            5    0        unsigned char [5]
   386 ;;  LocatedADDR     2   38[COMRAM] unsigned int 
   387 ;;  FNSTATR         2   36[COMRAM] short 
   388 ;; Return value:  Size  Location     Type
   389 ;;                  1    wreg      void 
   390 ;; Registers used:
   391 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
   392 ;; Tracked objects:
   393 ;;		On entry : 0/0
   394 ;;		On exit  : 0/0
   395 ;;		Unchanged: 0/0
   396 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   397 ;;      Params:         0       0       0       0       0       0       0       0       0
   398 ;;      Locals:         4       0       0       0       0       0       0       0       0
   399 ;;      Temps:          1       0       0       0       0       0       0       0       0
   400 ;;      Totals:         5       0       0       0       0       0       0       0       0
   401 ;;Total ram usage:        5 bytes
   402 ;; Hardware stack levels required when called:    5
   403 ;; This function calls:
   404 ;;		_UART_ClearOnBuffer
   405 ;;		_UART_FindOnBuffer
   406 ;;		_UART_Write_Text
   407 ;;		_UART_Write_Text_ln
   408 ;;		_delay_ms
   409 ;;		_setup
   410 ;; This function is called by:
   411 ;;		Startup code after reset
   412 ;; This function uses a non-reentrant model
   413 ;;
   414                           
   415                           	psect	text0
   416  000B76                     __ptext0:
   417                           	callstack 0
   418  000B76                     _main:
   419                           	callstack 26
   420  000B76                     
   421                           ;main.c: 47:     char temp[5];;main.c: 48:     unsigned int LocatedADDR = 0;
   422  000B76  0E00               	movlw	0
   423  000B78  6E28               	movwf	(main@LocatedADDR+1)^0,c
   424  000B7A  0E00               	movlw	0
   425  000B7C  6E27               	movwf	main@LocatedADDR^0,c
   426  000B7E                     
   427                           ;main.c: 51:     setup();
   428  000B7E  EC35  F007         	call	_setup	;wreg free
   429  000B82                     l1245:
   430                           
   431                           ;main.c: 56:         LATBbits.LATB7 = !LATBbits.LATB7;
   432  000B82  AE8A               	btfss	138,7,c	;volatile
   433  000B84  EFC6  F005         	goto	u631
   434  000B88  EFCA  F005         	goto	u630
   435  000B8C                     u631:
   436  000B8C  6A24               	clrf	??_main^0,c
   437  000B8E  2A24               	incf	??_main^0,f,c
   438  000B90  EFCB  F005         	goto	u648
   439  000B94                     u630:
   440  000B94  6A24               	clrf	??_main^0,c
   441  000B96                     u648:
   442  000B96  3224               	rrcf	??_main^0,f,c
   443  000B98  3224               	rrcf	??_main^0,f,c
   444  000B9A  508A               	movf	138,w,c	;volatile
   445  000B9C  1824               	xorwf	??_main^0,w,c
   446  000B9E  0B7F               	andlw	-129
   447  000BA0  1824               	xorwf	??_main^0,w,c
   448  000BA2  6E8A               	movwf	138,c	;volatile
   449  000BA4                     
   450                           ;main.c: 57:         delay_ms(1000);
   451  000BA4  0E03               	movlw	3
   452  000BA6  6E09               	movwf	(delay_ms@delayms+1)^0,c
   453  000BA8  0EE8               	movlw	232
   454  000BAA  6E08               	movwf	delay_ms@delayms^0,c
   455  000BAC  EC55  F006         	call	_delay_ms	;wreg free
   456  000BB0                     
   457                           ;main.c: 63:         UART_Write_Text("Buffer: ");
   458  000BB0  0E0C               	movlw	low STR_1
   459  000BB2  6E09               	movwf	UART_Write_Text@text^0,c
   460  000BB4  0E08               	movlw	high STR_1
   461  000BB6  6E0A               	movwf	(UART_Write_Text@text+1)^0,c
   462  000BB8  EC16  F006         	call	_UART_Write_Text	;wreg free
   463  000BBC                     
   464                           ;main.c: 64:         UART_Write_Text_ln(UARTBUFF);
   465  000BBC  0E60               	movlw	low _UARTBUFF
   466  000BBE  6E0F               	movwf	UART_Write_Text_ln@text^0,c
   467  000BC0  0E00               	movlw	high _UARTBUFF
   468  000BC2  6E10               	movwf	(UART_Write_Text_ln@text+1)^0,c
   469  000BC4  EC5F  F007         	call	_UART_Write_Text_ln	;wreg free
   470  000BC8                     
   471                           ;main.c: 66:        FNSTATR = UART_FindOnBuffer("LAMP1", &LocatedADDR);
   472  000BC8  0E15               	movlw	low STR_2
   473  000BCA  6E0C               	movwf	UART_FindOnBuffer@compare^0,c
   474  000BCC  0E08               	movlw	high STR_2
   475  000BCE  6E0D               	movwf	(UART_FindOnBuffer@compare+1)^0,c
   476  000BD0  0E27               	movlw	low main@LocatedADDR
   477  000BD2  6E0E               	movwf	UART_FindOnBuffer@addr^0,c
   478  000BD4  0E00               	movlw	high main@LocatedADDR
   479  000BD6  6E0F               	movwf	(UART_FindOnBuffer@addr+1)^0,c
   480  000BD8  ECA2  F004         	call	_UART_FindOnBuffer	;wreg free
   481  000BDC  B0D8               	btfsc	status,0,c
   482  000BDE  EFF3  F005         	goto	u651
   483  000BE2  EFF6  F005         	goto	u650
   484  000BE6                     u651:
   485  000BE6  0E01               	movlw	1
   486  000BE8  EFF7  F005         	goto	u660
   487  000BEC                     u650:
   488  000BEC  0E00               	movlw	0
   489  000BEE                     u660:
   490  000BEE  6E25               	movwf	main@FNSTATR^0,c
   491  000BF0  6A26               	clrf	(main@FNSTATR+1)^0,c
   492  000BF2                     
   493                           ;main.c: 67:        if(FNSTATR == 1){
   494  000BF2  0425               	decf	main@FNSTATR^0,w,c
   495  000BF4  1026               	iorwf	(main@FNSTATR+1)^0,w,c
   496  000BF6  A4D8               	btfss	status,2,c
   497  000BF8  EF00  F006         	goto	u671
   498  000BFC  EF02  F006         	goto	u670
   499  000C00                     u671:
   500  000C00  EFC1  F005         	goto	l1245
   501  000C04                     u670:
   502  000C04                     
   503                           ;main.c: 68:           UART_Write_Text_ln("Localizado");
   504  000C04  0E01               	movlw	low STR_3
   505  000C06  6E0F               	movwf	UART_Write_Text_ln@text^0,c
   506  000C08  0E08               	movlw	high STR_3
   507  000C0A  6E10               	movwf	(UART_Write_Text_ln@text+1)^0,c
   508  000C0C  EC5F  F007         	call	_UART_Write_Text_ln	;wreg free
   509  000C10                     
   510                           ;main.c: 69:           UART_ClearOnBuffer("LAMP1", LocatedADDR);
   511  000C10  0E15               	movlw	low STR_2
   512  000C12  6E0C               	movwf	UART_ClearOnBuffer@compare^0,c
   513  000C14  0E08               	movlw	high STR_2
   514  000C16  6E0D               	movwf	(UART_ClearOnBuffer@compare+1)^0,c
   515  000C18  C027  F00E         	movff	main@LocatedADDR,UART_ClearOnBuffer@addr
   516  000C1C  C028  F00F         	movff	main@LocatedADDR+1,UART_ClearOnBuffer@addr+1
   517  000C20  ECB4  F006         	call	_UART_ClearOnBuffer	;wreg free
   518  000C24  EFC1  F005         	goto	l1245
   519  000C28  EF07  F000         	goto	start
   520  000C2C                     __end_of_main:
   521                           	callstack 0
   522                           
   523 ;; *************** function _setup *****************
   524 ;; Defined at:
   525 ;;		line 19 in file "main.c"
   526 ;; Parameters:    Size  Location     Type
   527 ;;		None
   528 ;; Auto vars:     Size  Location     Type
   529 ;;		None
   530 ;; Return value:  Size  Location     Type
   531 ;;                  1    wreg      void 
   532 ;; Registers used:
   533 ;;		wreg, status,2, status,0, cstack
   534 ;; Tracked objects:
   535 ;;		On entry : 0/0
   536 ;;		On exit  : 0/0
   537 ;;		Unchanged: 0/0
   538 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   539 ;;      Params:         0       0       0       0       0       0       0       0       0
   540 ;;      Locals:         0       0       0       0       0       0       0       0       0
   541 ;;      Temps:          0       0       0       0       0       0       0       0       0
   542 ;;      Totals:         0       0       0       0       0       0       0       0       0
   543 ;;Total ram usage:        0 bytes
   544 ;; Hardware stack levels used:    1
   545 ;; Hardware stack levels required when called:    4
   546 ;; This function calls:
   547 ;;		_UART_Init
   548 ;; This function is called by:
   549 ;;		_main
   550 ;; This function uses a non-reentrant model
   551 ;;
   552                           
   553                           	psect	text1
   554  000E6A                     __ptext1:
   555                           	callstack 0
   556  000E6A                     _setup:
   557                           	callstack 26
   558  000E6A                     
   559                           ;main.c: 22:     OSCTUNE = 0b10001111;
   560  000E6A  0E8F               	movlw	143
   561  000E6C  6E9B               	movwf	155,c	;volatile
   562                           
   563                           ;main.c: 23:     OSCCON = 0b11110100;
   564  000E6E  0EF4               	movlw	244
   565  000E70  6ED3               	movwf	211,c	;volatile
   566  000E72                     
   567                           ;main.c: 26:     TRISBbits.RB7 = 0;
   568  000E72  9E93               	bcf	147,7,c	;volatile
   569  000E74                     
   570                           ;main.c: 27:     TRISBbits.RB6 = 1;
   571  000E74  8C93               	bsf	147,6,c	;volatile
   572  000E76                     
   573                           ;main.c: 29:     UCFGbits.UTRDIS = 0b1;
   574  000E76  866F               	bsf	111,3,c	;volatile
   575  000E78                     
   576                           ;main.c: 32:     INTCONbits.GIE = 0b1;
   577  000E78  8EF2               	bsf	242,7,c	;volatile
   578  000E7A                     
   579                           ;main.c: 33:     INTCONbits.PEIE = 0b1;
   580  000E7A  8CF2               	bsf	242,6,c	;volatile
   581  000E7C                     
   582                           ;main.c: 34:     PIE1bits.RCIE = 0b1;
   583  000E7C  8A9D               	bsf	157,5,c	;volatile
   584  000E7E                     
   585                           ;main.c: 36:     UART_Init(9600);
   586  000E7E  0E80               	movlw	128
   587  000E80  6E16               	movwf	UART_Init@baudrate^0,c
   588  000E82  0E25               	movlw	37
   589  000E84  6E17               	movwf	(UART_Init@baudrate+1)^0,c
   590  000E86  0E00               	movlw	0
   591  000E88  6E18               	movwf	(UART_Init@baudrate+2)^0,c
   592  000E8A  0E00               	movlw	0
   593  000E8C  6E19               	movwf	(UART_Init@baudrate+3)^0,c
   594  000E8E  EC0E  F004         	call	_UART_Init	;wreg free
   595  000E92  0012               	return		;funcret
   596  000E94                     __end_of_setup:
   597                           	callstack 0
   598                           
   599 ;; *************** function _UART_Init *****************
   600 ;; Defined at:
   601 ;;		line 3 in file "USART_C.c"
   602 ;; Parameters:    Size  Location     Type
   603 ;;  baudrate        4   21[COMRAM] const long 
   604 ;; Auto vars:     Size  Location     Type
   605 ;;  x               2   33[COMRAM] unsigned int 
   606 ;; Return value:  Size  Location     Type
   607 ;;                  2   21[COMRAM] short 
   608 ;; Registers used:
   609 ;;		wreg, status,2, status,0, cstack
   610 ;; Tracked objects:
   611 ;;		On entry : 0/0
   612 ;;		On exit  : 0/0
   613 ;;		Unchanged: 0/0
   614 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   615 ;;      Params:         4       0       0       0       0       0       0       0       0
   616 ;;      Locals:         2       0       0       0       0       0       0       0       0
   617 ;;      Temps:          8       0       0       0       0       0       0       0       0
   618 ;;      Totals:        14       0       0       0       0       0       0       0       0
   619 ;;Total ram usage:       14 bytes
   620 ;; Hardware stack levels used:    1
   621 ;; Hardware stack levels required when called:    3
   622 ;; This function calls:
   623 ;;		___aldiv
   624 ;; This function is called by:
   625 ;;		_setup
   626 ;; This function uses a non-reentrant model
   627 ;;
   628                           
   629                           	psect	text2
   630  00081C                     __ptext2:
   631                           	callstack 0
   632  00081C                     _UART_Init:
   633                           	callstack 26
   634  00081C                     
   635                           ;USART_C.c: 7:     x = (48000000 - baudrate*64)/(baudrate*64);
   636  00081C  C016  F01A         	movff	UART_Init@baudrate,??_UART_Init
   637  000820  C017  F01B         	movff	UART_Init@baudrate+1,??_UART_Init+1
   638  000824  C018  F01C         	movff	UART_Init@baudrate+2,??_UART_Init+2
   639  000828  C019  F01D         	movff	UART_Init@baudrate+3,??_UART_Init+3
   640  00082C  0E06               	movlw	6
   641  00082E                     u435:
   642  00082E  90D8               	bcf	status,0,c
   643  000830  361A               	rlcf	??_UART_Init^0,f,c
   644  000832  361B               	rlcf	(??_UART_Init+1)^0,f,c
   645  000834  361C               	rlcf	(??_UART_Init+2)^0,f,c
   646  000836  361D               	rlcf	(??_UART_Init+3)^0,f,c
   647  000838  2EE8               	decfsz	wreg,f,c
   648  00083A  EF17  F004         	goto	u435
   649  00083E  501A               	movf	??_UART_Init^0,w,c
   650  000840  0800               	sublw	0
   651  000842  6E08               	movwf	___aldiv@dividend^0,c
   652  000844  0E6C               	movlw	108
   653  000846  541B               	subfwb	(??_UART_Init+1)^0,w,c
   654  000848  6E09               	movwf	(___aldiv@dividend+1)^0,c
   655  00084A  0EDC               	movlw	220
   656  00084C  541C               	subfwb	(??_UART_Init+2)^0,w,c
   657  00084E  6E0A               	movwf	(___aldiv@dividend+2)^0,c
   658  000850  0E02               	movlw	2
   659  000852  541D               	subfwb	(??_UART_Init+3)^0,w,c
   660  000854  6E0B               	movwf	(___aldiv@dividend+3)^0,c
   661  000856  C016  F01E         	movff	UART_Init@baudrate,??_UART_Init+4
   662  00085A  C017  F01F         	movff	UART_Init@baudrate+1,??_UART_Init+5
   663  00085E  C018  F020         	movff	UART_Init@baudrate+2,??_UART_Init+6
   664  000862  C019  F021         	movff	UART_Init@baudrate+3,??_UART_Init+7
   665  000866  0E06               	movlw	6
   666  000868                     u445:
   667  000868  90D8               	bcf	status,0,c
   668  00086A  361E               	rlcf	(??_UART_Init+4)^0,f,c
   669  00086C  361F               	rlcf	(??_UART_Init+5)^0,f,c
   670  00086E  3620               	rlcf	(??_UART_Init+6)^0,f,c
   671  000870  3621               	rlcf	(??_UART_Init+7)^0,f,c
   672  000872  2EE8               	decfsz	wreg,f,c
   673  000874  EF34  F004         	goto	u445
   674  000878  C01E  F00C         	movff	??_UART_Init+4,___aldiv@divisor
   675  00087C  C01F  F00D         	movff	??_UART_Init+5,___aldiv@divisor+1
   676  000880  C020  F00E         	movff	??_UART_Init+6,___aldiv@divisor+2
   677  000884  C021  F00F         	movff	??_UART_Init+7,___aldiv@divisor+3
   678  000888  EC35  F005         	call	___aldiv	;wreg free
   679  00088C  C008  F022         	movff	?___aldiv,UART_Init@x
   680  000890  C009  F023         	movff	?___aldiv+1,UART_Init@x+1
   681  000894                     
   682                           ;USART_C.c: 9:     if(x > 255){
   683  000894  0423               	decf	(UART_Init@x+1)^0,w,c
   684  000896  A0D8               	btfss	status,0,c
   685  000898  EF50  F004         	goto	u451
   686  00089C  EF52  F004         	goto	u450
   687  0008A0                     u451:
   688  0008A0  EF8F  F004         	goto	l1107
   689  0008A4                     u450:
   690  0008A4                     
   691                           ;USART_C.c: 11:         x = (48000000 - baudrate*16)/(baudrate*16);
   692  0008A4  C016  F01A         	movff	UART_Init@baudrate,??_UART_Init
   693  0008A8  C017  F01B         	movff	UART_Init@baudrate+1,??_UART_Init+1
   694  0008AC  C018  F01C         	movff	UART_Init@baudrate+2,??_UART_Init+2
   695  0008B0  C019  F01D         	movff	UART_Init@baudrate+3,??_UART_Init+3
   696  0008B4  0E04               	movlw	4
   697  0008B6                     u465:
   698  0008B6  90D8               	bcf	status,0,c
   699  0008B8  361A               	rlcf	??_UART_Init^0,f,c
   700  0008BA  361B               	rlcf	(??_UART_Init+1)^0,f,c
   701  0008BC  361C               	rlcf	(??_UART_Init+2)^0,f,c
   702  0008BE  361D               	rlcf	(??_UART_Init+3)^0,f,c
   703  0008C0  2EE8               	decfsz	wreg,f,c
   704  0008C2  EF5B  F004         	goto	u465
   705  0008C6  501A               	movf	??_UART_Init^0,w,c
   706  0008C8  0800               	sublw	0
   707  0008CA  6E08               	movwf	___aldiv@dividend^0,c
   708  0008CC  0E6C               	movlw	108
   709  0008CE  541B               	subfwb	(??_UART_Init+1)^0,w,c
   710  0008D0  6E09               	movwf	(___aldiv@dividend+1)^0,c
   711  0008D2  0EDC               	movlw	220
   712  0008D4  541C               	subfwb	(??_UART_Init+2)^0,w,c
   713  0008D6  6E0A               	movwf	(___aldiv@dividend+2)^0,c
   714  0008D8  0E02               	movlw	2
   715  0008DA  541D               	subfwb	(??_UART_Init+3)^0,w,c
   716  0008DC  6E0B               	movwf	(___aldiv@dividend+3)^0,c
   717  0008DE  C016  F01E         	movff	UART_Init@baudrate,??_UART_Init+4
   718  0008E2  C017  F01F         	movff	UART_Init@baudrate+1,??_UART_Init+5
   719  0008E6  C018  F020         	movff	UART_Init@baudrate+2,??_UART_Init+6
   720  0008EA  C019  F021         	movff	UART_Init@baudrate+3,??_UART_Init+7
   721  0008EE  0E04               	movlw	4
   722  0008F0                     u475:
   723  0008F0  90D8               	bcf	status,0,c
   724  0008F2  361E               	rlcf	(??_UART_Init+4)^0,f,c
   725  0008F4  361F               	rlcf	(??_UART_Init+5)^0,f,c
   726  0008F6  3620               	rlcf	(??_UART_Init+6)^0,f,c
   727  0008F8  3621               	rlcf	(??_UART_Init+7)^0,f,c
   728  0008FA  2EE8               	decfsz	wreg,f,c
   729  0008FC  EF78  F004         	goto	u475
   730  000900  C01E  F00C         	movff	??_UART_Init+4,___aldiv@divisor
   731  000904  C01F  F00D         	movff	??_UART_Init+5,___aldiv@divisor+1
   732  000908  C020  F00E         	movff	??_UART_Init+6,___aldiv@divisor+2
   733  00090C  C021  F00F         	movff	??_UART_Init+7,___aldiv@divisor+3
   734  000910  EC35  F005         	call	___aldiv	;wreg free
   735  000914  C008  F022         	movff	?___aldiv,UART_Init@x
   736  000918  C009  F023         	movff	?___aldiv+1,UART_Init@x+1
   737  00091C                     
   738                           ;USART_C.c: 12:         BRGH = 1;
   739  00091C  84AC               	bsf	4012,2,c	;volatile
   740  00091E                     l1107:
   741                           
   742                           ;USART_C.c: 15:     if(x < 255){
   743  00091E  5023               	movf	(UART_Init@x+1)^0,w,c
   744  000920  E106               	bnz	u481
   745  000922  2822               	incf	UART_Init@x^0,w,c
   746  000924  B0D8               	btfsc	status,0,c
   747  000926  EF97  F004         	goto	u481
   748  00092A  EF99  F004         	goto	u480
   749  00092E                     u481:
   750  00092E  EFA1  F004         	goto	l35
   751  000932                     u480:
   752  000932                     
   753                           ;USART_C.c: 17:         SPBRG = x;
   754  000932  C022  FFAF         	movff	UART_Init@x,4015	;volatile
   755                           
   756                           ;USART_C.c: 18:         TXSTAbits.SYNC = 0;
   757  000936  98AC               	bcf	172,4,c	;volatile
   758                           
   759                           ;USART_C.c: 19:         TXSTAbits.TXEN = 1;
   760  000938  8AAC               	bsf	172,5,c	;volatile
   761                           
   762                           ;USART_C.c: 20:         RCSTAbits.SPEN = 1;
   763  00093A  8EAB               	bsf	171,7,c	;volatile
   764                           
   765                           ;USART_C.c: 21:         RCSTAbits.CREN = 1;
   766  00093C  88AB               	bsf	171,4,c	;volatile
   767                           
   768                           ;USART_C.c: 22:         TRISCbits.RC6 = 1;
   769  00093E  8C94               	bsf	148,6,c	;volatile
   770                           
   771                           ;USART_C.c: 23:         TRISCbits.RC7 = 1;
   772  000940  8E94               	bsf	148,7,c	;volatile
   773  000942                     l35:
   774  000942  0012               	return		;funcret
   775  000944                     __end_of_UART_Init:
   776                           	callstack 0
   777                           
   778 ;; *************** function ___aldiv *****************
   779 ;; Defined at:
   780 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\aldiv.c"
   781 ;; Parameters:    Size  Location     Type
   782 ;;  dividend        4    7[COMRAM] long 
   783 ;;  divisor         4   11[COMRAM] long 
   784 ;; Auto vars:     Size  Location     Type
   785 ;;  quotient        4   17[COMRAM] long 
   786 ;;  sign            1   16[COMRAM] unsigned char 
   787 ;;  counter         1   15[COMRAM] unsigned char 
   788 ;; Return value:  Size  Location     Type
   789 ;;                  4    7[COMRAM] long 
   790 ;; Registers used:
   791 ;;		wreg, status,2, status,0
   792 ;; Tracked objects:
   793 ;;		On entry : 0/0
   794 ;;		On exit  : 0/0
   795 ;;		Unchanged: 0/0
   796 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   797 ;;      Params:         8       0       0       0       0       0       0       0       0
   798 ;;      Locals:         6       0       0       0       0       0       0       0       0
   799 ;;      Temps:          0       0       0       0       0       0       0       0       0
   800 ;;      Totals:        14       0       0       0       0       0       0       0       0
   801 ;;Total ram usage:       14 bytes
   802 ;; Hardware stack levels used:    1
   803 ;; Hardware stack levels required when called:    2
   804 ;; This function calls:
   805 ;;		Nothing
   806 ;; This function is called by:
   807 ;;		_UART_Init
   808 ;; This function uses a non-reentrant model
   809 ;;
   810                           
   811                           	psect	text3
   812  000A6A                     __ptext3:
   813                           	callstack 0
   814  000A6A                     ___aldiv:
   815                           	callstack 26
   816  000A6A  0E00               	movlw	0
   817  000A6C  6E11               	movwf	___aldiv@sign^0,c
   818  000A6E  BE0F               	btfsc	(___aldiv@divisor+3)^0,7,c
   819  000A70  EF3E  F005         	goto	u370
   820  000A74  EF3C  F005         	goto	u371
   821  000A78                     u371:
   822  000A78  EF48  F005         	goto	l1061
   823  000A7C                     u370:
   824  000A7C  1E0F               	comf	(___aldiv@divisor+3)^0,f,c
   825  000A7E  1E0E               	comf	(___aldiv@divisor+2)^0,f,c
   826  000A80  1E0D               	comf	(___aldiv@divisor+1)^0,f,c
   827  000A82  6C0C               	negf	___aldiv@divisor^0,c
   828  000A84  0E00               	movlw	0
   829  000A86  220D               	addwfc	(___aldiv@divisor+1)^0,f,c
   830  000A88  220E               	addwfc	(___aldiv@divisor+2)^0,f,c
   831  000A8A  220F               	addwfc	(___aldiv@divisor+3)^0,f,c
   832  000A8C  0E01               	movlw	1
   833  000A8E  6E11               	movwf	___aldiv@sign^0,c
   834  000A90                     l1061:
   835  000A90  BE0B               	btfsc	(___aldiv@dividend+3)^0,7,c
   836  000A92  EF4F  F005         	goto	u380
   837  000A96  EF4D  F005         	goto	u381
   838  000A9A                     u381:
   839  000A9A  EF59  F005         	goto	l1067
   840  000A9E                     u380:
   841  000A9E  1E0B               	comf	(___aldiv@dividend+3)^0,f,c
   842  000AA0  1E0A               	comf	(___aldiv@dividend+2)^0,f,c
   843  000AA2  1E09               	comf	(___aldiv@dividend+1)^0,f,c
   844  000AA4  6C08               	negf	___aldiv@dividend^0,c
   845  000AA6  0E00               	movlw	0
   846  000AA8  2209               	addwfc	(___aldiv@dividend+1)^0,f,c
   847  000AAA  220A               	addwfc	(___aldiv@dividend+2)^0,f,c
   848  000AAC  220B               	addwfc	(___aldiv@dividend+3)^0,f,c
   849  000AAE  0E01               	movlw	1
   850  000AB0  1A11               	xorwf	___aldiv@sign^0,f,c
   851  000AB2                     l1067:
   852  000AB2  0E00               	movlw	0
   853  000AB4  6E12               	movwf	___aldiv@quotient^0,c
   854  000AB6  0E00               	movlw	0
   855  000AB8  6E13               	movwf	(___aldiv@quotient+1)^0,c
   856  000ABA  0E00               	movlw	0
   857  000ABC  6E14               	movwf	(___aldiv@quotient+2)^0,c
   858  000ABE  0E00               	movlw	0
   859  000AC0  6E15               	movwf	(___aldiv@quotient+3)^0,c
   860  000AC2  500C               	movf	___aldiv@divisor^0,w,c
   861  000AC4  100D               	iorwf	(___aldiv@divisor+1)^0,w,c
   862  000AC6  100E               	iorwf	(___aldiv@divisor+2)^0,w,c
   863  000AC8  100F               	iorwf	(___aldiv@divisor+3)^0,w,c
   864  000ACA  B4D8               	btfsc	status,2,c
   865  000ACC  EF6A  F005         	goto	u391
   866  000AD0  EF6C  F005         	goto	u390
   867  000AD4                     u391:
   868  000AD4  EFA2  F005         	goto	l1089
   869  000AD8                     u390:
   870  000AD8  0E01               	movlw	1
   871  000ADA  6E10               	movwf	___aldiv@counter^0,c
   872  000ADC  EF76  F005         	goto	l1075
   873  000AE0                     l1073:
   874  000AE0  90D8               	bcf	status,0,c
   875  000AE2  360C               	rlcf	___aldiv@divisor^0,f,c
   876  000AE4  360D               	rlcf	(___aldiv@divisor+1)^0,f,c
   877  000AE6  360E               	rlcf	(___aldiv@divisor+2)^0,f,c
   878  000AE8  360F               	rlcf	(___aldiv@divisor+3)^0,f,c
   879  000AEA  2A10               	incf	___aldiv@counter^0,f,c
   880  000AEC                     l1075:
   881  000AEC  AE0F               	btfss	(___aldiv@divisor+3)^0,7,c
   882  000AEE  EF7B  F005         	goto	u401
   883  000AF2  EF7D  F005         	goto	u400
   884  000AF6                     u401:
   885  000AF6  EF70  F005         	goto	l1073
   886  000AFA                     u400:
   887  000AFA                     l1077:
   888  000AFA  90D8               	bcf	status,0,c
   889  000AFC  3612               	rlcf	___aldiv@quotient^0,f,c
   890  000AFE  3613               	rlcf	(___aldiv@quotient+1)^0,f,c
   891  000B00  3614               	rlcf	(___aldiv@quotient+2)^0,f,c
   892  000B02  3615               	rlcf	(___aldiv@quotient+3)^0,f,c
   893  000B04  500C               	movf	___aldiv@divisor^0,w,c
   894  000B06  5C08               	subwf	___aldiv@dividend^0,w,c
   895  000B08  500D               	movf	(___aldiv@divisor+1)^0,w,c
   896  000B0A  5809               	subwfb	(___aldiv@dividend+1)^0,w,c
   897  000B0C  500E               	movf	(___aldiv@divisor+2)^0,w,c
   898  000B0E  580A               	subwfb	(___aldiv@dividend+2)^0,w,c
   899  000B10  500F               	movf	(___aldiv@divisor+3)^0,w,c
   900  000B12  580B               	subwfb	(___aldiv@dividend+3)^0,w,c
   901  000B14  A0D8               	btfss	status,0,c
   902  000B16  EF8F  F005         	goto	u411
   903  000B1A  EF91  F005         	goto	u410
   904  000B1E                     u411:
   905  000B1E  EF9A  F005         	goto	l1085
   906  000B22                     u410:
   907  000B22  500C               	movf	___aldiv@divisor^0,w,c
   908  000B24  5E08               	subwf	___aldiv@dividend^0,f,c
   909  000B26  500D               	movf	(___aldiv@divisor+1)^0,w,c
   910  000B28  5A09               	subwfb	(___aldiv@dividend+1)^0,f,c
   911  000B2A  500E               	movf	(___aldiv@divisor+2)^0,w,c
   912  000B2C  5A0A               	subwfb	(___aldiv@dividend+2)^0,f,c
   913  000B2E  500F               	movf	(___aldiv@divisor+3)^0,w,c
   914  000B30  5A0B               	subwfb	(___aldiv@dividend+3)^0,f,c
   915  000B32  8012               	bsf	___aldiv@quotient^0,0,c
   916  000B34                     l1085:
   917  000B34  90D8               	bcf	status,0,c
   918  000B36  320F               	rrcf	(___aldiv@divisor+3)^0,f,c
   919  000B38  320E               	rrcf	(___aldiv@divisor+2)^0,f,c
   920  000B3A  320D               	rrcf	(___aldiv@divisor+1)^0,f,c
   921  000B3C  320C               	rrcf	___aldiv@divisor^0,f,c
   922  000B3E  2E10               	decfsz	___aldiv@counter^0,f,c
   923  000B40  EF7D  F005         	goto	l1077
   924  000B44                     l1089:
   925  000B44  5011               	movf	___aldiv@sign^0,w,c
   926  000B46  B4D8               	btfsc	status,2,c
   927  000B48  EFA8  F005         	goto	u421
   928  000B4C  EFAA  F005         	goto	u420
   929  000B50                     u421:
   930  000B50  EFB2  F005         	goto	l1093
   931  000B54                     u420:
   932  000B54  1E15               	comf	(___aldiv@quotient+3)^0,f,c
   933  000B56  1E14               	comf	(___aldiv@quotient+2)^0,f,c
   934  000B58  1E13               	comf	(___aldiv@quotient+1)^0,f,c
   935  000B5A  6C12               	negf	___aldiv@quotient^0,c
   936  000B5C  0E00               	movlw	0
   937  000B5E  2213               	addwfc	(___aldiv@quotient+1)^0,f,c
   938  000B60  2214               	addwfc	(___aldiv@quotient+2)^0,f,c
   939  000B62  2215               	addwfc	(___aldiv@quotient+3)^0,f,c
   940  000B64                     l1093:
   941  000B64  C012  F008         	movff	___aldiv@quotient,?___aldiv
   942  000B68  C013  F009         	movff	___aldiv@quotient+1,?___aldiv+1
   943  000B6C  C014  F00A         	movff	___aldiv@quotient+2,?___aldiv+2
   944  000B70  C015  F00B         	movff	___aldiv@quotient+3,?___aldiv+3
   945  000B74  0012               	return		;funcret
   946  000B76                     __end_of___aldiv:
   947                           	callstack 0
   948                           
   949 ;; *************** function _delay_ms *****************
   950 ;; Defined at:
   951 ;;		line 5 in file "DELAY_C.c"
   952 ;; Parameters:    Size  Location     Type
   953 ;;  delayms         2    7[COMRAM] unsigned int 
   954 ;; Auto vars:     Size  Location     Type
   955 ;;  j               4   11[COMRAM] unsigned long 
   956 ;;  i               2    9[COMRAM] unsigned int 
   957 ;; Return value:  Size  Location     Type
   958 ;;                  1    wreg      void 
   959 ;; Registers used:
   960 ;;		wreg, status,2, status,0
   961 ;; Tracked objects:
   962 ;;		On entry : 0/0
   963 ;;		On exit  : 0/0
   964 ;;		Unchanged: 0/0
   965 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   966 ;;      Params:         2       0       0       0       0       0       0       0       0
   967 ;;      Locals:         6       0       0       0       0       0       0       0       0
   968 ;;      Temps:          0       0       0       0       0       0       0       0       0
   969 ;;      Totals:         8       0       0       0       0       0       0       0       0
   970 ;;Total ram usage:        8 bytes
   971 ;; Hardware stack levels used:    1
   972 ;; Hardware stack levels required when called:    2
   973 ;; This function calls:
   974 ;;		Nothing
   975 ;; This function is called by:
   976 ;;		_main
   977 ;; This function uses a non-reentrant model
   978 ;;
   979                           
   980                           	psect	text4
   981  000CAA                     __ptext4:
   982                           	callstack 0
   983  000CAA                     _delay_ms:
   984                           	callstack 28
   985  000CAA                     
   986                           ;DELAY_C.c: 7:     unsigned int i;;DELAY_C.c: 8:     unsigned long j;;DELAY_C.c: 10:    
      +                           for(i = 0; i < delayms; i++)
   987  000CAA  0E00               	movlw	0
   988  000CAC  6E0B               	movwf	(delay_ms@i+1)^0,c
   989  000CAE  0E00               	movlw	0
   990  000CB0  6E0A               	movwf	delay_ms@i^0,c
   991  000CB2  EF79  F006         	goto	l1143
   992  000CB6                     l1133:
   993                           
   994                           ;DELAY_C.c: 11:         for(j = 0; j < 48000000/65200; j++);
   995  000CB6  0E00               	movlw	0
   996  000CB8  6E0C               	movwf	delay_ms@j^0,c
   997  000CBA  0E00               	movlw	0
   998  000CBC  6E0D               	movwf	(delay_ms@j+1)^0,c
   999  000CBE  0E00               	movlw	0
  1000  000CC0  6E0E               	movwf	(delay_ms@j+2)^0,c
  1001  000CC2  0E00               	movlw	0
  1002  000CC4  6E0F               	movwf	(delay_ms@j+3)^0,c
  1003  000CC6                     l1139:
  1004  000CC6  0E01               	movlw	1
  1005  000CC8  260C               	addwf	delay_ms@j^0,f,c
  1006  000CCA  0E00               	movlw	0
  1007  000CCC  220D               	addwfc	(delay_ms@j+1)^0,f,c
  1008  000CCE  220E               	addwfc	(delay_ms@j+2)^0,f,c
  1009  000CD0  220F               	addwfc	(delay_ms@j+3)^0,f,c
  1010  000CD2  500F               	movf	(delay_ms@j+3)^0,w,c
  1011  000CD4  100E               	iorwf	(delay_ms@j+2)^0,w,c
  1012  000CD6  E10B               	bnz	u530
  1013  000CD8  0EE0               	movlw	224
  1014  000CDA  5C0C               	subwf	delay_ms@j^0,w,c
  1015  000CDC  0E02               	movlw	2
  1016  000CDE  580D               	subwfb	(delay_ms@j+1)^0,w,c
  1017  000CE0  A0D8               	btfss	status,0,c
  1018  000CE2  EF75  F006         	goto	u531
  1019  000CE6  EF77  F006         	goto	u530
  1020  000CEA                     u531:
  1021  000CEA  EF63  F006         	goto	l1139
  1022  000CEE                     u530:
  1023  000CEE  4A0A               	infsnz	delay_ms@i^0,f,c
  1024  000CF0  2A0B               	incf	(delay_ms@i+1)^0,f,c
  1025  000CF2                     l1143:
  1026  000CF2  5008               	movf	delay_ms@delayms^0,w,c
  1027  000CF4  5C0A               	subwf	delay_ms@i^0,w,c
  1028  000CF6  5009               	movf	(delay_ms@delayms+1)^0,w,c
  1029  000CF8  580B               	subwfb	(delay_ms@i+1)^0,w,c
  1030  000CFA  A0D8               	btfss	status,0,c
  1031  000CFC  EF82  F006         	goto	u541
  1032  000D00  EF84  F006         	goto	u540
  1033  000D04                     u541:
  1034  000D04  EF5B  F006         	goto	l1133
  1035  000D08                     u540:
  1036  000D08  0012               	return		;funcret
  1037  000D0A                     __end_of_delay_ms:
  1038                           	callstack 0
  1039                           
  1040 ;; *************** function _UART_Write_Text_ln *****************
  1041 ;; Defined at:
  1042 ;;		line 52 in file "USART_C.c"
  1043 ;; Parameters:    Size  Location     Type
  1044 ;;  text            2   14[COMRAM] PTR const unsigned char 
  1045 ;;		 -> STR_3(11), UARTBUFF(65), 
  1046 ;; Auto vars:     Size  Location     Type
  1047 ;;		None
  1048 ;; Return value:  Size  Location     Type
  1049 ;;                  1    wreg      void 
  1050 ;; Registers used:
  1051 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  1052 ;; Tracked objects:
  1053 ;;		On entry : 0/0
  1054 ;;		On exit  : 0/0
  1055 ;;		Unchanged: 0/0
  1056 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1057 ;;      Params:         2       0       0       0       0       0       0       0       0
  1058 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1059 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1060 ;;      Totals:         2       0       0       0       0       0       0       0       0
  1061 ;;Total ram usage:        2 bytes
  1062 ;; Hardware stack levels used:    1
  1063 ;; Hardware stack levels required when called:    4
  1064 ;; This function calls:
  1065 ;;		_UART_Write
  1066 ;;		_UART_Write_Text
  1067 ;; This function is called by:
  1068 ;;		_main
  1069 ;; This function uses a non-reentrant model
  1070 ;;
  1071                           
  1072                           	psect	text5
  1073  000EBE                     __ptext5:
  1074                           	callstack 0
  1075  000EBE                     _UART_Write_Text_ln:
  1076                           	callstack 26
  1077  000EBE                     
  1078                           ;USART_C.c: 54:     UART_Write_Text(text);
  1079  000EBE  C00F  F009         	movff	UART_Write_Text_ln@text,UART_Write_Text@text
  1080  000EC2  C010  F00A         	movff	UART_Write_Text_ln@text+1,UART_Write_Text@text+1
  1081  000EC6  EC16  F006         	call	_UART_Write_Text	;wreg free
  1082  000ECA                     
  1083                           ;USART_C.c: 55:     UART_Write('\r');
  1084  000ECA  0E0D               	movlw	13
  1085  000ECC  EC6C  F007         	call	_UART_Write
  1086  000ED0                     
  1087                           ;USART_C.c: 56:     UART_Write('\n');
  1088  000ED0  0E0A               	movlw	10
  1089  000ED2  EC6C  F007         	call	_UART_Write
  1090  000ED6  0012               	return		;funcret
  1091  000ED8                     __end_of_UART_Write_Text_ln:
  1092                           	callstack 0
  1093                           
  1094 ;; *************** function _UART_Write_Text *****************
  1095 ;; Defined at:
  1096 ;;		line 44 in file "USART_C.c"
  1097 ;; Parameters:    Size  Location     Type
  1098 ;;  text            2    8[COMRAM] PTR const unsigned char 
  1099 ;;		 -> STR_3(11), STR_1(9), UARTBUFF(65), 
  1100 ;; Auto vars:     Size  Location     Type
  1101 ;;  i               2   12[COMRAM] int 
  1102 ;; Return value:  Size  Location     Type
  1103 ;;                  1    wreg      void 
  1104 ;; Registers used:
  1105 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  1106 ;; Tracked objects:
  1107 ;;		On entry : 0/0
  1108 ;;		On exit  : 0/0
  1109 ;;		Unchanged: 0/0
  1110 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1111 ;;      Params:         2       0       0       0       0       0       0       0       0
  1112 ;;      Locals:         2       0       0       0       0       0       0       0       0
  1113 ;;      Temps:          2       0       0       0       0       0       0       0       0
  1114 ;;      Totals:         6       0       0       0       0       0       0       0       0
  1115 ;;Total ram usage:        6 bytes
  1116 ;; Hardware stack levels used:    1
  1117 ;; Hardware stack levels required when called:    3
  1118 ;; This function calls:
  1119 ;;		_UART_Write
  1120 ;; This function is called by:
  1121 ;;		_UART_Write_Text_ln
  1122 ;;		_main
  1123 ;; This function uses a non-reentrant model
  1124 ;;
  1125                           
  1126                           	psect	text6
  1127  000C2C                     __ptext6:
  1128                           	callstack 0
  1129  000C2C                     _UART_Write_Text:
  1130                           	callstack 26
  1131  000C2C                     
  1132                           ;USART_C.c: 46:     int i;;USART_C.c: 47:     for(i = 0; text[i] != '\0'; i++)
  1133  000C2C  0E00               	movlw	0
  1134  000C2E  6E0E               	movwf	(UART_Write_Text@i+1)^0,c
  1135  000C30  0E00               	movlw	0
  1136  000C32  6E0D               	movwf	UART_Write_Text@i^0,c
  1137  000C34  EF36  F006         	goto	l1119
  1138  000C38                     l1115:
  1139                           
  1140                           ;USART_C.c: 48:         UART_Write(text[i]);
  1141  000C38  500D               	movf	UART_Write_Text@i^0,w,c
  1142  000C3A  2409               	addwf	UART_Write_Text@text^0,w,c
  1143  000C3C  6E0B               	movwf	??_UART_Write_Text^0,c
  1144  000C3E  500E               	movf	(UART_Write_Text@i+1)^0,w,c
  1145  000C40  200A               	addwfc	(UART_Write_Text@text+1)^0,w,c
  1146  000C42  6E0C               	movwf	(??_UART_Write_Text+1)^0,c
  1147  000C44  C00B  FFF6         	movff	??_UART_Write_Text,tblptrl
  1148  000C48  C00C  FFF7         	movff	??_UART_Write_Text+1,tblptrh
  1149  000C4C  6AF8               	clrf	tblptru,c
  1150  000C4E  0E07               	movlw	(high __ramtop+-1)
  1151  000C50  64F7               	cpfsgt	tblptrh,c
  1152  000C52  D003               	bra	u497
  1153  000C54  0008               	tblrd		*
  1154  000C56  50F5               	movf	tablat,w,c
  1155  000C58  D005               	bra	u490
  1156  000C5A                     u497:
  1157  000C5A  CFF6 FFE9          	movff	tblptrl,fsr0l
  1158  000C5E  CFF7 FFEA          	movff	tblptrh,fsr0h
  1159  000C62  50EF               	movf	indf0,w,c
  1160  000C64                     u490:
  1161  000C64  EC6C  F007         	call	_UART_Write
  1162  000C68  4A0D               	infsnz	UART_Write_Text@i^0,f,c
  1163  000C6A  2A0E               	incf	(UART_Write_Text@i+1)^0,f,c
  1164  000C6C                     l1119:
  1165  000C6C  500D               	movf	UART_Write_Text@i^0,w,c
  1166  000C6E  2409               	addwf	UART_Write_Text@text^0,w,c
  1167  000C70  6E0B               	movwf	??_UART_Write_Text^0,c
  1168  000C72  500E               	movf	(UART_Write_Text@i+1)^0,w,c
  1169  000C74  200A               	addwfc	(UART_Write_Text@text+1)^0,w,c
  1170  000C76  6E0C               	movwf	(??_UART_Write_Text+1)^0,c
  1171  000C78  C00B  FFF6         	movff	??_UART_Write_Text,tblptrl
  1172  000C7C  C00C  FFF7         	movff	??_UART_Write_Text+1,tblptrh
  1173  000C80  6AF8               	clrf	tblptru,c
  1174  000C82  0E07               	movlw	(high __ramtop+-1)
  1175  000C84  64F7               	cpfsgt	tblptrh,c
  1176  000C86  D003               	bra	u507
  1177  000C88  0008               	tblrd		*
  1178  000C8A  50F5               	movf	tablat,w,c
  1179  000C8C  D005               	bra	u500
  1180  000C8E                     u507:
  1181  000C8E  CFF6 FFE9          	movff	tblptrl,fsr0l
  1182  000C92  CFF7 FFEA          	movff	tblptrh,fsr0h
  1183  000C96  50EF               	movf	indf0,w,c
  1184  000C98                     u500:
  1185  000C98  0900               	iorlw	0
  1186  000C9A  A4D8               	btfss	status,2,c
  1187  000C9C  EF52  F006         	goto	u511
  1188  000CA0  EF54  F006         	goto	u510
  1189  000CA4                     u511:
  1190  000CA4  EF1C  F006         	goto	l1115
  1191  000CA8                     u510:
  1192  000CA8  0012               	return		;funcret
  1193  000CAA                     __end_of_UART_Write_Text:
  1194                           	callstack 0
  1195                           
  1196 ;; *************** function _UART_Write *****************
  1197 ;; Defined at:
  1198 ;;		line 30 in file "USART_C.c"
  1199 ;; Parameters:    Size  Location     Type
  1200 ;;  data            1    wreg     const unsigned char 
  1201 ;; Auto vars:     Size  Location     Type
  1202 ;;  data            1    7[COMRAM] const unsigned char 
  1203 ;; Return value:  Size  Location     Type
  1204 ;;                  1    wreg      void 
  1205 ;; Registers used:
  1206 ;;		wreg
  1207 ;; Tracked objects:
  1208 ;;		On entry : 0/0
  1209 ;;		On exit  : 0/0
  1210 ;;		Unchanged: 0/0
  1211 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1212 ;;      Params:         0       0       0       0       0       0       0       0       0
  1213 ;;      Locals:         1       0       0       0       0       0       0       0       0
  1214 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1215 ;;      Totals:         1       0       0       0       0       0       0       0       0
  1216 ;;Total ram usage:        1 bytes
  1217 ;; Hardware stack levels used:    1
  1218 ;; Hardware stack levels required when called:    2
  1219 ;; This function calls:
  1220 ;;		Nothing
  1221 ;; This function is called by:
  1222 ;;		_UART_Write_Text
  1223 ;;		_UART_Write_Text_ln
  1224 ;;		_UART_Write_ln
  1225 ;; This function uses a non-reentrant model
  1226 ;;
  1227                           
  1228                           	psect	text7
  1229  000ED8                     __ptext7:
  1230                           	callstack 0
  1231  000ED8                     _UART_Write:
  1232                           	callstack 26
  1233                           
  1234                           ;incstack = 0
  1235                           ;UART_Write@data stored from wreg
  1236  000ED8  6E08               	movwf	UART_Write@data^0,c
  1237  000EDA                     l39:
  1238  000EDA  A2AC               	btfss	4012,1,c	;volatile
  1239  000EDC  EF72  F007         	goto	u361
  1240  000EE0  EF74  F007         	goto	u360
  1241  000EE4                     u361:
  1242  000EE4  EF6D  F007         	goto	l39
  1243  000EE8                     u360:
  1244  000EE8                     
  1245                           ;USART_C.c: 33:     TXREG = data;
  1246  000EE8  C008  FFAD         	movff	UART_Write@data,4013	;volatile
  1247  000EEC  0012               	return		;funcret
  1248  000EEE                     __end_of_UART_Write:
  1249                           	callstack 0
  1250                           
  1251 ;; *************** function _UART_FindOnBuffer *****************
  1252 ;; Defined at:
  1253 ;;		line 87 in file "USART_C.c"
  1254 ;; Parameters:    Size  Location     Type
  1255 ;;  compare         2   11[COMRAM] PTR const unsigned char 
  1256 ;;		 -> STR_2(6), 
  1257 ;;  addr            2   13[COMRAM] PTR unsigned int 
  1258 ;;		 -> main@LocatedADDR(2), 
  1259 ;; Auto vars:     Size  Location     Type
  1260 ;;  z               2   26[COMRAM] unsigned int 
  1261 ;;  i               2   24[COMRAM] unsigned int 
  1262 ;;  located         2   22[COMRAM] short 
  1263 ;;  datasize        2   20[COMRAM] unsigned int 
  1264 ;; Return value:  Size  Location     Type
  1265 ;;		None               void
  1266 ;; Registers used:
  1267 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  1268 ;; Tracked objects:
  1269 ;;		On entry : 0/0
  1270 ;;		On exit  : 0/0
  1271 ;;		Unchanged: 0/0
  1272 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1273 ;;      Params:         4       0       0       0       0       0       0       0       0
  1274 ;;      Locals:         8       0       0       0       0       0       0       0       0
  1275 ;;      Temps:          5       0       0       0       0       0       0       0       0
  1276 ;;      Totals:        17       0       0       0       0       0       0       0       0
  1277 ;;Total ram usage:       17 bytes
  1278 ;; Hardware stack levels used:    1
  1279 ;; Hardware stack levels required when called:    3
  1280 ;; This function calls:
  1281 ;;		_strlen
  1282 ;; This function is called by:
  1283 ;;		_main
  1284 ;; This function uses a non-reentrant model
  1285 ;;
  1286                           
  1287                           	psect	text8
  1288  000944                     __ptext8:
  1289                           	callstack 0
  1290  000944                     _UART_FindOnBuffer:
  1291                           	callstack 27
  1292  000944  0E00               	movlw	0
  1293  000946  6E1C               	movwf	(UART_FindOnBuffer@z+1)^0,c
  1294  000948  0E00               	movlw	0
  1295  00094A  6E1B               	movwf	UART_FindOnBuffer@z^0,c
  1296  00094C  0E00               	movlw	0
  1297  00094E  6E16               	movwf	(UART_FindOnBuffer@datasize+1)^0,c
  1298  000950  0E00               	movlw	0
  1299  000952  6E15               	movwf	UART_FindOnBuffer@datasize^0,c
  1300                           
  1301                           ;USART_C.c: 90:     short located = 0;
  1302  000954  0E00               	movlw	0
  1303  000956  6E18               	movwf	(UART_FindOnBuffer@located+1)^0,c
  1304  000958  0E00               	movlw	0
  1305  00095A  6E17               	movwf	UART_FindOnBuffer@located^0,c
  1306  00095C                     
  1307                           ;USART_C.c: 92:     datasize = strlen(compare);
  1308  00095C  C00C  F008         	movff	UART_FindOnBuffer@compare,strlen@s
  1309  000960  C00D  F009         	movff	UART_FindOnBuffer@compare+1,strlen@s+1
  1310  000964  EC01  F007         	call	_strlen	;wreg free
  1311  000968  C008  F015         	movff	?_strlen,UART_FindOnBuffer@datasize
  1312  00096C  C009  F016         	movff	?_strlen+1,UART_FindOnBuffer@datasize+1
  1313  000970                     
  1314                           ;USART_C.c: 94:     for(i = 0; i < (65 - datasize); i++){
  1315  000970  0E00               	movlw	0
  1316  000972  6E1A               	movwf	(UART_FindOnBuffer@i+1)^0,c
  1317  000974  0E00               	movlw	0
  1318  000976  6E19               	movwf	UART_FindOnBuffer@i^0,c
  1319  000978  EF14  F005         	goto	l1193
  1320  00097C                     l1177:
  1321                           
  1322                           ;USART_C.c: 95:         located = 1;
  1323  00097C  0E00               	movlw	0
  1324  00097E  6E18               	movwf	(UART_FindOnBuffer@located+1)^0,c
  1325  000980  0E01               	movlw	1
  1326  000982  6E17               	movwf	UART_FindOnBuffer@located^0,c
  1327                           
  1328                           ;USART_C.c: 97:         for(z = 0; z < datasize; z++){
  1329  000984  0E00               	movlw	0
  1330  000986  6E1C               	movwf	(UART_FindOnBuffer@z+1)^0,c
  1331  000988  0E00               	movlw	0
  1332  00098A  6E1B               	movwf	UART_FindOnBuffer@z^0,c
  1333  00098C  EFF4  F004         	goto	l1185
  1334  000990                     l1179:
  1335                           
  1336                           ;USART_C.c: 99:             if(UARTBUFF[z+i] != compare[z]){
  1337  000990  0E60               	movlw	low _UARTBUFF
  1338  000992  6E10               	movwf	??_UART_FindOnBuffer^0,c
  1339  000994  0E00               	movlw	high _UARTBUFF
  1340  000996  6E11               	movwf	(??_UART_FindOnBuffer+1)^0,c
  1341  000998  501B               	movf	UART_FindOnBuffer@z^0,w,c
  1342  00099A  2610               	addwf	??_UART_FindOnBuffer^0,f,c
  1343  00099C  501C               	movf	(UART_FindOnBuffer@z+1)^0,w,c
  1344  00099E  2211               	addwfc	(??_UART_FindOnBuffer+1)^0,f,c
  1345  0009A0  5019               	movf	UART_FindOnBuffer@i^0,w,c
  1346  0009A2  2410               	addwf	??_UART_FindOnBuffer^0,w,c
  1347  0009A4  6ED9               	movwf	fsr2l,c
  1348  0009A6  501A               	movf	(UART_FindOnBuffer@i+1)^0,w,c
  1349  0009A8  2011               	addwfc	(??_UART_FindOnBuffer+1)^0,w,c
  1350  0009AA  6EDA               	movwf	fsr2h,c
  1351  0009AC  50DF               	movf	indf2,w,c
  1352  0009AE  6E12               	movwf	(??_UART_FindOnBuffer+2)^0,c
  1353  0009B0  501B               	movf	UART_FindOnBuffer@z^0,w,c
  1354  0009B2  240C               	addwf	UART_FindOnBuffer@compare^0,w,c
  1355  0009B4  6E13               	movwf	(??_UART_FindOnBuffer+3)^0,c
  1356  0009B6  501C               	movf	(UART_FindOnBuffer@z+1)^0,w,c
  1357  0009B8  200D               	addwfc	(UART_FindOnBuffer@compare+1)^0,w,c
  1358  0009BA  6E14               	movwf	(??_UART_FindOnBuffer+4)^0,c
  1359  0009BC  C013  FFF6         	movff	??_UART_FindOnBuffer+3,tblptrl
  1360  0009C0  C014  FFF7         	movff	??_UART_FindOnBuffer+4,tblptrh
  1361  0009C4                     	if	0	;tblptru may be non-zero
  1362  0009C4                     	endif
  1363  0009C4                     	if	0	;tblptru may be non-zero
  1364  0009C4                     	endif
  1365  0009C4  0008               	tblrd		*
  1366  0009C6  50F5               	movf	tablat,w,c
  1367  0009C8  1812               	xorwf	(??_UART_FindOnBuffer+2)^0,w,c
  1368  0009CA  B4D8               	btfsc	status,2,c
  1369  0009CC  EFEA  F004         	goto	u571
  1370  0009D0  EFEC  F004         	goto	u570
  1371  0009D4                     u571:
  1372  0009D4  EFF2  F004         	goto	l1183
  1373  0009D8                     u570:
  1374  0009D8                     
  1375                           ;USART_C.c: 101:                 located = 0;
  1376  0009D8  0E00               	movlw	0
  1377  0009DA  6E18               	movwf	(UART_FindOnBuffer@located+1)^0,c
  1378  0009DC  0E00               	movlw	0
  1379  0009DE  6E17               	movwf	UART_FindOnBuffer@located^0,c
  1380                           
  1381                           ;USART_C.c: 102:                 break;
  1382  0009E0  EFFF  F004         	goto	l1187
  1383  0009E4                     l1183:
  1384                           
  1385                           ;USART_C.c: 104:         }
  1386  0009E4  4A1B               	infsnz	UART_FindOnBuffer@z^0,f,c
  1387  0009E6  2A1C               	incf	(UART_FindOnBuffer@z+1)^0,f,c
  1388  0009E8                     l1185:
  1389  0009E8  5015               	movf	UART_FindOnBuffer@datasize^0,w,c
  1390  0009EA  5C1B               	subwf	UART_FindOnBuffer@z^0,w,c
  1391  0009EC  5016               	movf	(UART_FindOnBuffer@datasize+1)^0,w,c
  1392  0009EE  581C               	subwfb	(UART_FindOnBuffer@z+1)^0,w,c
  1393  0009F0  A0D8               	btfss	status,0,c
  1394  0009F2  EFFD  F004         	goto	u581
  1395  0009F6  EFFF  F004         	goto	u580
  1396  0009FA                     u581:
  1397  0009FA  EFC8  F004         	goto	l1179
  1398  0009FE                     u580:
  1399  0009FE                     l1187:
  1400                           
  1401                           ;USART_C.c: 106:         if(located == 1){
  1402  0009FE  0417               	decf	UART_FindOnBuffer@located^0,w,c
  1403  000A00  1018               	iorwf	(UART_FindOnBuffer@located+1)^0,w,c
  1404  000A02  A4D8               	btfss	status,2,c
  1405  000A04  EF06  F005         	goto	u591
  1406  000A08  EF08  F005         	goto	u590
  1407  000A0C                     u591:
  1408  000A0C  EF12  F005         	goto	l1191
  1409  000A10                     u590:
  1410  000A10                     
  1411                           ;USART_C.c: 108:             *addr = i;
  1412  000A10  C00E  FFD9         	movff	UART_FindOnBuffer@addr,fsr2l
  1413  000A14  C00F  FFDA         	movff	UART_FindOnBuffer@addr+1,fsr2h
  1414  000A18  C019  FFDE         	movff	UART_FindOnBuffer@i,postinc2
  1415  000A1C  C01A  FFDD         	movff	UART_FindOnBuffer@i+1,postdec2
  1416                           
  1417                           ;USART_C.c: 109:             break;
  1418  000A20  EF27  F005         	goto	l1195
  1419  000A24                     l1191:
  1420                           
  1421                           ;USART_C.c: 111:     }
  1422  000A24  4A19               	infsnz	UART_FindOnBuffer@i^0,f,c
  1423  000A26  2A1A               	incf	(UART_FindOnBuffer@i+1)^0,f,c
  1424  000A28                     l1193:
  1425  000A28  0E41               	movlw	65
  1426  000A2A  6E10               	movwf	??_UART_FindOnBuffer^0,c
  1427  000A2C  0E00               	movlw	0
  1428  000A2E  6E11               	movwf	(??_UART_FindOnBuffer+1)^0,c
  1429  000A30  5015               	movf	UART_FindOnBuffer@datasize^0,w,c
  1430  000A32  5E10               	subwf	??_UART_FindOnBuffer^0,f,c
  1431  000A34  5016               	movf	(UART_FindOnBuffer@datasize+1)^0,w,c
  1432  000A36  5A11               	subwfb	(??_UART_FindOnBuffer+1)^0,f,c
  1433  000A38  5010               	movf	??_UART_FindOnBuffer^0,w,c
  1434  000A3A  5C19               	subwf	UART_FindOnBuffer@i^0,w,c
  1435  000A3C  5011               	movf	(??_UART_FindOnBuffer+1)^0,w,c
  1436  000A3E  581A               	subwfb	(UART_FindOnBuffer@i+1)^0,w,c
  1437  000A40  A0D8               	btfss	status,0,c
  1438  000A42  EF25  F005         	goto	u601
  1439  000A46  EF27  F005         	goto	u600
  1440  000A4A                     u601:
  1441  000A4A  EFBE  F004         	goto	l1177
  1442  000A4E                     u600:
  1443  000A4E                     l1195:
  1444                           
  1445                           ;USART_C.c: 113:     if(located == 1)
  1446  000A4E  0417               	decf	UART_FindOnBuffer@located^0,w,c
  1447  000A50  1018               	iorwf	(UART_FindOnBuffer@located+1)^0,w,c
  1448  000A52  A4D8               	btfss	status,2,c
  1449  000A54  EF2E  F005         	goto	u611
  1450  000A58  EF30  F005         	goto	u610
  1451  000A5C                     u611:
  1452  000A5C  EF33  F005         	goto	l1203
  1453  000A60                     u610:
  1454  000A60                     
  1455                           ;USART_C.c: 114:         return 1;
  1456  000A60  80D8               	bsf	status,0,c
  1457  000A62  EF34  F005         	goto	l83
  1458  000A66                     l1203:
  1459                           
  1460                           ;USART_C.c: 116:         return 0;
  1461  000A66  90D8               	bcf	status,0,c
  1462  000A68                     l83:
  1463  000A68  0012               	return		;funcret
  1464  000A6A                     __end_of_UART_FindOnBuffer:
  1465                           	callstack 0
  1466                           
  1467 ;; *************** function _UART_ClearOnBuffer *****************
  1468 ;; Defined at:
  1469 ;;		line 120 in file "USART_C.c"
  1470 ;; Parameters:    Size  Location     Type
  1471 ;;  compare         2   11[COMRAM] PTR const unsigned char 
  1472 ;;		 -> STR_4(6), 
  1473 ;;  addr            2   13[COMRAM] unsigned int 
  1474 ;; Auto vars:     Size  Location     Type
  1475 ;;  i               2   17[COMRAM] unsigned int 
  1476 ;;  finalADDR       2   15[COMRAM] unsigned int 
  1477 ;; Return value:  Size  Location     Type
  1478 ;;                  1    wreg      void 
  1479 ;; Registers used:
  1480 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  1481 ;; Tracked objects:
  1482 ;;		On entry : 0/0
  1483 ;;		On exit  : 0/0
  1484 ;;		Unchanged: 0/0
  1485 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1486 ;;      Params:         4       0       0       0       0       0       0       0       0
  1487 ;;      Locals:         4       0       0       0       0       0       0       0       0
  1488 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1489 ;;      Totals:         8       0       0       0       0       0       0       0       0
  1490 ;;Total ram usage:        8 bytes
  1491 ;; Hardware stack levels used:    1
  1492 ;; Hardware stack levels required when called:    3
  1493 ;; This function calls:
  1494 ;;		_strlen
  1495 ;; This function is called by:
  1496 ;;		_main
  1497 ;; This function uses a non-reentrant model
  1498 ;;
  1499                           
  1500                           	psect	text9
  1501  000D68                     __ptext9:
  1502                           	callstack 0
  1503  000D68                     _UART_ClearOnBuffer:
  1504                           	callstack 27
  1505  000D68                     
  1506                           ;USART_C.c: 122:     unsigned int finalADDR = addr + strlen(compare) - 1;
  1507  000D68  C00C  F008         	movff	UART_ClearOnBuffer@compare,strlen@s
  1508  000D6C  C00D  F009         	movff	UART_ClearOnBuffer@compare+1,strlen@s+1
  1509  000D70  EC01  F007         	call	_strlen	;wreg free
  1510  000D74  500E               	movf	UART_ClearOnBuffer@addr^0,w,c
  1511  000D76  2608               	addwf	?_strlen^0,f,c
  1512  000D78  500F               	movf	(UART_ClearOnBuffer@addr+1)^0,w,c
  1513  000D7A  2209               	addwfc	(?_strlen+1)^0,f,c
  1514  000D7C  0EFF               	movlw	255
  1515  000D7E  2408               	addwf	?_strlen^0,w,c
  1516  000D80  6E10               	movwf	UART_ClearOnBuffer@finalADDR^0,c
  1517  000D82  0EFF               	movlw	255
  1518  000D84  2009               	addwfc	(?_strlen+1)^0,w,c
  1519  000D86  6E11               	movwf	(UART_ClearOnBuffer@finalADDR+1)^0,c
  1520  000D88                     
  1521                           ;USART_C.c: 124:     for(unsigned int i = 0; i < finalADDR; i++)
  1522  000D88  0E00               	movlw	0
  1523  000D8A  6E13               	movwf	(UART_ClearOnBuffer@i+1)^0,c
  1524  000D8C  0E00               	movlw	0
  1525  000D8E  6E12               	movwf	UART_ClearOnBuffer@i^0,c
  1526  000D90  EFD4  F006         	goto	l1215
  1527  000D94                     l1211:
  1528                           
  1529                           ;USART_C.c: 125:         UARTBUFF[i] = ' ';
  1530  000D94  0E60               	movlw	low _UARTBUFF
  1531  000D96  2412               	addwf	UART_ClearOnBuffer@i^0,w,c
  1532  000D98  6ED9               	movwf	fsr2l,c
  1533  000D9A  0E00               	movlw	high _UARTBUFF
  1534  000D9C  2013               	addwfc	(UART_ClearOnBuffer@i+1)^0,w,c
  1535  000D9E  6EDA               	movwf	fsr2h,c
  1536  000DA0  0E20               	movlw	32
  1537  000DA2  6EDF               	movwf	indf2,c
  1538  000DA4  4A12               	infsnz	UART_ClearOnBuffer@i^0,f,c
  1539  000DA6  2A13               	incf	(UART_ClearOnBuffer@i+1)^0,f,c
  1540  000DA8                     l1215:
  1541  000DA8  5010               	movf	UART_ClearOnBuffer@finalADDR^0,w,c
  1542  000DAA  5C12               	subwf	UART_ClearOnBuffer@i^0,w,c
  1543  000DAC  5011               	movf	(UART_ClearOnBuffer@finalADDR+1)^0,w,c
  1544  000DAE  5813               	subwfb	(UART_ClearOnBuffer@i+1)^0,w,c
  1545  000DB0  A0D8               	btfss	status,0,c
  1546  000DB2  EFDD  F006         	goto	u621
  1547  000DB6  EFDF  F006         	goto	u620
  1548  000DBA                     u621:
  1549  000DBA  EFCA  F006         	goto	l1211
  1550  000DBE                     u620:
  1551  000DBE  0012               	return		;funcret
  1552  000DC0                     __end_of_UART_ClearOnBuffer:
  1553                           	callstack 0
  1554                           
  1555 ;; *************** function _strlen *****************
  1556 ;; Defined at:
  1557 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\strlen.c"
  1558 ;; Parameters:    Size  Location     Type
  1559 ;;  s               2    7[COMRAM] PTR const unsigned char 
  1560 ;;		 -> STR_4(6), STR_2(6), 
  1561 ;; Auto vars:     Size  Location     Type
  1562 ;;  a               2    9[COMRAM] PTR const unsigned char 
  1563 ;;		 -> STR_4(6), STR_2(6), 
  1564 ;; Return value:  Size  Location     Type
  1565 ;;                  2    7[COMRAM] unsigned int 
  1566 ;; Registers used:
  1567 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru
  1568 ;; Tracked objects:
  1569 ;;		On entry : 0/0
  1570 ;;		On exit  : 0/0
  1571 ;;		Unchanged: 0/0
  1572 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1573 ;;      Params:         2       0       0       0       0       0       0       0       0
  1574 ;;      Locals:         2       0       0       0       0       0       0       0       0
  1575 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1576 ;;      Totals:         4       0       0       0       0       0       0       0       0
  1577 ;;Total ram usage:        4 bytes
  1578 ;; Hardware stack levels used:    1
  1579 ;; Hardware stack levels required when called:    2
  1580 ;; This function calls:
  1581 ;;		Nothing
  1582 ;; This function is called by:
  1583 ;;		_UART_FindOnBuffer
  1584 ;;		_UART_ClearOnBuffer
  1585 ;; This function uses a non-reentrant model
  1586 ;;
  1587                           
  1588                           	psect	text10
  1589  000E02                     __ptext10:
  1590                           	callstack 0
  1591  000E02                     _strlen:
  1592                           	callstack 27
  1593  000E02  C008  F00A         	movff	strlen@s,strlen@a
  1594  000E06  C009  F00B         	movff	strlen@s+1,strlen@a+1
  1595  000E0A  EF09  F007         	goto	l1125
  1596  000E0E                     l1123:
  1597  000E0E  4A08               	infsnz	strlen@s^0,f,c
  1598  000E10  2A09               	incf	(strlen@s+1)^0,f,c
  1599  000E12                     l1125:
  1600  000E12  C008  FFF6         	movff	strlen@s,tblptrl
  1601  000E16  C009  FFF7         	movff	strlen@s+1,tblptrh
  1602  000E1A                     	if	0	;tblptru may be non-zero
  1603  000E1A                     	endif
  1604  000E1A                     	if	0	;tblptru may be non-zero
  1605  000E1A                     	endif
  1606  000E1A  0008               	tblrd		*
  1607  000E1C  50F5               	movf	tablat,w,c
  1608  000E1E  0900               	iorlw	0
  1609  000E20  A4D8               	btfss	status,2,c
  1610  000E22  EF15  F007         	goto	u521
  1611  000E26  EF17  F007         	goto	u520
  1612  000E2A                     u521:
  1613  000E2A  EF07  F007         	goto	l1123
  1614  000E2E                     u520:
  1615  000E2E  500A               	movf	strlen@a^0,w,c
  1616  000E30  5C08               	subwf	strlen@s^0,w,c
  1617  000E32  6E08               	movwf	?_strlen^0,c
  1618  000E34  500B               	movf	(strlen@a+1)^0,w,c
  1619  000E36  5809               	subwfb	(strlen@s+1)^0,w,c
  1620  000E38  6E09               	movwf	(?_strlen+1)^0,c
  1621  000E3A  0012               	return		;funcret
  1622  000E3C                     __end_of_strlen:
  1623                           	callstack 0
  1624                           
  1625 ;; *************** function _interrupcoes *****************
  1626 ;; Defined at:
  1627 ;;		line 41 in file "main.c"
  1628 ;; Parameters:    Size  Location     Type
  1629 ;;		None
  1630 ;; Auto vars:     Size  Location     Type
  1631 ;;		None
  1632 ;; Return value:  Size  Location     Type
  1633 ;;                  1    wreg      void 
  1634 ;; Registers used:
  1635 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  1636 ;; Tracked objects:
  1637 ;;		On entry : 0/0
  1638 ;;		On exit  : 0/0
  1639 ;;		Unchanged: 0/0
  1640 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1641 ;;      Params:         0       0       0       0       0       0       0       0       0
  1642 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1643 ;;      Temps:          4       0       0       0       0       0       0       0       0
  1644 ;;      Totals:         4       0       0       0       0       0       0       0       0
  1645 ;;Total ram usage:        4 bytes
  1646 ;; Hardware stack levels used:    1
  1647 ;; Hardware stack levels required when called:    1
  1648 ;; This function calls:
  1649 ;;		_UART_Interrupt
  1650 ;; This function is called by:
  1651 ;;		Interrupt level 2
  1652 ;; This function uses a non-reentrant model
  1653 ;;
  1654                           
  1655                           	psect	intcode
  1656  000008                     __pintcode:
  1657                           	callstack 0
  1658  000008                     _interrupcoes:
  1659                           	callstack 26
  1660                           
  1661                           ;incstack = 0
  1662  000008  8229               	bsf	int$flags,1,c	;set compiler interrupt flag (level 2)
  1663  00000A  ED4A  F007         	call	int_func,f	;refresh shadow registers
  1664                           
  1665                           	psect	intcode_body
  1666  000E94                     __pintcode_body:
  1667                           	callstack 26
  1668  000E94                     int_func:
  1669                           	callstack 26
  1670  000E94  0006               	pop		; remove dummy address from shadow register refresh
  1671  000E96  CFE1 F004          	movff	fsr1l,??_interrupcoes
  1672  000E9A  CFE2 F005          	movff	fsr1h,??_interrupcoes+1
  1673  000E9E  CFD9 F006          	movff	fsr2l,??_interrupcoes+2
  1674  000EA2  CFDA F007          	movff	fsr2h,??_interrupcoes+3
  1675  000EA6                     
  1676                           ;main.c: 42:     UART_Interrupt();
  1677  000EA6  EC85  F006         	call	_UART_Interrupt	;wreg free
  1678  000EAA  C007  FFDA         	movff	??_interrupcoes+3,fsr2h
  1679  000EAE  C006  FFD9         	movff	??_interrupcoes+2,fsr2l
  1680  000EB2  C005  FFE2         	movff	??_interrupcoes+1,fsr1h
  1681  000EB6  C004  FFE1         	movff	??_interrupcoes,fsr1l
  1682  000EBA  9229               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
  1683  000EBC  0011               	retfie		f
  1684  000EBE                     __end_of_interrupcoes:
  1685                           	callstack 0
  1686                           
  1687 ;; *************** function _UART_Interrupt *****************
  1688 ;; Defined at:
  1689 ;;		line 73 in file "USART_C.c"
  1690 ;; Parameters:    Size  Location     Type
  1691 ;;		None
  1692 ;; Auto vars:     Size  Location     Type
  1693 ;;  i               2    1[COMRAM] unsigned int 
  1694 ;;  temp            1    0[COMRAM] unsigned char 
  1695 ;; Return value:  Size  Location     Type
  1696 ;;                  1    wreg      void 
  1697 ;; Registers used:
  1698 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0
  1699 ;; Tracked objects:
  1700 ;;		On entry : 0/0
  1701 ;;		On exit  : 0/0
  1702 ;;		Unchanged: 0/0
  1703 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1704 ;;      Params:         0       0       0       0       0       0       0       0       0
  1705 ;;      Locals:         3       0       0       0       0       0       0       0       0
  1706 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1707 ;;      Totals:         3       0       0       0       0       0       0       0       0
  1708 ;;Total ram usage:        3 bytes
  1709 ;; Hardware stack levels used:    1
  1710 ;; This function calls:
  1711 ;;		Nothing
  1712 ;; This function is called by:
  1713 ;;		_interrupcoes
  1714 ;; This function uses a non-reentrant model
  1715 ;;
  1716                           
  1717                           	psect	text12
  1718  000D0A                     __ptext12:
  1719                           	callstack 0
  1720  000D0A                     _UART_Interrupt:
  1721                           	callstack 26
  1722  000D0A                     
  1723                           ;USART_C.c: 75:     if(RCIF){
  1724  000D0A  AA9E               	btfss	3998,5,c	;volatile
  1725  000D0C  EF8A  F006         	goto	i2u55_41
  1726  000D10  EF8C  F006         	goto	i2u55_40
  1727  000D14                     i2u55_41:
  1728  000D14  EFB3  F006         	goto	i2l71
  1729  000D18                     i2u55_40:
  1730  000D18                     
  1731                           ;USART_C.c: 77:         char temp = RCREG;
  1732  000D18  CFAE F001          	movff	4014,UART_Interrupt@temp	;volatile
  1733  000D1C                     
  1734                           ;USART_C.c: 78:         for(unsigned int i = 0; i < 65 - 2; i++)
  1735  000D1C  0E00               	movlw	0
  1736  000D1E  6E03               	movwf	(UART_Interrupt@i+1)^0,c
  1737  000D20  0E00               	movlw	0
  1738  000D22  6E02               	movwf	UART_Interrupt@i^0,c
  1739  000D24                     i2l1161:
  1740                           
  1741                           ;USART_C.c: 79:             UARTBUFF[i] = UARTBUFF[i+1];
  1742  000D24  0E61               	movlw	low (_UARTBUFF+1)
  1743  000D26  2402               	addwf	UART_Interrupt@i^0,w,c
  1744  000D28  6ED9               	movwf	fsr2l,c
  1745  000D2A  0E00               	movlw	high (_UARTBUFF+1)
  1746  000D2C  2003               	addwfc	(UART_Interrupt@i+1)^0,w,c
  1747  000D2E  6EDA               	movwf	fsr2h,c
  1748  000D30  0E60               	movlw	low _UARTBUFF
  1749  000D32  2402               	addwf	UART_Interrupt@i^0,w,c
  1750  000D34  6EE1               	movwf	fsr1l,c
  1751  000D36  0E00               	movlw	high _UARTBUFF
  1752  000D38  2003               	addwfc	(UART_Interrupt@i+1)^0,w,c
  1753  000D3A  6EE2               	movwf	fsr1h,c
  1754  000D3C  CFDF FFE7          	movff	indf2,indf1
  1755  000D40  4A02               	infsnz	UART_Interrupt@i^0,f,c
  1756  000D42  2A03               	incf	(UART_Interrupt@i+1)^0,f,c
  1757  000D44  5003               	movf	(UART_Interrupt@i+1)^0,w,c
  1758  000D46  E109               	bnz	i2u56_40
  1759  000D48  0E3F               	movlw	63
  1760  000D4A  5C02               	subwf	UART_Interrupt@i^0,w,c
  1761  000D4C  A0D8               	btfss	status,0,c
  1762  000D4E  EFAB  F006         	goto	i2u56_41
  1763  000D52  EFAD  F006         	goto	i2u56_40
  1764  000D56                     i2u56_41:
  1765  000D56  EF92  F006         	goto	i2l1161
  1766  000D5A                     i2u56_40:
  1767  000D5A                     
  1768                           ;USART_C.c: 81:         UARTBUFF[65 - 2] = temp;
  1769  000D5A  C001  F09F         	movff	UART_Interrupt@temp,_UARTBUFF+63
  1770  000D5E                     
  1771                           ;USART_C.c: 82:         UARTBUFF[65 - 1] = '\0';
  1772  000D5E  0E00               	movlw	0
  1773  000D60  0100               	movlb	0	; () banked
  1774  000D62  6FA0               	movwf	(_UARTBUFF+64)& (0+255),b
  1775  000D64                     
  1776                           ; BSR set to: 0
  1777                           ;USART_C.c: 83:         RCIF = 0;
  1778  000D64  9A9E               	bcf	3998,5,c	;volatile
  1779  000D66                     i2l71:
  1780  000D66  0012               	return		;funcret
  1781  000D68                     __end_of_UART_Interrupt:
  1782                           	callstack 0
  1783                           
  1784                           	psect	rparam
  1785  0000                     
  1786                           	psect	temp
  1787  000029                     btemp:
  1788                           	callstack 0
  1789  000029                     	ds	1
  1790  0000                     int$flags	set	btemp
  1791  0000                     wtemp8	set	btemp+1
  1792  0000                     ttemp5	set	btemp+1
  1793  0000                     ttemp6	set	btemp+4
  1794  0000                     ttemp7	set	btemp+8
  1795                           
  1796                           	psect	idloc
  1797                           
  1798                           ;Config register IDLOC0 @ 0x200000
  1799                           ;	unspecified, using default values
  1800  200000                     	org	2097152
  1801  200000  FF                 	db	255
  1802                           
  1803                           ;Config register IDLOC1 @ 0x200001
  1804                           ;	unspecified, using default values
  1805  200001                     	org	2097153
  1806  200001  FF                 	db	255
  1807                           
  1808                           ;Config register IDLOC2 @ 0x200002
  1809                           ;	unspecified, using default values
  1810  200002                     	org	2097154
  1811  200002  FF                 	db	255
  1812                           
  1813                           ;Config register IDLOC3 @ 0x200003
  1814                           ;	unspecified, using default values
  1815  200003                     	org	2097155
  1816  200003  FF                 	db	255
  1817                           
  1818                           ;Config register IDLOC4 @ 0x200004
  1819                           ;	unspecified, using default values
  1820  200004                     	org	2097156
  1821  200004  FF                 	db	255
  1822                           
  1823                           ;Config register IDLOC5 @ 0x200005
  1824                           ;	unspecified, using default values
  1825  200005                     	org	2097157
  1826  200005  FF                 	db	255
  1827                           
  1828                           ;Config register IDLOC6 @ 0x200006
  1829                           ;	unspecified, using default values
  1830  200006                     	org	2097158
  1831  200006  FF                 	db	255
  1832                           
  1833                           ;Config register IDLOC7 @ 0x200007
  1834                           ;	unspecified, using default values
  1835  200007                     	org	2097159
  1836  200007  FF                 	db	255
  1837                           
  1838                           	psect	config
  1839                           
  1840                           ;Config register CONFIG1L @ 0x300000
  1841                           ;	PLL Prescaler Selection bits
  1842                           ;	PLLDIV = 4, Divide by 4 (16 MHz oscillator input)
  1843                           ;	System Clock Postscaler Selection bits
  1844                           ;	CPUDIV = OSC1_PLL2, [Primary Oscillator Src: /1][96 MHz PLL Src: /2]
  1845                           ;	USB Clock Selection bit (used in Full-Speed USB mode only; UCFG:FSEN = 1)
  1846                           ;	USBDIV = 1, USB clock source comes directly from the primary oscillator block with no 
      +                          postscale
  1847  300000                     	org	3145728
  1848  300000  03                 	db	3
  1849                           
  1850                           ;Config register CONFIG1H @ 0x300001
  1851                           ;	Oscillator Selection bits
  1852                           ;	FOSC = HSPLL_HS, HS oscillator, PLL enabled (HSPLL)
  1853                           ;	Fail-Safe Clock Monitor Enable bit
  1854                           ;	FCMEN = OFF, Fail-Safe Clock Monitor disabled
  1855                           ;	Internal/External Oscillator Switchover bit
  1856                           ;	IESO = OFF, Oscillator Switchover mode disabled
  1857  300001                     	org	3145729
  1858  300001  0E                 	db	14
  1859                           
  1860                           ;Config register CONFIG2L @ 0x300002
  1861                           ;	Power-up Timer Enable bit
  1862                           ;	PWRT = OFF, PWRT disabled
  1863                           ;	Brown-out Reset Enable bits
  1864                           ;	BOR = OFF, Brown-out Reset disabled in hardware and software
  1865                           ;	Brown-out Reset Voltage bits
  1866                           ;	BORV = 3, Minimum setting 2.05V
  1867                           ;	USB Voltage Regulator Enable bit
  1868                           ;	VREGEN = OFF, USB voltage regulator disabled
  1869  300002                     	org	3145730
  1870  300002  19                 	db	25
  1871                           
  1872                           ;Config register CONFIG2H @ 0x300003
  1873                           ;	Watchdog Timer Enable bit
  1874                           ;	WDT = OFF, WDT disabled (control is placed on the SWDTEN bit)
  1875                           ;	Watchdog Timer Postscale Select bits
  1876                           ;	WDTPS = 32768, 1:32768
  1877  300003                     	org	3145731
  1878  300003  1E                 	db	30
  1879                           
  1880                           ; Padding undefined space
  1881  300004                     	org	3145732
  1882  300004  FF                 	db	255
  1883                           
  1884                           ;Config register CONFIG3H @ 0x300005
  1885                           ;	CCP2 MUX bit
  1886                           ;	CCP2MX = ON, CCP2 input/output is multiplexed with RC1
  1887                           ;	PORTB A/D Enable bit
  1888                           ;	PBADEN = ON, PORTB<4:0> pins are configured as analog input channels on Reset
  1889                           ;	Low-Power Timer 1 Oscillator Enable bit
  1890                           ;	LPT1OSC = OFF, Timer1 configured for higher power operation
  1891                           ;	MCLR Pin Enable bit
  1892                           ;	MCLRE = ON, MCLR pin enabled; RE3 input pin disabled
  1893  300005                     	org	3145733
  1894  300005  83                 	db	131
  1895                           
  1896                           ;Config register CONFIG4L @ 0x300006
  1897                           ;	Stack Full/Underflow Reset Enable bit
  1898                           ;	STVREN = ON, Stack full/underflow will cause Reset
  1899                           ;	Single-Supply ICSP Enable bit
  1900                           ;	LVP = OFF, Single-Supply ICSP disabled
  1901                           ;	Extended Instruction Set Enable bit
  1902                           ;	XINST = OFF, Instruction set extension and Indexed Addressing mode disabled (Legacy mo
      +                          de)
  1903                           ;	Background Debugger Enable bit
  1904                           ;	DEBUG = 0x1, unprogrammed default
  1905  300006                     	org	3145734
  1906  300006  81                 	db	129
  1907                           
  1908                           ; Padding undefined space
  1909  300007                     	org	3145735
  1910  300007  FF                 	db	255
  1911                           
  1912                           ;Config register CONFIG5L @ 0x300008
  1913                           ;	Code Protection bit
  1914                           ;	CP0 = OFF, Block 0 (000800-001FFFh) is not code-protected
  1915                           ;	Code Protection bit
  1916                           ;	CP1 = OFF, Block 1 (002000-003FFFh) is not code-protected
  1917                           ;	Code Protection bit
  1918                           ;	CP2 = OFF, Block 2 (004000-005FFFh) is not code-protected
  1919                           ;	Code Protection bit
  1920                           ;	CP3 = OFF, Block 3 (006000-007FFFh) is not code-protected
  1921  300008                     	org	3145736
  1922  300008  0F                 	db	15
  1923                           
  1924                           ;Config register CONFIG5H @ 0x300009
  1925                           ;	Boot Block Code Protection bit
  1926                           ;	CPB = OFF, Boot block (000000-0007FFh) is not code-protected
  1927                           ;	Data EEPROM Code Protection bit
  1928                           ;	CPD = OFF, Data EEPROM is not code-protected
  1929  300009                     	org	3145737
  1930  300009  C0                 	db	192
  1931                           
  1932                           ;Config register CONFIG6L @ 0x30000A
  1933                           ;	Write Protection bit
  1934                           ;	WRT0 = OFF, Block 0 (000800-001FFFh) is not write-protected
  1935                           ;	Write Protection bit
  1936                           ;	WRT1 = OFF, Block 1 (002000-003FFFh) is not write-protected
  1937                           ;	Write Protection bit
  1938                           ;	WRT2 = OFF, Block 2 (004000-005FFFh) is not write-protected
  1939                           ;	Write Protection bit
  1940                           ;	WRT3 = OFF, Block 3 (006000-007FFFh) is not write-protected
  1941  30000A                     	org	3145738
  1942  30000A  0F                 	db	15
  1943                           
  1944                           ;Config register CONFIG6H @ 0x30000B
  1945                           ;	Configuration Register Write Protection bit
  1946                           ;	WRTC = OFF, Configuration registers (300000-3000FFh) are not write-protected
  1947                           ;	Boot Block Write Protection bit
  1948                           ;	WRTB = OFF, Boot block (000000-0007FFh) is not write-protected
  1949                           ;	Data EEPROM Write Protection bit
  1950                           ;	WRTD = OFF, Data EEPROM is not write-protected
  1951  30000B                     	org	3145739
  1952  30000B  E0                 	db	224
  1953                           
  1954                           ;Config register CONFIG7L @ 0x30000C
  1955                           ;	Table Read Protection bit
  1956                           ;	EBTR0 = OFF, Block 0 (000800-001FFFh) is not protected from table reads executed in ot
      +                          her blocks
  1957                           ;	Table Read Protection bit
  1958                           ;	EBTR1 = OFF, Block 1 (002000-003FFFh) is not protected from table reads executed in ot
      +                          her blocks
  1959                           ;	Table Read Protection bit
  1960                           ;	EBTR2 = OFF, Block 2 (004000-005FFFh) is not protected from table reads executed in ot
      +                          her blocks
  1961                           ;	Table Read Protection bit
  1962                           ;	EBTR3 = OFF, Block 3 (006000-007FFFh) is not protected from table reads executed in ot
      +                          her blocks
  1963  30000C                     	org	3145740
  1964  30000C  0F                 	db	15
  1965                           
  1966                           ;Config register CONFIG7H @ 0x30000D
  1967                           ;	Boot Block Table Read Protection bit
  1968                           ;	EBTRB = OFF, Boot block (000000-0007FFh) is not protected from table reads executed in
      +                           other blocks
  1969  30000D                     	org	3145741
  1970  30000D  40                 	db	64
  1971                           tosu	equ	0xFFF
  1972                           tosh	equ	0xFFE
  1973                           tosl	equ	0xFFD
  1974                           stkptr	equ	0xFFC
  1975                           pclatu	equ	0xFFB
  1976                           pclath	equ	0xFFA
  1977                           pcl	equ	0xFF9
  1978                           tblptru	equ	0xFF8
  1979                           tblptrh	equ	0xFF7
  1980                           tblptrl	equ	0xFF6
  1981                           tablat	equ	0xFF5
  1982                           prodh	equ	0xFF4
  1983                           prodl	equ	0xFF3
  1984                           indf0	equ	0xFEF
  1985                           postinc0	equ	0xFEE
  1986                           postdec0	equ	0xFED
  1987                           preinc0	equ	0xFEC
  1988                           plusw0	equ	0xFEB
  1989                           fsr0h	equ	0xFEA
  1990                           fsr0l	equ	0xFE9
  1991                           wreg	equ	0xFE8
  1992                           indf1	equ	0xFE7
  1993                           postinc1	equ	0xFE6
  1994                           postdec1	equ	0xFE5
  1995                           preinc1	equ	0xFE4
  1996                           plusw1	equ	0xFE3
  1997                           fsr1h	equ	0xFE2
  1998                           fsr1l	equ	0xFE1
  1999                           bsr	equ	0xFE0
  2000                           indf2	equ	0xFDF
  2001                           postinc2	equ	0xFDE
  2002                           postdec2	equ	0xFDD
  2003                           preinc2	equ	0xFDC
  2004                           plusw2	equ	0xFDB
  2005                           fsr2h	equ	0xFDA
  2006                           fsr2l	equ	0xFD9
  2007                           status	equ	0xFD8

Data Sizes:
    Strings     26
    Constant    0
    Data        65
    BSS         0
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     40      40
    BANK0           160      0      65
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0

Pointer List with Targets:

    strlen@s	PTR const unsigned char  size(2) Largest target is 6
		 -> STR_4(CODE[6]), STR_2(CODE[6]), 

    strlen@a	PTR const unsigned char  size(2) Largest target is 6
		 -> STR_4(CODE[6]), STR_2(CODE[6]), 

    UART_ClearOnBuffer@compare	PTR const unsigned char  size(2) Largest target is 6
		 -> STR_4(CODE[6]), 

    UART_FindOnBuffer@addr	PTR unsigned int  size(2) Largest target is 2
		 -> main@LocatedADDR(COMRAM[2]), 

    UART_FindOnBuffer@compare	PTR const unsigned char  size(2) Largest target is 6
		 -> STR_2(CODE[6]), 

    UART_Write_Text_ln@text	PTR const unsigned char  size(2) Largest target is 65
		 -> STR_3(CODE[11]), UARTBUFF(BANK0[65]), 

    UART_Write_Text@text	PTR const unsigned char  size(2) Largest target is 65
		 -> STR_3(CODE[11]), STR_1(CODE[9]), UARTBUFF(BANK0[65]), 


Critical Paths under _main in COMRAM

    _setup->_UART_Init
    _UART_Init->___aldiv
    _UART_Write_Text_ln->_UART_Write_Text
    _UART_Write_Text->_UART_Write
    _UART_FindOnBuffer->_strlen
    _UART_ClearOnBuffer->_strlen

Critical Paths under _interrupcoes in COMRAM

    _interrupcoes->_UART_Interrupt

Critical Paths under _main in BANK0

    None.

Critical Paths under _interrupcoes in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _interrupcoes in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _interrupcoes in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _interrupcoes in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _interrupcoes in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _interrupcoes in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _interrupcoes in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _interrupcoes in BANK7

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                10    10      0    2998
                                             35 COMRAM     5     5      0
                 _UART_ClearOnBuffer
                  _UART_FindOnBuffer
                    _UART_Write_Text
                 _UART_Write_Text_ln
                           _delay_ms
                              _setup
 ---------------------------------------------------------------------------------
 (1) _setup                                                0     0      0     837
                          _UART_Init
 ---------------------------------------------------------------------------------
 (2) _UART_Init                                           14    10      4     837
                                             21 COMRAM    14    10      4
                            ___aldiv
 ---------------------------------------------------------------------------------
 (3) ___aldiv                                             14     6      8     604
                                              7 COMRAM    14     6      8
 ---------------------------------------------------------------------------------
 (1) _delay_ms                                             8     6      2     168
                                              7 COMRAM     8     6      2
 ---------------------------------------------------------------------------------
 (1) _UART_Write_Text_ln                                   2     0      2     460
                                             14 COMRAM     2     0      2
                         _UART_Write
                    _UART_Write_Text
 ---------------------------------------------------------------------------------
 (2) _UART_Write_Text                                      6     4      2     264
                                              8 COMRAM     6     4      2
                         _UART_Write
 ---------------------------------------------------------------------------------
 (3) _UART_Write                                           1     1      0      22
                                              7 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _UART_FindOnBuffer                                   17    13      4     691
                                             11 COMRAM    17    13      4
                             _strlen
 ---------------------------------------------------------------------------------
 (1) _UART_ClearOnBuffer                                   8     4      4     507
                                             11 COMRAM     8     4      4
                             _strlen
 ---------------------------------------------------------------------------------
 (2) _strlen                                               4     2      2     242
                                              7 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (4) _interrupcoes                                         4     4      0     113
                                              3 COMRAM     4     4      0
                     _UART_Interrupt
 ---------------------------------------------------------------------------------
 (5) _UART_Interrupt                                       3     3      0     113
                                              0 COMRAM     3     3      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 5
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _UART_ClearOnBuffer
     _strlen
   _UART_FindOnBuffer
     _strlen
   _UART_Write_Text
     _UART_Write
   _UART_Write_Text_ln
     _UART_Write
     _UART_Write_Text
       _UART_Write
   _delay_ms
   _setup
     _UART_Init
       ___aldiv

 _interrupcoes (ROOT)
   _UART_Interrupt

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             7FF      0       0      21        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0      0      41       5       40.6%
BITCOMRAM           5E      0       0       0        0.0%
COMRAM              5E     28      28       1       42.6%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      69      20        0.0%
DATA                 0      0      69       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.31 build 20201012212115 
Symbol Table                                                                                   Thu Jan 14 23:50:04 2021

                          l8 0D08                           l42 0EEC                           l51 0CA8  
                         l35 0942                           l54 0ED6                           l39 0EDA  
                         l90 0DBE                           l83 0A68                          l123 0E92  
                        l219 0B74                          l817 0E3A                          u400 0AFA  
                        u401 0AF6                          u410 0B22                          u411 0B1E  
                        u500 0C98                          u420 0B54                          u421 0B50  
                        u510 0CA8                          u511 0CA4                          u520 0E2E  
                        u600 0A4E                          u360 0EE8                          u521 0E2A  
                        u601 0A4A                          u361 0EE4                          u610 0A60  
                        u530 0CEE                          u370 0A7C                          u450 08A4  
                        u611 0A5C                          u507 0C8E                          u531 0CEA  
                        u371 0A78                          u451 08A0                          u435 082E  
                        u620 0DBE                          u540 0D08                          u380 0A9E  
                        u621 0DBA                          u541 0D04                          u381 0A9A  
                        u445 0868                          u390 0AD8                          u630 0B94  
                        u391 0AD4                          u631 0B8C                          u480 0932  
                        u481 092E                          u465 08B6                          u570 09D8  
                        u490 0C64                          u650 0BEC                          u571 09D4  
                        u475 08F0                          u651 0BE6                          u580 09FE  
                        u660 0BEE                          u581 09FA                          u590 0A10  
                        u670 0C04                          u591 0A0C                          u671 0C00  
                        u648 0B96                          u497 0C5A  __size_of_UART_Write_Text_ln 001A  
          _UART_FindOnBuffer 0944                          wreg 000FE8           ?_UART_FindOnBuffer 000C  
                       l1101 0894                         l1103 08A4                         l1121 0E02  
                       l1113 0C2C                         l1105 091C                         l1123 0E0E  
                       l1211 0D94                         l1203 0A66                         l1051 0EE8  
                       l1115 0C38                         l1131 0CAA                         l1107 091E  
                       l1125 0E12                         l1213 0DA4                         l1117 0C68  
                       l1141 0CEE                         l1133 0CB6                         l1061 0A90  
                       l1053 0A6A                         l1109 0932                         l1221 0E74  
                       l1127 0E2E                         l1215 0DA8                         l1207 0D68  
                       l1119 0C6C                         l1143 0CF2                         l1071 0AD8  
                       l1063 0A9E                         l1055 0A6E                         l1231 0E7E  
                       l1223 0E76                         l1209 0D88                         l1049 0EDA  
                       l1145 0EBE                         l1081 0B22                         l1073 0AE0  
                       l1065 0AAE                         l1057 0A7C                         l1225 0E78  
                       l1217 0E6A                         l1241 0B76                         l1171 0944  
                       l1147 0ECA                         l1139 0CC6                         l1091 0B54  
                       l1083 0B32                         l1075 0AEC                         l1067 0AB2  
                       l1059 0A8C                         l1227 0E7A                         l1219 0E72  
                       l1251 0BBC                         l1243 0B7E                         l1181 09D8  
                       l1173 095C                         l1149 0ED0                         l1093 0B64  
                       l1085 0B34                         l1077 0AFA                         l1069 0AC2  
                       l1229 0E7C                         l1253 0BC8                         l1245 0B82  
                       l1191 0A24                         l1183 09E4                         l1175 0970  
                       l1087 0B3E                         l1079 0B04                         l1255 0BF2  
                       l1247 0BA4                         l1185 09E8                         l1177 097C  
                       l1193 0A28                         l1089 0B44                         l1097 081C  
                       l1257 0C04                         l1249 0BB0                         l1195 0A4E  
                       l1187 09FE                         l1179 0990                         l1099 081C  
                       l1259 0C10                         l1197 0A60                         l1189 0A10  
                       STR_1 080C                         STR_2 0815                         STR_3 0801  
                       STR_4 0815                         _BRGH 007D62                         _RCIF 007CF5  
                       i2l70 0D5A                         i2l71 0D66                         _TRMT 007D61  
                       _main 0B76          ??_UART_FindOnBuffer 0010                         fsr0h 000FEA  
                       fsr1h 000FE2                         indf0 000FEF                         fsr2h 000FDA  
                       fsr0l 000FE9                         indf1 000FE7                         indf2 000FDF  
                       fsr1l 000FE1                         fsr2l 000FD9                         btemp 0029  
                       start 000E                 ___param_bank 000000      __end_of_UART_Write_Text 0CAA  
      UART_FindOnBuffer@addr 000E              __end_of___aldiv 0B76                        ?_main 0001  
  __end_of_UART_FindOnBuffer 0A6A                        i2l128 0EAA                        _RCREG 000FAE  
                      _SPBRG 000FAF                        _TXREG 000FAD                  ?_UART_Write 0001  
         __size_of_UART_Init 0128                        _setup 0E6A                        tablat 000FF5  
                      ttemp5 002A                        ttemp6 002D                        ttemp7 0031  
                      status 000FD8                        wtemp8 002A              __initialization 0E3C  
               __end_of_main 0C2C           UART_Interrupt@temp 0001                       ??_main 0024  
              __activetblptr 000002                       ?_setup 0001                       i2l1151 0D0A  
                     i2l1161 0D24                       i2l1153 0D18                       i2l1163 0D40  
                     i2l1155 0D1C                       i2l1165 0D44                       i2l1167 0D5E  
                     i2l1239 0EA6                       i2l1169 0D64              delay_ms@delayms 0008  
                     _OSCCON 000FD3             __end_of_delay_ms 0D0A            __end_of_UART_Init 0944  
        __size_of_UART_Write 0016                    ??___aldiv 0010             ?_UART_Write_Text 0009  
            main@LocatedADDR 0027                       _strlen 0E02   __size_of_UART_FindOnBuffer 0126  
    __size_of_UART_Interrupt 005E                 __mediumconst 0000                       tblptrh 000FF7  
                     tblptrl 000FF6                       tblptru 000FF8                   __accesstop 0060  
    __end_of__initialization 0E5C                ___rparam_used 000001               __pcstackCOMRAM 0001  
__size_of_UART_ClearOnBuffer 0058                ?_interrupcoes 0001                 __pidataBANK0 0DC0  
              __end_of_setup 0E94                      ??_setup 0024               ??_interrupcoes 0004  
 __end_of_UART_Write_Text_ln 0ED8                      ?_strlen 0008                    ?_delay_ms 0008  
               ??_UART_Write 0008                      _OSCTUNE 000F9B                      i2u55_40 0D18  
                    i2u55_41 0D14                      i2u56_40 0D5A                      i2u56_41 0D56  
                    __Hparam 0000                      __Lparam 0000                      ___aldiv 0A6A  
         __end_of_UART_Write 0EEE                 __psmallconst 0800                      __pcinit 0E3C  
                    __ramtop 0800                      __ptext0 0B76                      __ptext1 0E6A  
                    __ptext2 081C                      __ptext3 0A6A                      __ptext4 0CAA  
                    __ptext5 0EBE                      __ptext6 0C2C                      __ptext7 0ED8  
                    __ptext8 0944                      __ptext9 0D68               _UART_Interrupt 0D0A  
            __size_of_strlen 003A             ___aldiv@dividend 0008                   ??_delay_ms 000A  
             __pintcode_body 0E94         end_of_initialization 0E5C                __Lmediumconst 0000  
                    int_func 0E94                    _RCSTAbits 000FAB             ___aldiv@quotient 0012  
                    postdec1 000FE5                      postdec2 000FDD                      postinc0 000FEE  
                    postinc2 000FDE       __end_of_UART_Interrupt 0D68                      strlen@a 000A  
                    strlen@s 0008                    _UART_Init 081C               UART_Write@data 0008  
  UART_ClearOnBuffer@compare 000C                    _TRISBbits 000F93                    _TRISCbits 000F94  
       __end_of_interrupcoes 0EBE                    _TXSTAbits 000FAC              ?_UART_Interrupt 0001  
                 ?_UART_Init 0016     __size_of_UART_Write_Text 007E               __end_of_strlen 0E3C  
        start_initialization 0E3C   __end_of_UART_ClearOnBuffer 0DC0                  __pdataBANK0 0060  
     UART_ClearOnBuffer@addr 000E     UART_FindOnBuffer@compare 000C     UART_FindOnBuffer@located 0017  
                   ??_strlen 000A            __size_of_delay_ms 0060           _UART_Write_Text_ln 0EBE  
        ?_UART_Write_Text_ln 000F                    __pintcode 0008                     ?___aldiv 0008  
                ??_UART_Init 001A        __size_of_interrupcoes 0EB6                  __smallconst 0800  
       ??_UART_Write_Text_ln 0011                   UART_Init@x 0022               __size_of_setup 002A  
          ??_UART_Write_Text 000B              ___aldiv@divisor 000C              ___aldiv@counter 0010  
                   _LATBbits 000F8A                    delay_ms@i 000A                    delay_ms@j 000C  
                   _PIE1bits 000F9D                     _UARTBUFF 0060                     _UCFGbits 000F6F  
               _interrupcoes 0008            UART_Init@baudrate 0016           UART_FindOnBuffer@i 0019  
         UART_FindOnBuffer@z 001B              UART_Interrupt@i 0002                    copy_data0 0E50  
                   __Hrparam 0000             ??_UART_Interrupt 0001                     __Lrparam 0000  
  UART_FindOnBuffer@datasize 0015             __size_of___aldiv 010C          UART_ClearOnBuffer@i 0012  
                   _delay_ms 0CAA                     __ptext10 0E02                     __ptext12 0D0A  
        UART_Write_Text@text 0009                __size_of_main 00B6       UART_Write_Text_ln@text 000F  
                   int$flags 0029           _UART_ClearOnBuffer 0D68                   _INTCONbits 000FF2  
        ?_UART_ClearOnBuffer 000C                     intlevel2 0000         ??_UART_ClearOnBuffer 0010  
            _UART_Write_Text 0C2C                 ___aldiv@sign 0011                   _UART_Write 0ED8  
UART_ClearOnBuffer@finalADDR 0010                  main@FNSTATR 0025             UART_Write_Text@i 000D  
