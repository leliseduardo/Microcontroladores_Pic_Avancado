;  LST file generated by mikroListExporter - v.2.0 
; Date/Time: 22/06/2020 21:51:55
;----------------------------------------------

;Address Opcode 	ASM
0x0000	0xF002EF77  	GOTO        1262
0x0004	0x0000      	NOP
0x0006	0x0000      	NOP
0x0008	0xF000EF00  	GOTO        0
0x000C	0x0000      	NOP
0x000E	0x0000      	NOP
0x0010	0x0000      	NOP
0x0012	0x0000      	NOP
0x0014	0x0000      	NOP
0x0016	0x0000      	NOP
0x0018	0xD7F3      	BRA         0
_Delay_22us:
;__Lib_Delays.c,15 :: 		void Delay_22us() {
;__Lib_Delays.c,16 :: 		Delay_us(22);
0x001C	0x0E07      	MOVLW       7
0x001E	0x6E0D      	MOVWF       R13, 0
L_Delay_22us1:
0x0020	0x2E0D      	DECFSZ      R13, 1, 0
0x0022	0xD7FE      	BRA         L_Delay_22us1
;__Lib_Delays.c,17 :: 		}
0x0024	0x0012      	RETURN      0
; end of _Delay_22us
_ADC_Read:
;__Lib_ADC_A_D.c,35 :: 		
;__Lib_ADC_A_D.c,38 :: 		
0x0026	0x6AC2      	CLRF        ADCON0 
;__Lib_ADC_A_D.c,39 :: 		
0x0028	0x0E07      	MOVLW       7
0x002A	0x12C0      	IORWF       ADCON2, 1 
;__Lib_ADC_A_D.c,40 :: 		
0x002C	0x8EC0      	BSF         ADCON2, 7 
;__Lib_ADC_A_D.c,41 :: 		
0x002E	0xF000C01D  	MOVFF       FARG_ADC_Read_channel, R0
0x0032	0x3600      	RLCF        R0, 1 
0x0034	0x9000      	BCF         R0, 0 
0x0036	0x3600      	RLCF        R0, 1 
0x0038	0x9000      	BCF         R0, 0 
0x003A	0x5000      	MOVF        R0, 0 
0x003C	0x12C2      	IORWF       ADCON0, 1 
;__Lib_ADC_A_D.c,42 :: 		
0x003E	0x80C2      	BSF         ADCON0, 0 
;__Lib_ADC_A_D.c,43 :: 		
0x0040	0xDFED      	RCALL       _Delay_22us
;__Lib_ADC_A_D.c,44 :: 		
0x0042	0x82C2      	BSF         ADCON0, 1 
;__Lib_ADC_A_D.c,45 :: 		
L_ADC_Read2:
0x0044	0xA2C2      	BTFSS       ADCON0, 1 
0x0046	0xD001      	BRA         L_ADC_Read3
;__Lib_ADC_A_D.c,46 :: 		
0x0048	0xD7FD      	BRA         L_ADC_Read2
L_ADC_Read3:
;__Lib_ADC_A_D.c,47 :: 		
0x004A	0xF001CFC4  	MOVFF       ADRESH, R1
0x004E	0x6A00      	CLRF        R0 
;__Lib_ADC_A_D.c,48 :: 		
0x0050	0x50C3      	MOVF        ADRESL, 0 
0x0052	0x1200      	IORWF       R0, 1 
0x0054	0x0E00      	MOVLW       0
0x0056	0x1201      	IORWF       R1, 1 
;__Lib_ADC_A_D.c,49 :: 		
0x0058	0x90C2      	BCF         ADCON0, 0 
;__Lib_ADC_A_D.c,51 :: 		
;__Lib_ADC_A_D.c,52 :: 		
0x005A	0x0012      	RETURN      0
; end of _ADC_Read
_leBotao:
;TecladoAnalogico.c,146 :: 		void leBotao(){
;TecladoAnalogico.c,148 :: 		adc = ADC_Read(0);
0x005C	0x6A1D      	CLRF        FARG_ADC_Read_channel 
0x005E	0xDFE3      	RCALL       _ADC_Read
0x0060	0xF016C000  	MOVFF       R0, _adc
0x0064	0xF017C001  	MOVFF       R1, _adc+1
;TecladoAnalogico.c,150 :: 		if(adc > 94 && adc < 108 ) bot1 = 0x01;
0x0068	0x0E80      	MOVLW       128
0x006A	0x6E02      	MOVWF       R2 
0x006C	0x0E80      	MOVLW       128
0x006E	0x1801      	XORWF       R1, 0 
0x0070	0x5C02      	SUBWF       R2, 0 
0x0072	0xE102      	BNZ         L__leBotao142
0x0074	0x5000      	MOVF        R0, 0 
0x0076	0x085E      	SUBLW       94
L__leBotao142:
0x0078	0xE20B      	BC          L_leBotao10
0x007A	0x0E80      	MOVLW       128
0x007C	0x1817      	XORWF       _adc+1, 0 
0x007E	0x6E00      	MOVWF       R0 
0x0080	0x0E80      	MOVLW       128
0x0082	0x5C00      	SUBWF       R0, 0 
0x0084	0xE102      	BNZ         L__leBotao143
0x0086	0x0E6C      	MOVLW       108
0x0088	0x5C16      	SUBWF       _adc, 0 
L__leBotao143:
0x008A	0xE202      	BC          L_leBotao10
L__leBotao141:
0x008C	0x8015      	BSF         _flag0, 0 
0x008E	0xD12C      	BRA         L_leBotao11
L_leBotao10:
;TecladoAnalogico.c,151 :: 		else if(adc > 108 && adc < 132 ) bot2 = 0x01; // Intervalos de 10 a menos a 10 a mais do que o valor AD de cada botão
0x0090	0x0E80      	MOVLW       128
0x0092	0x6E00      	MOVWF       R0 
0x0094	0x0E80      	MOVLW       128
0x0096	0x1817      	XORWF       _adc+1, 0 
0x0098	0x5C00      	SUBWF       R0, 0 
0x009A	0xE102      	BNZ         L__leBotao144
0x009C	0x5016      	MOVF        _adc, 0 
0x009E	0x086C      	SUBLW       108
L__leBotao144:
0x00A0	0xE20B      	BC          L_leBotao14
0x00A2	0x0E80      	MOVLW       128
0x00A4	0x1817      	XORWF       _adc+1, 0 
0x00A6	0x6E00      	MOVWF       R0 
0x00A8	0x0E80      	MOVLW       128
0x00AA	0x5C00      	SUBWF       R0, 0 
0x00AC	0xE102      	BNZ         L__leBotao145
0x00AE	0x0E84      	MOVLW       132
0x00B0	0x5C16      	SUBWF       _adc, 0 
L__leBotao145:
0x00B2	0xE202      	BC          L_leBotao14
L__leBotao140:
0x00B4	0x8215      	BSF         _flag0, 1 
0x00B6	0xD118      	BRA         L_leBotao15
L_leBotao14:
;TecladoAnalogico.c,152 :: 		else if(adc > 132 && adc < 162 ) bot3 = 0x01; // ou 20 a menos a 20 a mais
0x00B8	0x0E80      	MOVLW       128
0x00BA	0x6E00      	MOVWF       R0 
0x00BC	0x0E80      	MOVLW       128
0x00BE	0x1817      	XORWF       _adc+1, 0 
0x00C0	0x5C00      	SUBWF       R0, 0 
0x00C2	0xE102      	BNZ         L__leBotao146
0x00C4	0x5016      	MOVF        _adc, 0 
0x00C6	0x0884      	SUBLW       132
L__leBotao146:
0x00C8	0xE20B      	BC          L_leBotao18
0x00CA	0x0E80      	MOVLW       128
0x00CC	0x1817      	XORWF       _adc+1, 0 
0x00CE	0x6E00      	MOVWF       R0 
0x00D0	0x0E80      	MOVLW       128
0x00D2	0x5C00      	SUBWF       R0, 0 
0x00D4	0xE102      	BNZ         L__leBotao147
0x00D6	0x0EA2      	MOVLW       162
0x00D8	0x5C16      	SUBWF       _adc, 0 
L__leBotao147:
0x00DA	0xE202      	BC          L_leBotao18
L__leBotao139:
0x00DC	0x8415      	BSF         _flag0, 2 
0x00DE	0xD104      	BRA         L_leBotao19
L_leBotao18:
;TecladoAnalogico.c,153 :: 		else if(adc > 162 && adc < 208 ) bot4 = 0x01;
0x00E0	0x0E80      	MOVLW       128
0x00E2	0x6E00      	MOVWF       R0 
0x00E4	0x0E80      	MOVLW       128
0x00E6	0x1817      	XORWF       _adc+1, 0 
0x00E8	0x5C00      	SUBWF       R0, 0 
0x00EA	0xE102      	BNZ         L__leBotao148
0x00EC	0x5016      	MOVF        _adc, 0 
0x00EE	0x08A2      	SUBLW       162
L__leBotao148:
0x00F0	0xE20B      	BC          L_leBotao22
0x00F2	0x0E80      	MOVLW       128
0x00F4	0x1817      	XORWF       _adc+1, 0 
0x00F6	0x6E00      	MOVWF       R0 
0x00F8	0x0E80      	MOVLW       128
0x00FA	0x5C00      	SUBWF       R0, 0 
0x00FC	0xE102      	BNZ         L__leBotao149
0x00FE	0x0ED0      	MOVLW       208
0x0100	0x5C16      	SUBWF       _adc, 0 
L__leBotao149:
0x0102	0xE202      	BC          L_leBotao22
L__leBotao138:
0x0104	0x8615      	BSF         _flag0, 3 
0x0106	0xD0F0      	BRA         L_leBotao23
L_leBotao22:
;TecladoAnalogico.c,154 :: 		else if(adc > 244 && adc < 284 ) bot5 = 0x01;
0x0108	0x0E80      	MOVLW       128
0x010A	0x6E00      	MOVWF       R0 
0x010C	0x0E80      	MOVLW       128
0x010E	0x1817      	XORWF       _adc+1, 0 
0x0110	0x5C00      	SUBWF       R0, 0 
0x0112	0xE102      	BNZ         L__leBotao150
0x0114	0x5016      	MOVF        _adc, 0 
0x0116	0x08F4      	SUBLW       244
L__leBotao150:
0x0118	0xE20C      	BC          L_leBotao26
0x011A	0x0E80      	MOVLW       128
0x011C	0x1817      	XORWF       _adc+1, 0 
0x011E	0x6E00      	MOVWF       R0 
0x0120	0x0E80      	MOVLW       128
0x0122	0x0A01      	XORLW       1
0x0124	0x5C00      	SUBWF       R0, 0 
0x0126	0xE102      	BNZ         L__leBotao151
0x0128	0x0E1C      	MOVLW       28
0x012A	0x5C16      	SUBWF       _adc, 0 
L__leBotao151:
0x012C	0xE202      	BC          L_leBotao26
L__leBotao137:
0x012E	0x8815      	BSF         _flag0, 4 
0x0130	0xD0DB      	BRA         L_leBotao27
L_leBotao26:
;TecladoAnalogico.c,155 :: 		else if(adc > 328 && adc < 368 ) bot6 = 0x01;
0x0132	0x0E80      	MOVLW       128
0x0134	0x0A01      	XORLW       1
0x0136	0x6E00      	MOVWF       R0 
0x0138	0x0E80      	MOVLW       128
0x013A	0x1817      	XORWF       _adc+1, 0 
0x013C	0x5C00      	SUBWF       R0, 0 
0x013E	0xE102      	BNZ         L__leBotao152
0x0140	0x5016      	MOVF        _adc, 0 
0x0142	0x0848      	SUBLW       72
L__leBotao152:
0x0144	0xE20C      	BC          L_leBotao30
0x0146	0x0E80      	MOVLW       128
0x0148	0x1817      	XORWF       _adc+1, 0 
0x014A	0x6E00      	MOVWF       R0 
0x014C	0x0E80      	MOVLW       128
0x014E	0x0A01      	XORLW       1
0x0150	0x5C00      	SUBWF       R0, 0 
0x0152	0xE102      	BNZ         L__leBotao153
0x0154	0x0E70      	MOVLW       112
0x0156	0x5C16      	SUBWF       _adc, 0 
L__leBotao153:
0x0158	0xE202      	BC          L_leBotao30
L__leBotao136:
0x015A	0x8A15      	BSF         _flag0, 5 
0x015C	0xD0C5      	BRA         L_leBotao31
L_leBotao30:
;TecladoAnalogico.c,156 :: 		else if(adc > 389 && adc < 429 ) bot7 = 0x01;
0x015E	0x0E80      	MOVLW       128
0x0160	0x0A01      	XORLW       1
0x0162	0x6E00      	MOVWF       R0 
0x0164	0x0E80      	MOVLW       128
0x0166	0x1817      	XORWF       _adc+1, 0 
0x0168	0x5C00      	SUBWF       R0, 0 
0x016A	0xE102      	BNZ         L__leBotao154
0x016C	0x5016      	MOVF        _adc, 0 
0x016E	0x0885      	SUBLW       133
L__leBotao154:
0x0170	0xE20C      	BC          L_leBotao34
0x0172	0x0E80      	MOVLW       128
0x0174	0x1817      	XORWF       _adc+1, 0 
0x0176	0x6E00      	MOVWF       R0 
0x0178	0x0E80      	MOVLW       128
0x017A	0x0A01      	XORLW       1
0x017C	0x5C00      	SUBWF       R0, 0 
0x017E	0xE102      	BNZ         L__leBotao155
0x0180	0x0EAD      	MOVLW       173
0x0182	0x5C16      	SUBWF       _adc, 0 
L__leBotao155:
0x0184	0xE202      	BC          L_leBotao34
L__leBotao135:
0x0186	0x8C15      	BSF         _flag0, 6 
0x0188	0xD0AF      	BRA         L_leBotao35
L_leBotao34:
;TecladoAnalogico.c,157 :: 		else if(adc > 494 && adc < 534 ) bot8 = 0x01;
0x018A	0x0E80      	MOVLW       128
0x018C	0x0A01      	XORLW       1
0x018E	0x6E00      	MOVWF       R0 
0x0190	0x0E80      	MOVLW       128
0x0192	0x1817      	XORWF       _adc+1, 0 
0x0194	0x5C00      	SUBWF       R0, 0 
0x0196	0xE102      	BNZ         L__leBotao156
0x0198	0x5016      	MOVF        _adc, 0 
0x019A	0x08EE      	SUBLW       238
L__leBotao156:
0x019C	0xE20C      	BC          L_leBotao38
0x019E	0x0E80      	MOVLW       128
0x01A0	0x1817      	XORWF       _adc+1, 0 
0x01A2	0x6E00      	MOVWF       R0 
0x01A4	0x0E80      	MOVLW       128
0x01A6	0x0A02      	XORLW       2
0x01A8	0x5C00      	SUBWF       R0, 0 
0x01AA	0xE102      	BNZ         L__leBotao157
0x01AC	0x0E16      	MOVLW       22
0x01AE	0x5C16      	SUBWF       _adc, 0 
L__leBotao157:
0x01B0	0xE202      	BC          L_leBotao38
L__leBotao134:
0x01B2	0x8E15      	BSF         _flag0, 7 
0x01B4	0xD099      	BRA         L_leBotao39
L_leBotao38:
;TecladoAnalogico.c,158 :: 		else if(adc > 568 && adc < 608 ) bot9 = 0x01;
0x01B6	0x0E80      	MOVLW       128
0x01B8	0x0A02      	XORLW       2
0x01BA	0x6E00      	MOVWF       R0 
0x01BC	0x0E80      	MOVLW       128
0x01BE	0x1817      	XORWF       _adc+1, 0 
0x01C0	0x5C00      	SUBWF       R0, 0 
0x01C2	0xE102      	BNZ         L__leBotao158
0x01C4	0x5016      	MOVF        _adc, 0 
0x01C6	0x0838      	SUBLW       56
L__leBotao158:
0x01C8	0xE20C      	BC          L_leBotao42
0x01CA	0x0E80      	MOVLW       128
0x01CC	0x1817      	XORWF       _adc+1, 0 
0x01CE	0x6E00      	MOVWF       R0 
0x01D0	0x0E80      	MOVLW       128
0x01D2	0x0A02      	XORLW       2
0x01D4	0x5C00      	SUBWF       R0, 0 
0x01D6	0xE102      	BNZ         L__leBotao159
0x01D8	0x0E60      	MOVLW       96
0x01DA	0x5C16      	SUBWF       _adc, 0 
L__leBotao159:
0x01DC	0xE202      	BC          L_leBotao42
L__leBotao133:
0x01DE	0x8019      	BSF         _flag1, 0 
0x01E0	0xD083      	BRA         L_leBotao43
L_leBotao42:
;TecladoAnalogico.c,159 :: 		else if(adc > 678 && adc < 718 ) bot10 = 0x01;
0x01E2	0x0E80      	MOVLW       128
0x01E4	0x0A02      	XORLW       2
0x01E6	0x6E00      	MOVWF       R0 
0x01E8	0x0E80      	MOVLW       128
0x01EA	0x1817      	XORWF       _adc+1, 0 
0x01EC	0x5C00      	SUBWF       R0, 0 
0x01EE	0xE102      	BNZ         L__leBotao160
0x01F0	0x5016      	MOVF        _adc, 0 
0x01F2	0x08A6      	SUBLW       166
L__leBotao160:
0x01F4	0xE20C      	BC          L_leBotao46
0x01F6	0x0E80      	MOVLW       128
0x01F8	0x1817      	XORWF       _adc+1, 0 
0x01FA	0x6E00      	MOVWF       R0 
0x01FC	0x0E80      	MOVLW       128
0x01FE	0x0A02      	XORLW       2
0x0200	0x5C00      	SUBWF       R0, 0 
0x0202	0xE102      	BNZ         L__leBotao161
0x0204	0x0ECE      	MOVLW       206
0x0206	0x5C16      	SUBWF       _adc, 0 
L__leBotao161:
0x0208	0xE202      	BC          L_leBotao46
L__leBotao132:
0x020A	0x8219      	BSF         _flag1, 1 
0x020C	0xD06D      	BRA         L_leBotao47
L_leBotao46:
;TecladoAnalogico.c,160 :: 		else if(adc > 768 && adc < 808 ) bot11 = 0x01;
0x020E	0x0E80      	MOVLW       128
0x0210	0x0A03      	XORLW       3
0x0212	0x6E00      	MOVWF       R0 
0x0214	0x0E80      	MOVLW       128
0x0216	0x1817      	XORWF       _adc+1, 0 
0x0218	0x5C00      	SUBWF       R0, 0 
0x021A	0xE102      	BNZ         L__leBotao162
0x021C	0x5016      	MOVF        _adc, 0 
0x021E	0x0800      	SUBLW       0
L__leBotao162:
0x0220	0xE20C      	BC          L_leBotao50
0x0222	0x0E80      	MOVLW       128
0x0224	0x1817      	XORWF       _adc+1, 0 
0x0226	0x6E00      	MOVWF       R0 
0x0228	0x0E80      	MOVLW       128
0x022A	0x0A03      	XORLW       3
0x022C	0x5C00      	SUBWF       R0, 0 
0x022E	0xE102      	BNZ         L__leBotao163
0x0230	0x0E28      	MOVLW       40
0x0232	0x5C16      	SUBWF       _adc, 0 
L__leBotao163:
0x0234	0xE202      	BC          L_leBotao50
L__leBotao131:
0x0236	0x8419      	BSF         _flag1, 2 
0x0238	0xD057      	BRA         L_leBotao51
L_leBotao50:
;TecladoAnalogico.c,161 :: 		else if(adc > 820 && adc < 860 ) bot12 = 0x01;
0x023A	0x0E80      	MOVLW       128
0x023C	0x0A03      	XORLW       3
0x023E	0x6E00      	MOVWF       R0 
0x0240	0x0E80      	MOVLW       128
0x0242	0x1817      	XORWF       _adc+1, 0 
0x0244	0x5C00      	SUBWF       R0, 0 
0x0246	0xE102      	BNZ         L__leBotao164
0x0248	0x5016      	MOVF        _adc, 0 
0x024A	0x0834      	SUBLW       52
L__leBotao164:
0x024C	0xE20C      	BC          L_leBotao54
0x024E	0x0E80      	MOVLW       128
0x0250	0x1817      	XORWF       _adc+1, 0 
0x0252	0x6E00      	MOVWF       R0 
0x0254	0x0E80      	MOVLW       128
0x0256	0x0A03      	XORLW       3
0x0258	0x5C00      	SUBWF       R0, 0 
0x025A	0xE102      	BNZ         L__leBotao165
0x025C	0x0E5C      	MOVLW       92
0x025E	0x5C16      	SUBWF       _adc, 0 
L__leBotao165:
0x0260	0xE202      	BC          L_leBotao54
L__leBotao130:
0x0262	0x8619      	BSF         _flag1, 3 
0x0264	0xD041      	BRA         L_leBotao55
L_leBotao54:
;TecladoAnalogico.c,162 :: 		else if(adc > 871 && adc < 911 ) bot13 = 0x01;
0x0266	0x0E80      	MOVLW       128
0x0268	0x0A03      	XORLW       3
0x026A	0x6E00      	MOVWF       R0 
0x026C	0x0E80      	MOVLW       128
0x026E	0x1817      	XORWF       _adc+1, 0 
0x0270	0x5C00      	SUBWF       R0, 0 
0x0272	0xE102      	BNZ         L__leBotao166
0x0274	0x5016      	MOVF        _adc, 0 
0x0276	0x0867      	SUBLW       103
L__leBotao166:
0x0278	0xE20C      	BC          L_leBotao58
0x027A	0x0E80      	MOVLW       128
0x027C	0x1817      	XORWF       _adc+1, 0 
0x027E	0x6E00      	MOVWF       R0 
0x0280	0x0E80      	MOVLW       128
0x0282	0x0A03      	XORLW       3
0x0284	0x5C00      	SUBWF       R0, 0 
0x0286	0xE102      	BNZ         L__leBotao167
0x0288	0x0E8F      	MOVLW       143
0x028A	0x5C16      	SUBWF       _adc, 0 
L__leBotao167:
0x028C	0xE202      	BC          L_leBotao58
L__leBotao129:
0x028E	0x8819      	BSF         _flag1, 4 
0x0290	0xD02B      	BRA         L_leBotao59
L_leBotao58:
;TecladoAnalogico.c,163 :: 		else if(adc > 912 && adc < 952 ) bot14 = 0x01;
0x0292	0x0E80      	MOVLW       128
0x0294	0x0A03      	XORLW       3
0x0296	0x6E00      	MOVWF       R0 
0x0298	0x0E80      	MOVLW       128
0x029A	0x1817      	XORWF       _adc+1, 0 
0x029C	0x5C00      	SUBWF       R0, 0 
0x029E	0xE102      	BNZ         L__leBotao168
0x02A0	0x5016      	MOVF        _adc, 0 
0x02A2	0x0890      	SUBLW       144
L__leBotao168:
0x02A4	0xE20C      	BC          L_leBotao62
0x02A6	0x0E80      	MOVLW       128
0x02A8	0x1817      	XORWF       _adc+1, 0 
0x02AA	0x6E00      	MOVWF       R0 
0x02AC	0x0E80      	MOVLW       128
0x02AE	0x0A03      	XORLW       3
0x02B0	0x5C00      	SUBWF       R0, 0 
0x02B2	0xE102      	BNZ         L__leBotao169
0x02B4	0x0EB8      	MOVLW       184
0x02B6	0x5C16      	SUBWF       _adc, 0 
L__leBotao169:
0x02B8	0xE202      	BC          L_leBotao62
L__leBotao128:
0x02BA	0x8A19      	BSF         _flag1, 5 
0x02BC	0xD015      	BRA         L_leBotao63
L_leBotao62:
;TecladoAnalogico.c,164 :: 		else if(adc > 959 && adc < 999 ) bot15 = 0x01;
0x02BE	0x0E80      	MOVLW       128
0x02C0	0x0A03      	XORLW       3
0x02C2	0x6E00      	MOVWF       R0 
0x02C4	0x0E80      	MOVLW       128
0x02C6	0x1817      	XORWF       _adc+1, 0 
0x02C8	0x5C00      	SUBWF       R0, 0 
0x02CA	0xE102      	BNZ         L__leBotao170
0x02CC	0x5016      	MOVF        _adc, 0 
0x02CE	0x08BF      	SUBLW       191
L__leBotao170:
0x02D0	0xE20B      	BC          L_leBotao66
0x02D2	0x0E80      	MOVLW       128
0x02D4	0x1817      	XORWF       _adc+1, 0 
0x02D6	0x6E00      	MOVWF       R0 
0x02D8	0x0E80      	MOVLW       128
0x02DA	0x0A03      	XORLW       3
0x02DC	0x5C00      	SUBWF       R0, 0 
0x02DE	0xE102      	BNZ         L__leBotao171
0x02E0	0x0EE7      	MOVLW       231
0x02E2	0x5C16      	SUBWF       _adc, 0 
L__leBotao171:
0x02E4	0xA0D8      	BTFSS       STATUS, 0 
L__leBotao127:
0x02E6	0x8C19      	BSF         _flag1, 6 
L_leBotao66:
L_leBotao63:
L_leBotao59:
L_leBotao55:
L_leBotao51:
L_leBotao47:
L_leBotao43:
L_leBotao39:
L_leBotao35:
L_leBotao31:
L_leBotao27:
L_leBotao23:
L_leBotao19:
L_leBotao15:
L_leBotao11:
;TecladoAnalogico.c,166 :: 		if(adc < 94 && bot1){     // Confirma que o botão está solto
0x02E8	0x0E80      	MOVLW       128
0x02EA	0x1817      	XORWF       _adc+1, 0 
0x02EC	0x6E00      	MOVWF       R0 
0x02EE	0x0E80      	MOVLW       128
0x02F0	0x5C00      	SUBWF       R0, 0 
0x02F2	0xE102      	BNZ         L__leBotao172
0x02F4	0x0E5E      	MOVLW       94
0x02F6	0x5C16      	SUBWF       _adc, 0 
L__leBotao172:
0x02F8	0xE207      	BC          L_leBotao69
0x02FA	0xA015      	BTFSS       _flag0, 0 
0x02FC	0xD005      	BRA         L_leBotao69
L__leBotao126:
;TecladoAnalogico.c,168 :: 		flagAux = 0x01; // Esta flag confirma que algum botão foi pressionado, e entra faz entrar na rotina que faz o led piscar, no loop inf.
0x02FE	0x8E19      	BSF         _flag1, 7 
;TecladoAnalogico.c,169 :: 		pisca = 0x01;
0x0300	0x0E01      	MOVLW       1
0x0302	0x6E1C      	MOVWF       _pisca 
;TecladoAnalogico.c,170 :: 		s1 = 0x01;  // Coloca o mnemônico auxiliar S1 em 0x01, para o caso de querer usar um botão específico para uma função específica
0x0304	0x801B      	BSF         _flag2, 0 
;TecladoAnalogico.c,171 :: 		bot1 = 0x00;
0x0306	0x9015      	BCF         _flag0, 0 
;TecladoAnalogico.c,172 :: 		}
L_leBotao69:
;TecladoAnalogico.c,173 :: 		if(adc < 108 && bot2){
0x0308	0x0E80      	MOVLW       128
0x030A	0x1817      	XORWF       _adc+1, 0 
0x030C	0x6E00      	MOVWF       R0 
0x030E	0x0E80      	MOVLW       128
0x0310	0x5C00      	SUBWF       R0, 0 
0x0312	0xE102      	BNZ         L__leBotao173
0x0314	0x0E6C      	MOVLW       108
0x0316	0x5C16      	SUBWF       _adc, 0 
L__leBotao173:
0x0318	0xE207      	BC          L_leBotao72
0x031A	0xA215      	BTFSS       _flag0, 1 
0x031C	0xD005      	BRA         L_leBotao72
L__leBotao125:
;TecladoAnalogico.c,175 :: 		flagAux = 0x01;
0x031E	0x8E19      	BSF         _flag1, 7 
;TecladoAnalogico.c,176 :: 		pisca = 0x02; // Pisca definira o numero de piscadas. Quanto maio o botão, maior o número de piscadas
0x0320	0x0E02      	MOVLW       2
0x0322	0x6E1C      	MOVWF       _pisca 
;TecladoAnalogico.c,177 :: 		s2 = 0x01;
0x0324	0x821B      	BSF         _flag2, 1 
;TecladoAnalogico.c,178 :: 		bot2 = 0x00;
0x0326	0x9215      	BCF         _flag0, 1 
;TecladoAnalogico.c,179 :: 		}
L_leBotao72:
;TecladoAnalogico.c,180 :: 		if(adc < 132 && bot3){
0x0328	0x0E80      	MOVLW       128
0x032A	0x1817      	XORWF       _adc+1, 0 
0x032C	0x6E00      	MOVWF       R0 
0x032E	0x0E80      	MOVLW       128
0x0330	0x5C00      	SUBWF       R0, 0 
0x0332	0xE102      	BNZ         L__leBotao174
0x0334	0x0E84      	MOVLW       132
0x0336	0x5C16      	SUBWF       _adc, 0 
L__leBotao174:
0x0338	0xE207      	BC          L_leBotao75
0x033A	0xA415      	BTFSS       _flag0, 2 
0x033C	0xD005      	BRA         L_leBotao75
L__leBotao124:
;TecladoAnalogico.c,182 :: 		flagAux = 0x01;
0x033E	0x8E19      	BSF         _flag1, 7 
;TecladoAnalogico.c,183 :: 		pisca = 0x03;
0x0340	0x0E03      	MOVLW       3
0x0342	0x6E1C      	MOVWF       _pisca 
;TecladoAnalogico.c,184 :: 		s3 = 0x01;
0x0344	0x841B      	BSF         _flag2, 2 
;TecladoAnalogico.c,185 :: 		bot3 = 0x00;
0x0346	0x9415      	BCF         _flag0, 2 
;TecladoAnalogico.c,186 :: 		}
L_leBotao75:
;TecladoAnalogico.c,187 :: 		if(adc < 162 && bot4){
0x0348	0x0E80      	MOVLW       128
0x034A	0x1817      	XORWF       _adc+1, 0 
0x034C	0x6E00      	MOVWF       R0 
0x034E	0x0E80      	MOVLW       128
0x0350	0x5C00      	SUBWF       R0, 0 
0x0352	0xE102      	BNZ         L__leBotao175
0x0354	0x0EA2      	MOVLW       162
0x0356	0x5C16      	SUBWF       _adc, 0 
L__leBotao175:
0x0358	0xE207      	BC          L_leBotao78
0x035A	0xA615      	BTFSS       _flag0, 3 
0x035C	0xD005      	BRA         L_leBotao78
L__leBotao123:
;TecladoAnalogico.c,189 :: 		flagAux = 0x01;
0x035E	0x8E19      	BSF         _flag1, 7 
;TecladoAnalogico.c,190 :: 		pisca = 0x04;
0x0360	0x0E04      	MOVLW       4
0x0362	0x6E1C      	MOVWF       _pisca 
;TecladoAnalogico.c,191 :: 		s4 = 0x01;
0x0364	0x861B      	BSF         _flag2, 3 
;TecladoAnalogico.c,192 :: 		bot4 = 0x00;
0x0366	0x9615      	BCF         _flag0, 3 
;TecladoAnalogico.c,193 :: 		}
L_leBotao78:
;TecladoAnalogico.c,194 :: 		if(adc < 244 && bot5){
0x0368	0x0E80      	MOVLW       128
0x036A	0x1817      	XORWF       _adc+1, 0 
0x036C	0x6E00      	MOVWF       R0 
0x036E	0x0E80      	MOVLW       128
0x0370	0x5C00      	SUBWF       R0, 0 
0x0372	0xE102      	BNZ         L__leBotao176
0x0374	0x0EF4      	MOVLW       244
0x0376	0x5C16      	SUBWF       _adc, 0 
L__leBotao176:
0x0378	0xE207      	BC          L_leBotao81
0x037A	0xA815      	BTFSS       _flag0, 4 
0x037C	0xD005      	BRA         L_leBotao81
L__leBotao122:
;TecladoAnalogico.c,196 :: 		flagAux = 0x01;
0x037E	0x8E19      	BSF         _flag1, 7 
;TecladoAnalogico.c,197 :: 		pisca = 0x05;
0x0380	0x0E05      	MOVLW       5
0x0382	0x6E1C      	MOVWF       _pisca 
;TecladoAnalogico.c,198 :: 		s5 = 0x01;
0x0384	0x881B      	BSF         _flag2, 4 
;TecladoAnalogico.c,199 :: 		bot5 = 0x00;
0x0386	0x9815      	BCF         _flag0, 4 
;TecladoAnalogico.c,200 :: 		}
L_leBotao81:
;TecladoAnalogico.c,201 :: 		if(adc < 328 && bot6){
0x0388	0x0E80      	MOVLW       128
0x038A	0x1817      	XORWF       _adc+1, 0 
0x038C	0x6E00      	MOVWF       R0 
0x038E	0x0E80      	MOVLW       128
0x0390	0x0A01      	XORLW       1
0x0392	0x5C00      	SUBWF       R0, 0 
0x0394	0xE102      	BNZ         L__leBotao177
0x0396	0x0E48      	MOVLW       72
0x0398	0x5C16      	SUBWF       _adc, 0 
L__leBotao177:
0x039A	0xE207      	BC          L_leBotao84
0x039C	0xAA15      	BTFSS       _flag0, 5 
0x039E	0xD005      	BRA         L_leBotao84
L__leBotao121:
;TecladoAnalogico.c,203 :: 		flagAux = 0x01;
0x03A0	0x8E19      	BSF         _flag1, 7 
;TecladoAnalogico.c,204 :: 		pisca = 0x06;
0x03A2	0x0E06      	MOVLW       6
0x03A4	0x6E1C      	MOVWF       _pisca 
;TecladoAnalogico.c,205 :: 		s6 = 0x01;
0x03A6	0x8A1B      	BSF         _flag2, 5 
;TecladoAnalogico.c,206 :: 		bot6 = 0x00;
0x03A8	0x9A15      	BCF         _flag0, 5 
;TecladoAnalogico.c,207 :: 		}
L_leBotao84:
;TecladoAnalogico.c,208 :: 		if(adc < 389 && bot7){
0x03AA	0x0E80      	MOVLW       128
0x03AC	0x1817      	XORWF       _adc+1, 0 
0x03AE	0x6E00      	MOVWF       R0 
0x03B0	0x0E80      	MOVLW       128
0x03B2	0x0A01      	XORLW       1
0x03B4	0x5C00      	SUBWF       R0, 0 
0x03B6	0xE102      	BNZ         L__leBotao178
0x03B8	0x0E85      	MOVLW       133
0x03BA	0x5C16      	SUBWF       _adc, 0 
L__leBotao178:
0x03BC	0xE207      	BC          L_leBotao87
0x03BE	0xAC15      	BTFSS       _flag0, 6 
0x03C0	0xD005      	BRA         L_leBotao87
L__leBotao120:
;TecladoAnalogico.c,210 :: 		flagAux = 0x01;
0x03C2	0x8E19      	BSF         _flag1, 7 
;TecladoAnalogico.c,211 :: 		pisca = 0x07;
0x03C4	0x0E07      	MOVLW       7
0x03C6	0x6E1C      	MOVWF       _pisca 
;TecladoAnalogico.c,212 :: 		s7 = 0x01;
0x03C8	0x8C1B      	BSF         _flag2, 6 
;TecladoAnalogico.c,213 :: 		bot7 = 0x00;
0x03CA	0x9C15      	BCF         _flag0, 6 
;TecladoAnalogico.c,214 :: 		}
L_leBotao87:
;TecladoAnalogico.c,215 :: 		if(adc < 494 && bot8){
0x03CC	0x0E80      	MOVLW       128
0x03CE	0x1817      	XORWF       _adc+1, 0 
0x03D0	0x6E00      	MOVWF       R0 
0x03D2	0x0E80      	MOVLW       128
0x03D4	0x0A01      	XORLW       1
0x03D6	0x5C00      	SUBWF       R0, 0 
0x03D8	0xE102      	BNZ         L__leBotao179
0x03DA	0x0EEE      	MOVLW       238
0x03DC	0x5C16      	SUBWF       _adc, 0 
L__leBotao179:
0x03DE	0xE207      	BC          L_leBotao90
0x03E0	0xAE15      	BTFSS       _flag0, 7 
0x03E2	0xD005      	BRA         L_leBotao90
L__leBotao119:
;TecladoAnalogico.c,217 :: 		flagAux = 0x01;
0x03E4	0x8E19      	BSF         _flag1, 7 
;TecladoAnalogico.c,218 :: 		pisca = 0x08;
0x03E6	0x0E08      	MOVLW       8
0x03E8	0x6E1C      	MOVWF       _pisca 
;TecladoAnalogico.c,219 :: 		s8 = 0x01;
0x03EA	0x8E1B      	BSF         _flag2, 7 
;TecladoAnalogico.c,220 :: 		bot8 = 0x00;
0x03EC	0x9E15      	BCF         _flag0, 7 
;TecladoAnalogico.c,221 :: 		}
L_leBotao90:
;TecladoAnalogico.c,222 :: 		if(adc < 568 && bot9){
0x03EE	0x0E80      	MOVLW       128
0x03F0	0x1817      	XORWF       _adc+1, 0 
0x03F2	0x6E00      	MOVWF       R0 
0x03F4	0x0E80      	MOVLW       128
0x03F6	0x0A02      	XORLW       2
0x03F8	0x5C00      	SUBWF       R0, 0 
0x03FA	0xE102      	BNZ         L__leBotao180
0x03FC	0x0E38      	MOVLW       56
0x03FE	0x5C16      	SUBWF       _adc, 0 
L__leBotao180:
0x0400	0xE207      	BC          L_leBotao93
0x0402	0xA019      	BTFSS       _flag1, 0 
0x0404	0xD005      	BRA         L_leBotao93
L__leBotao118:
;TecladoAnalogico.c,224 :: 		flagAux = 0x01;
0x0406	0x8E19      	BSF         _flag1, 7 
;TecladoAnalogico.c,225 :: 		pisca = 0x09;
0x0408	0x0E09      	MOVLW       9
0x040A	0x6E1C      	MOVWF       _pisca 
;TecladoAnalogico.c,226 :: 		s9 = 0x01;
0x040C	0x801A      	BSF         _flag3, 0 
;TecladoAnalogico.c,227 :: 		bot9 = 0x00;
0x040E	0x9019      	BCF         _flag1, 0 
;TecladoAnalogico.c,228 :: 		}
L_leBotao93:
;TecladoAnalogico.c,229 :: 		if(adc < 678 && bot10){
0x0410	0x0E80      	MOVLW       128
0x0412	0x1817      	XORWF       _adc+1, 0 
0x0414	0x6E00      	MOVWF       R0 
0x0416	0x0E80      	MOVLW       128
0x0418	0x0A02      	XORLW       2
0x041A	0x5C00      	SUBWF       R0, 0 
0x041C	0xE102      	BNZ         L__leBotao181
0x041E	0x0EA6      	MOVLW       166
0x0420	0x5C16      	SUBWF       _adc, 0 
L__leBotao181:
0x0422	0xE207      	BC          L_leBotao96
0x0424	0xA219      	BTFSS       _flag1, 1 
0x0426	0xD005      	BRA         L_leBotao96
L__leBotao117:
;TecladoAnalogico.c,231 :: 		flagAux = 0x01;
0x0428	0x8E19      	BSF         _flag1, 7 
;TecladoAnalogico.c,232 :: 		pisca = 0x0A;
0x042A	0x0E0A      	MOVLW       10
0x042C	0x6E1C      	MOVWF       _pisca 
;TecladoAnalogico.c,233 :: 		s10 = 0x01;
0x042E	0x821A      	BSF         _flag3, 1 
;TecladoAnalogico.c,234 :: 		bot10 = 0x00;
0x0430	0x9219      	BCF         _flag1, 1 
;TecladoAnalogico.c,235 :: 		}
L_leBotao96:
;TecladoAnalogico.c,236 :: 		if(adc < 768 && bot11){
0x0432	0x0E80      	MOVLW       128
0x0434	0x1817      	XORWF       _adc+1, 0 
0x0436	0x6E00      	MOVWF       R0 
0x0438	0x0E80      	MOVLW       128
0x043A	0x0A03      	XORLW       3
0x043C	0x5C00      	SUBWF       R0, 0 
0x043E	0xE102      	BNZ         L__leBotao182
0x0440	0x0E00      	MOVLW       0
0x0442	0x5C16      	SUBWF       _adc, 0 
L__leBotao182:
0x0444	0xE207      	BC          L_leBotao99
0x0446	0xA419      	BTFSS       _flag1, 2 
0x0448	0xD005      	BRA         L_leBotao99
L__leBotao116:
;TecladoAnalogico.c,238 :: 		flagAux = 0x01;
0x044A	0x8E19      	BSF         _flag1, 7 
;TecladoAnalogico.c,239 :: 		pisca = 0x0B;
0x044C	0x0E0B      	MOVLW       11
0x044E	0x6E1C      	MOVWF       _pisca 
;TecladoAnalogico.c,240 :: 		s11 = 0x01;
0x0450	0x841A      	BSF         _flag3, 2 
;TecladoAnalogico.c,241 :: 		bot11 = 0x00;
0x0452	0x9419      	BCF         _flag1, 2 
;TecladoAnalogico.c,242 :: 		}
L_leBotao99:
;TecladoAnalogico.c,243 :: 		if(adc < 820 && bot12){
0x0454	0x0E80      	MOVLW       128
0x0456	0x1817      	XORWF       _adc+1, 0 
0x0458	0x6E00      	MOVWF       R0 
0x045A	0x0E80      	MOVLW       128
0x045C	0x0A03      	XORLW       3
0x045E	0x5C00      	SUBWF       R0, 0 
0x0460	0xE102      	BNZ         L__leBotao183
0x0462	0x0E34      	MOVLW       52
0x0464	0x5C16      	SUBWF       _adc, 0 
L__leBotao183:
0x0466	0xE207      	BC          L_leBotao102
0x0468	0xA619      	BTFSS       _flag1, 3 
0x046A	0xD005      	BRA         L_leBotao102
L__leBotao115:
;TecladoAnalogico.c,245 :: 		flagAux = 0x01;
0x046C	0x8E19      	BSF         _flag1, 7 
;TecladoAnalogico.c,246 :: 		pisca = 0x0C;
0x046E	0x0E0C      	MOVLW       12
0x0470	0x6E1C      	MOVWF       _pisca 
;TecladoAnalogico.c,247 :: 		s12 = 0x01;
0x0472	0x861A      	BSF         _flag3, 3 
;TecladoAnalogico.c,248 :: 		bot12 = 0x00;
0x0474	0x9619      	BCF         _flag1, 3 
;TecladoAnalogico.c,249 :: 		}
L_leBotao102:
;TecladoAnalogico.c,250 :: 		if(adc < 871 && bot13){
0x0476	0x0E80      	MOVLW       128
0x0478	0x1817      	XORWF       _adc+1, 0 
0x047A	0x6E00      	MOVWF       R0 
0x047C	0x0E80      	MOVLW       128
0x047E	0x0A03      	XORLW       3
0x0480	0x5C00      	SUBWF       R0, 0 
0x0482	0xE102      	BNZ         L__leBotao184
0x0484	0x0E67      	MOVLW       103
0x0486	0x5C16      	SUBWF       _adc, 0 
L__leBotao184:
0x0488	0xE207      	BC          L_leBotao105
0x048A	0xA819      	BTFSS       _flag1, 4 
0x048C	0xD005      	BRA         L_leBotao105
L__leBotao114:
;TecladoAnalogico.c,252 :: 		flagAux = 0x01;
0x048E	0x8E19      	BSF         _flag1, 7 
;TecladoAnalogico.c,253 :: 		pisca = 0x0D;
0x0490	0x0E0D      	MOVLW       13
0x0492	0x6E1C      	MOVWF       _pisca 
;TecladoAnalogico.c,254 :: 		s13 = 0x01;
0x0494	0x881A      	BSF         _flag3, 4 
;TecladoAnalogico.c,255 :: 		bot13 = 0x00;
0x0496	0x9819      	BCF         _flag1, 4 
;TecladoAnalogico.c,256 :: 		}
L_leBotao105:
;TecladoAnalogico.c,257 :: 		if(adc < 912 && bot14){
0x0498	0x0E80      	MOVLW       128
0x049A	0x1817      	XORWF       _adc+1, 0 
0x049C	0x6E00      	MOVWF       R0 
0x049E	0x0E80      	MOVLW       128
0x04A0	0x0A03      	XORLW       3
0x04A2	0x5C00      	SUBWF       R0, 0 
0x04A4	0xE102      	BNZ         L__leBotao185
0x04A6	0x0E90      	MOVLW       144
0x04A8	0x5C16      	SUBWF       _adc, 0 
L__leBotao185:
0x04AA	0xE207      	BC          L_leBotao108
0x04AC	0xAA19      	BTFSS       _flag1, 5 
0x04AE	0xD005      	BRA         L_leBotao108
L__leBotao113:
;TecladoAnalogico.c,259 :: 		flagAux = 0x01;
0x04B0	0x8E19      	BSF         _flag1, 7 
;TecladoAnalogico.c,260 :: 		pisca = 0x0E;
0x04B2	0x0E0E      	MOVLW       14
0x04B4	0x6E1C      	MOVWF       _pisca 
;TecladoAnalogico.c,261 :: 		s14 = 0x01;
0x04B6	0x8A1A      	BSF         _flag3, 5 
;TecladoAnalogico.c,262 :: 		bot14 = 0x00;
0x04B8	0x9A19      	BCF         _flag1, 5 
;TecladoAnalogico.c,263 :: 		}
L_leBotao108:
;TecladoAnalogico.c,264 :: 		if(adc < 959 && bot15){
0x04BA	0x0E80      	MOVLW       128
0x04BC	0x1817      	XORWF       _adc+1, 0 
0x04BE	0x6E00      	MOVWF       R0 
0x04C0	0x0E80      	MOVLW       128
0x04C2	0x0A03      	XORLW       3
0x04C4	0x5C00      	SUBWF       R0, 0 
0x04C6	0xE102      	BNZ         L__leBotao186
0x04C8	0x0EBF      	MOVLW       191
0x04CA	0x5C16      	SUBWF       _adc, 0 
L__leBotao186:
0x04CC	0xE207      	BC          L_leBotao111
0x04CE	0xAC19      	BTFSS       _flag1, 6 
0x04D0	0xD005      	BRA         L_leBotao111
L__leBotao112:
;TecladoAnalogico.c,266 :: 		flagAux = 0x01;
0x04D2	0x8E19      	BSF         _flag1, 7 
;TecladoAnalogico.c,267 :: 		pisca = 0x0F;
0x04D4	0x0E0F      	MOVLW       15
0x04D6	0x6E1C      	MOVWF       _pisca 
;TecladoAnalogico.c,268 :: 		s15 = 0x01;
0x04D8	0x8C1A      	BSF         _flag3, 6 
;TecladoAnalogico.c,269 :: 		bot15 = 0x00;
0x04DA	0x9C19      	BCF         _flag1, 6 
;TecladoAnalogico.c,270 :: 		}
L_leBotao111:
;TecladoAnalogico.c,271 :: 		}
0x04DC	0x0012      	RETURN      0
; end of _leBotao
___CC2DW:
;__Lib_System.c,21 :: 		
;__Lib_System.c,23 :: 		
_CC2DL_Loop1:
;__Lib_System.c,24 :: 		
0x04DE	0x0009      	TBLRD*+
;__Lib_System.c,25 :: 		
0x04E0	0xFFE6CFF5  	MOVFF       TABLAT, POSTINC1
;__Lib_System.c,26 :: 		
0x04E4	0x0600      	DECF        R0, 1, 0
;__Lib_System.c,27 :: 		
0x04E6	0xE1FB      	BNZ         _CC2DL_Loop1
;__Lib_System.c,28 :: 		
0x04E8	0x0601      	DECF        R1, 1, 0
;__Lib_System.c,29 :: 		
0x04EA	0xE1F9      	BNZ         _CC2DL_Loop1
;__Lib_System.c,31 :: 		
0x04EC	0x0012      	RETURN      0
; end of ___CC2DW
_main:
0x04EE	0x6A15      	CLRF        _flag0 
0x04F0	0x6A16      	CLRF        _adc 
0x04F2	0x6A17      	CLRF        23 
0x04F4	0x6A18      	CLRF        _i 
0x04F6	0x6A19      	CLRF        _flag1 
0x04F8	0x6A1A      	CLRF        _flag3 
0x04FA	0x6A1B      	CLRF        _flag2 
0x04FC	0x6A1C      	CLRF        _pisca 
;TecladoAnalogico.c,115 :: 		void main() {
;TecladoAnalogico.c,117 :: 		ADCON0 = 0x01; // Configura AN0 como canal analógico e habilita o conversor AD
0x04FE	0x0E01      	MOVLW       1
0x0500	0x6EC2      	MOVWF       ADCON0 
;TecladoAnalogico.c,118 :: 		ADCON1 = 0x0E; // Configura o intervalo de tensão como as tensões da fonte (VSS e VDD) e configura apenas AN0 como porta analógica
0x0502	0x0E0E      	MOVLW       14
0x0504	0x6EC1      	MOVWF       ADCON1 
;TecladoAnalogico.c,120 :: 		TRISA = 0xFF; // Configura todo porta como entrada
0x0506	0x0EFF      	MOVLW       255
0x0508	0x6E92      	MOVWF       TRISA 
;TecladoAnalogico.c,121 :: 		TRISB = 0xFE; // Configura apenas RB0 como saída digital
0x050A	0x0EFE      	MOVLW       254
0x050C	0x6E93      	MOVWF       TRISB 
;TecladoAnalogico.c,122 :: 		led = 0x00; // Inicia RB0 em Low
0x050E	0x908A      	BCF         LATB0_bit, 0 
;TecladoAnalogico.c,124 :: 		while(1){
L_main0:
;TecladoAnalogico.c,126 :: 		leBotao();
0x0510	0xDDA5      	RCALL       _leBotao
;TecladoAnalogico.c,128 :: 		if(flagAux){
0x0512	0xAE19      	BTFSS       _flag1, 7 
0x0514	0xD026      	BRA         L_main2
;TecladoAnalogico.c,130 :: 		for(i = 0x00; i < pisca; i++){
0x0516	0x6A18      	CLRF        _i 
L_main3:
0x0518	0x501C      	MOVF        _pisca, 0 
0x051A	0x5C18      	SUBWF       _i, 0 
0x051C	0xE21E      	BC          L_main4
;TecladoAnalogico.c,132 :: 		led = 0x01;
0x051E	0x808A      	BSF         LATB0_bit, 0 
;TecladoAnalogico.c,133 :: 		delay_ms(200);
0x0520	0x0E02      	MOVLW       2
0x0522	0x6E0B      	MOVWF       R11, 0
0x0524	0x0E04      	MOVLW       4
0x0526	0x6E0C      	MOVWF       R12, 0
0x0528	0x0EBA      	MOVLW       186
0x052A	0x6E0D      	MOVWF       R13, 0
L_main6:
0x052C	0x2E0D      	DECFSZ      R13, 1, 0
0x052E	0xD7FE      	BRA         L_main6
0x0530	0x2E0C      	DECFSZ      R12, 1, 0
0x0532	0xD7FC      	BRA         L_main6
0x0534	0x2E0B      	DECFSZ      R11, 1, 0
0x0536	0xD7FA      	BRA         L_main6
0x0538	0x0000      	NOP
;TecladoAnalogico.c,134 :: 		led = 0x00;
0x053A	0x908A      	BCF         LATB0_bit, 0 
;TecladoAnalogico.c,135 :: 		delay_ms(200);
0x053C	0x0E02      	MOVLW       2
0x053E	0x6E0B      	MOVWF       R11, 0
0x0540	0x0E04      	MOVLW       4
0x0542	0x6E0C      	MOVWF       R12, 0
0x0544	0x0EBA      	MOVLW       186
0x0546	0x6E0D      	MOVWF       R13, 0
L_main7:
0x0548	0x2E0D      	DECFSZ      R13, 1, 0
0x054A	0xD7FE      	BRA         L_main7
0x054C	0x2E0C      	DECFSZ      R12, 1, 0
0x054E	0xD7FC      	BRA         L_main7
0x0550	0x2E0B      	DECFSZ      R11, 1, 0
0x0552	0xD7FA      	BRA         L_main7
0x0554	0x0000      	NOP
;TecladoAnalogico.c,130 :: 		for(i = 0x00; i < pisca; i++){
0x0556	0x2A18      	INCF        _i, 1 
;TecladoAnalogico.c,136 :: 		}
0x0558	0xD7DF      	BRA         L_main3
L_main4:
;TecladoAnalogico.c,138 :: 		flag0 = 0x00;
0x055A	0x6A15      	CLRF        _flag0 
;TecladoAnalogico.c,139 :: 		flag1 = 0x00;
0x055C	0x6A19      	CLRF        _flag1 
;TecladoAnalogico.c,140 :: 		flag2 = 0x00;
0x055E	0x6A1B      	CLRF        _flag2 
;TecladoAnalogico.c,141 :: 		flag3 = 0x00;
0x0560	0x6A1A      	CLRF        _flag3 
;TecladoAnalogico.c,142 :: 		}
L_main2:
;TecladoAnalogico.c,143 :: 		}
0x0562	0xD7D6      	BRA         L_main0
;TecladoAnalogico.c,144 :: 		}
0x0564	0xD7FF      	BRA         $+0
; end of _main
Symbol List:
//** Routines locations **
//ADDRESS    SIZE    PROCEDURE
//----------------------------------------------
0x001C      [10]    _Delay_22us
0x0026      [54]    _ADC_Read
0x005C    [1154]    _leBotao
0x04DE      [16]    ___CC2DW
0x04EE     [120]    _main
//** Variables locations ** 
//ADDRESS    SIZE    VARIABLE
//----------------------------------------------
0x0000       [1]    UART1_Init_tmp_L0
0x0000       [1]    R0
0x0000       [1]    EEPROM_Write_SaveINTCON_L0
0x0000       [1]    __Lib_SoftI2C_PutZerosToLATScl_temp_scl_L0
0x0000       [1]    __Lib_SoftI2C_PutZerosToLATSda_temp_sda_L0
0x0000       [1]    SPI1_Write_tmp_L0
0x0000       [1]    FLASH_Erase_64_SaveINTCON_L0
0x0001       [1]    UART1_Read___tmp_UART1_Read_L0
0x0001       [1]    I2C1_Rd_tmp_L0
0x0001       [1]    FLASH_Write_32_i_L0
0x0001       [1]    ispunct_rslt_L0
0x0001       [1]    FLASH_Erase_Write_64_i_L0
0x0001       [2]    FLASH_Read_N_Bytes_i_L0
0x0001       [1]    R1
0x0001       [1]    __Lib_PS2_Wait_Falling_nsample_L0
0x0002       [1]    R2
0x0002       [2]    memcpy_dd_L0
0x0002       [2]    memset_pp_L0
0x0002       [2]    strlen_cp_L0
0x0002       [1]    FLASH_Write_32_SaveINTCON_L0
0x0002       [2]    memchr_s_L0
0x0002       [1]    FLASH_Erase_Write_64_j_L0
0x0003       [2]    memmove_tt_L0
0x0003       [1]    R3
0x0003       [1]    FLASH_Erase_Write_64_SaveINTCON_L0
0x0003       [2]    Ltrim_original_L0
0x0004       [2]    strncpy_cp_L0
0x0004       [1]    R4
0x0004       [2]    strncat_cp_L0
0x0004       [2]    frexp_pom_L0
0x0004       [2]    strcpy_cp_L0
0x0004       [2]    memcpy_ss_L0
0x0004       [2]    strcat_cp_L0
0x0005       [2]    LongWordToHex_input_half_L0
0x0005       [2]    Ltrim_p_L0
0x0005       [1]    R5
0x0005       [2]    LongIntToHex_input_half_L0
0x0005       [2]    memmove_ff_L0
0x0006       [1]    R6
0x0007       [1]    R7
0x0008       [1]    R8
0x0009       [1]    R9
0x000A       [1]    R10
0x000B       [1]    R11
0x000C       [1]    R12
0x000D       [1]    R13
0x000E       [1]    R14
0x000F       [1]    R15
0x0010       [1]    R16
0x0011       [1]    R17
0x0012       [1]    R18
0x0013       [1]    R19
0x0014       [1]    R20
0x0015       [1]    _flag0
0x0016       [2]    _adc
0x0018       [1]    _i
0x0019       [1]    _flag1
0x001A       [1]    _flag3
0x001B       [1]    _flag2
0x001C       [1]    _pisca
0x001D       [1]    FARG_ADC_Read_channel
0x0F80       [0]    SS_bit
0x0F80       [0]    CLKO_bit
0x0F80       [0]    VREFN_bit
0x0F80       [0]    VREFP_bit
0x0F80       [0]    NOT_SS_bit
0x0F80       [0]    LVDIN_bit
0x0F80       [0]    CLKI_bit
0x0F80       [0]    CVREF_bit
0x0F80       [0]    OSC1_bit
0x0F80       [0]    AN1_bit
0x0F80       [0]    AN2_bit
0x0F80       [1]    PORTA
0x0F80       [0]    AN0_bit
0x0F80       [0]    AN4_bit
0x0F80       [0]    OSC2_bit
0x0F80       [0]    AN3_bit
0x0F80       [0]    T0CKI_bit
0x0F80       [0]    RA5_bit
0x0F80       [0]    RA0_bit
0x0F80       [0]    RA6_bit
0x0F80       [0]    RA4_bit
0x0F80       [0]    RA2_bit
0x0F80       [0]    RA1_bit
0x0F80       [0]    RA3_bit
0x0F80       [0]    RA7_bit
0x0F81       [0]    CCP2_PORTB_bit
0x0F81       [0]    KBI3_bit
0x0F81       [0]    RB6_bit
0x0F81       [0]    INT2_bit
0x0F81       [0]    AN12_bit
0x0F81       [0]    RB0_bit
0x0F81       [0]    AN10_bit
0x0F81       [0]    KBI1_bit
0x0F81       [0]    KBI2_bit
0x0F81       [0]    RB7_bit
0x0F81       [0]    KBI0_bit
0x0F81       [0]    AN8_bit
0x0F81       [0]    PGC_bit
0x0F81       [0]    RB4_bit
0x0F81       [0]    PGM_bit
0x0F81       [1]    PORTB
0x0F81       [0]    PGD_bit
0x0F81       [0]    RB5_bit
0x0F81       [0]    RB3_bit
0x0F81       [0]    RB1_bit
0x0F81       [0]    INT0_bit
0x0F81       [0]    INT1_bit
0x0F81       [0]    AN11_bit
0x0F81       [0]    RB2_bit
0x0F81       [0]    AN9_bit
0x0F82       [0]    CCP2_PORTC_bit
0x0F82       [0]    T13CKI_bit
0x0F82       [0]    RX__bit
0x0F82       [0]    SCL_bit
0x0F82       [0]    T1CKI_bit
0x0F82       [0]    CK_bit
0x0F82       [0]    SDA_bit
0x0F82       [0]    CCP1_bit
0x0F82       [0]    T1OSI_bit
0x0F82       [0]    T1OSO_bit
0x0F82       [0]    SCK_bit
0x0F82       [0]    TX_bit
0x0F82       [0]    SDO_bit
0x0F82       [0]    SDI_bit
0x0F82       [0]    RC1_bit
0x0F82       [0]    RC2_bit
0x0F82       [1]    PORTC
0x0F82       [0]    RC0_bit
0x0F82       [0]    RC3_bit
0x0F82       [0]    RC6_bit
0x0F82       [0]    RC7_bit
0x0F82       [0]    RC4_bit
0x0F82       [0]    RC5_bit
0x0F83       [0]    PSP2_bit
0x0F83       [0]    PSP3_bit
0x0F83       [0]    PSP1_bit
0x0F83       [1]    PORTD
0x0F83       [0]    PSP0_bit
0x0F83       [0]    PSP4_bit
0x0F83       [0]    P1B_bit
0x0F83       [0]    P1C_bit
0x0F83       [0]    P1D_bit
0x0F83       [0]    PSP5_bit
0x0F83       [0]    PSP6_bit
0x0F83       [0]    PSP7_bit
0x0F83       [0]    RD3_bit
0x0F83       [0]    RD2_bit
0x0F83       [0]    RD1_bit
0x0F83       [0]    RD4_bit
0x0F83       [0]    RD7_bit
0x0F83       [0]    RD6_bit
0x0F83       [0]    RD5_bit
0x0F83       [0]    RD0_bit
0x0F84       [0]    NOT_WR_bit
0x0F84       [0]    AN7_bit
0x0F84       [0]    MCLR_bit
0x0F84       [0]    NOT_RD_bit
0x0F84       [0]    AN6_bit
0x0F84       [0]    NOT_MCLR_bit
0x0F84       [0]    NOT_CS_bit
0x0F84       [0]    AN5_bit
0x0F84       [0]    VPP_bit
0x0F84       [0]    RE1_bit
0x0F84       [0]    RE2_bit
0x0F84       [1]    PORTE
0x0F84       [0]    RE0_bit
0x0F84       [0]    WR_bit
0x0F84       [0]    CS_bit
0x0F84       [0]    RE3_bit
0x0F84       [0]    RD_bit
0x0F89       [0]    LATA5_bit
0x0F89       [0]    LATA4_bit
0x0F89       [0]    LATA7_bit
0x0F89       [0]    LATA6_bit
0x0F89       [0]    LATA3_bit
0x0F89       [0]    LATA0_bit
0x0F89       [1]    LATA
0x0F89       [0]    LATA2_bit
0x0F89       [0]    LATA1_bit
0x0F8A       [0]    LATB1_bit
0x0F8A       [0]    LATB3_bit
0x0F8A       [0]    LATB2_bit
0x0F8A       [1]    LATB
0x0F8A       [0]    LATB0_bit
0x0F8A       [0]    LATB6_bit
0x0F8A       [0]    LATB7_bit
0x0F8A       [0]    LATB4_bit
0x0F8A       [0]    LATB5_bit
0x0F8B       [0]    LATC7_bit
0x0F8B       [0]    LATC0_bit
0x0F8B       [0]    LATC3_bit
0x0F8B       [0]    LATC2_bit
0x0F8B       [0]    LATC4_bit
0x0F8B       [0]    LATC5_bit
0x0F8B       [0]    LATC6_bit
0x0F8B       [0]    LATC1_bit
0x0F8B       [1]    LATC
0x0F8C       [0]    LATD0_bit
0x0F8C       [0]    LATD1_bit
0x0F8C       [0]    LATD6_bit
0x0F8C       [0]    LATD7_bit
0x0F8C       [1]    LATD
0x0F8C       [0]    LATD5_bit
0x0F8C       [0]    LATD2_bit
0x0F8C       [0]    LATD3_bit
0x0F8C       [0]    LATD4_bit
0x0F8D       [0]    LATE2_bit
0x0F8D       [1]    LATE
0x0F8D       [0]    LATE0_bit
0x0F8D       [0]    LATE1_bit
0x0F92       [0]    TRISA5_bit
0x0F92       [0]    TRISA4_bit
0x0F92       [0]    TRISA7_bit
0x0F92       [0]    TRISA6_bit
0x0F92       [0]    TRISA1_bit
0x0F92       [0]    TRISA0_bit
0x0F92       [0]    TRISA3_bit
0x0F92       [0]    TRISA2_bit
0x0F92       [1]    TRISA
0x0F93       [0]    TRISB3_bit
0x0F93       [0]    TRISB6_bit
0x0F93       [0]    TRISB4_bit
0x0F93       [0]    TRISB7_bit
0x0F93       [0]    TRISB5_bit
0x0F93       [0]    TRISB0_bit
0x0F93       [0]    TRISB1_bit
0x0F93       [1]    TRISB
0x0F93       [0]    TRISB2_bit
0x0F94       [0]    TRISC1_bit
0x0F94       [0]    TRISC0_bit
0x0F94       [0]    TRISC2_bit
0x0F94       [0]    TRISC5_bit
0x0F94       [0]    TRISC6_bit
0x0F94       [0]    TRISC7_bit
0x0F94       [0]    TRISC4_bit
0x0F94       [1]    TRISC
0x0F94       [0]    TRISC3_bit
0x0F95       [0]    TRISD3_bit
0x0F95       [0]    TRISD4_bit
0x0F95       [0]    TRISD7_bit
0x0F95       [0]    TRISD6_bit
0x0F95       [0]    TRISD5_bit
0x0F95       [0]    TRISD0_bit
0x0F95       [1]    TRISD
0x0F95       [0]    TRISD2_bit
0x0F95       [0]    TRISD1_bit
0x0F96       [0]    PSPMODE_bit
0x0F96       [0]    TRISE0_bit
0x0F96       [1]    TRISE
0x0F96       [0]    OBF_bit
0x0F96       [0]    IBOV_bit
0x0F96       [0]    IBOV_TRISE_bit
0x0F96       [0]    OBF_TRISE_bit
0x0F96       [0]    IBF_TRISE_bit
0x0F96       [0]    TRISE1_bit
0x0F96       [0]    TRISE2_bit
0x0F96       [0]    PSPMODE_TRISE_bit
0x0F96       [0]    IBF_bit
0x0F9B       [0]    TUN2_bit
0x0F9B       [0]    INTSRC_bit
0x0F9B       [0]    TUN1_bit
0x0F9B       [1]    OSCTUNE
0x0F9B       [0]    PLLEN_bit
0x0F9B       [0]    TUN4_bit
0x0F9B       [0]    TUN3_bit
0x0F9B       [0]    TUN0_bit
0x0F9D       [0]    TMR2IE_bit
0x0F9D       [0]    TMR1IE_bit
0x0F9D       [1]    PIE1
0x0F9D       [0]    ADIE_bit
0x0F9D       [0]    PSPIE_bit
0x0F9D       [0]    RCIE_bit
0x0F9D       [0]    TXIE_bit
0x0F9D       [0]    SSPIE_bit
0x0F9D       [0]    CCP1IE_bit
0x0F9E       [0]    TMR2IF_bit
0x0F9E       [0]    TXIF_bit
0x0F9E       [1]    PIR1
0x0F9E       [0]    SSPIF_bit
0x0F9E       [0]    CCP1IF_bit
0x0F9E       [0]    TMR1IF_bit
0x0F9E       [0]    PSPIF_bit
0x0F9E       [0]    ADIF_bit
0x0F9E       [0]    RCIF_bit
0x0F9F       [0]    ADIP_bit
0x0F9F       [0]    RCIP_bit
0x0F9F       [0]    PSPIP_bit
0x0F9F       [1]    IPR1
0x0F9F       [0]    TXIP_bit
0x0F9F       [0]    CCP1IP_bit
0x0F9F       [0]    TMR2IP_bit
0x0F9F       [0]    TMR1IP_bit
0x0F9F       [0]    SSPIP_bit
0x0FA0       [0]    CMIE_bit
0x0FA0       [0]    TMR3IE_bit
0x0FA0       [0]    HLVDIE_bit
0x0FA0       [0]    BCLIE_bit
0x0FA0       [0]    EEIE_bit
0x0FA0       [0]    LVDIE_bit
0x0FA0       [0]    OSCFIE_bit
0x0FA0       [1]    PIE2
0x0FA0       [0]    CCP2IE_bit
0x0FA1       [0]    LVDIF_bit
0x0FA1       [0]    OSCFIF_bit
0x0FA1       [0]    TMR3IF_bit
0x0FA1       [0]    BCLIF_bit
0x0FA1       [0]    HLVDIF_bit
0x0FA1       [0]    CCP2IF_bit
0x0FA1       [0]    CMIF_bit
0x0FA1       [0]    EEIF_bit
0x0FA1       [1]    PIR2
0x0FA2       [0]    CMIP_bit
0x0FA2       [0]    LVDIP_bit
0x0FA2       [0]    OSCFIP_bit
0x0FA2       [0]    EEIP_bit
0x0FA2       [0]    TMR3IP_bit
0x0FA2       [0]    CCP2IP_bit
0x0FA2       [0]    BCLIP_bit
0x0FA2       [0]    HLVDIP_bit
0x0FA2       [1]    IPR2
0x0FA6       [0]    WR_EECON1_bit
0x0FA6       [0]    RD_EECON1_bit
0x0FA6       [1]    EECON1
0x0FA6       [0]    WREN_bit
0x0FA6       [0]    EEPGD_bit
0x0FA6       [0]    CFGS_bit
0x0FA6       [0]    WRERR_bit
0x0FA6       [0]    FREE_bit
0x0FA7       [1]    EECON2
0x0FA8       [1]    EEDATA
0x0FA9       [1]    EEADR
0x0FAB       [0]    SREN_bit
0x0FAB       [0]    RX9D_bit
0x0FAB       [0]    OERR_bit
0x0FAB       [0]    ADEN_bit
0x0FAB       [0]    FERR_bit
0x0FAB       [0]    ADDEN_bit
0x0FAB       [0]    CREN_bit
0x0FAB       [0]    SPEN_bit
0x0FAB       [1]    RCSTA
0x0FAB       [0]    RX9_bit
0x0FAC       [0]    TRMT_bit
0x0FAC       [0]    SYNC_bit
0x0FAC       [0]    TX9_bit
0x0FAC       [0]    TX9D_bit
0x0FAC       [0]    CSRC_bit
0x0FAC       [0]    BRGH_bit
0x0FAC       [0]    TXEN_bit
0x0FAC       [1]    TXSTA
0x0FAC       [0]    SENDB_bit
0x0FAD       [1]    TXREG
0x0FAE       [1]    RCREG
0x0FAF       [1]    SPBRG
0x0FB0       [1]    SPBRGH
0x0FB1       [1]    T3CON
0x0FB1       [0]    T3CKPS0_bit
0x0FB1       [0]    TMR3CS_bit
0x0FB1       [0]    TMR3ON_bit
0x0FB1       [0]    T3CCP1_bit
0x0FB1       [0]    T3SYNC_bit
0x0FB1       [0]    NOT_T3SYNC_bit
0x0FB1       [0]    T3CCP2_bit
0x0FB1       [0]    T3CKPS1_bit
0x0FB1       [0]    RD16_bit
0x0FB2       [1]    TMR3L
0x0FB3       [1]    TMR3H
0x0FB4       [1]    CMCON
0x0FB4       [0]    C1INV_bit
0x0FB4       [0]    CIS_bit
0x0FB4       [0]    C1OUT_bit
0x0FB4       [0]    C2INV_bit
0x0FB4       [0]    C2OUT_bit
0x0FB4       [0]    CM1_bit
0x0FB4       [0]    CM2_bit
0x0FB4       [0]    CM0_bit
0x0FB5       [0]    CVR2_bit
0x0FB5       [0]    CVRR_bit
0x0FB5       [0]    CVRSS_bit
0x0FB5       [0]    CVR1_bit
0x0FB5       [0]    CVR3_bit
0x0FB5       [0]    CVROE_bit
0x0FB5       [1]    CVRCON
0x0FB5       [0]    CVREN_bit
0x0FB5       [0]    CVR0_bit
0x0FB6       [1]    ECCP1AS
0x0FB6       [0]    ECCPAS1_bit
0x0FB6       [0]    ECCPASE_bit
0x0FB6       [0]    ECCPAS2_bit
0x0FB6       [0]    PSSBD1_bit
0x0FB6       [0]    PSSBD0_bit
0x0FB6       [0]    PSSAC0_bit
0x0FB6       [0]    ECCPAS0_bit
0x0FB6       [0]    PSSAC1_bit
0x0FB7       [0]    PDC4_bit
0x0FB7       [0]    PDC5_bit
0x0FB7       [0]    PDC0_bit
0x0FB7       [0]    PDC1_bit
0x0FB7       [0]    PDC2_bit
0x0FB7       [0]    PDC3_bit
0x0FB7       [0]    PRSEN_bit
0x0FB7       [1]    PWM1CON
0x0FB7       [0]    PDC6_bit
0x0FB8       [0]    SCKP_bit
0x0FB8       [0]    WUE_bit
0x0FB8       [0]    ABDEN_bit
0x0FB8       [0]    RCIDL_bit
0x0FB8       [0]    ABDOVF_bit
0x0FB8       [1]    BAUDCON
0x0FB8       [0]    TXCKP_bit
0x0FB8       [0]    RCMT_bit
0x0FB8       [0]    RXDTP_bit
0x0FB8       [1]    BAUDCTL
0x0FB8       [0]    BRG16_bit
0x0FBA       [0]    CCP2M3_bit
0x0FBA       [1]    CCP2CON
0x0FBA       [0]    CCP2M2_bit
0x0FBA       [0]    CCP2M1_bit
0x0FBA       [0]    CCP2X_bit
0x0FBA       [0]    CCP2Y_bit
0x0FBA       [0]    DC2B0_bit
0x0FBA       [0]    DC2B1_bit
0x0FBA       [0]    CCP2M0_bit
0x0FBB       [1]    CCPR2L
0x0FBB       [2]    CCPR2
0x0FBC       [1]    CCPR2H
0x0FBD       [0]    P1M0_bit
0x0FBD       [0]    DC1B1_bit
0x0FBD       [0]    CCP1Y_bit
0x0FBD       [0]    P1M1_bit
0x0FBD       [0]    CCP1X_bit
0x0FBD       [1]    CCP1CON
0x0FBD       [0]    CCP1M0_bit
0x0FBD       [0]    CCP1M1_bit
0x0FBD       [0]    DC1B0_bit
0x0FBD       [0]    CCP1M3_bit
0x0FBD       [0]    CCP1M2_bit
0x0FBE       [1]    CCPR1L
0x0FBE       [2]    CCPR1
0x0FBF       [1]    CCPR1H
0x0FC0       [1]    ADCON2
0x0FC0       [0]    ACQT1_bit
0x0FC0       [0]    ACQT2_bit
0x0FC0       [0]    ACQT0_bit
0x0FC0       [0]    ADCS2_bit
0x0FC0       [0]    ADCS0_bit
0x0FC0       [0]    ADFM_bit
0x0FC0       [0]    ADCS1_bit
0x0FC1       [0]    PCFG1_bit
0x0FC1       [0]    PCFG2_bit
0x0FC1       [0]    VCFG0_bit
0x0FC1       [0]    PCFG0_bit
0x0FC1       [0]    VCFG1_bit
0x0FC1       [0]    PCFG3_bit
0x0FC1       [1]    ADCON1
0x0FC2       [1]    ADCON0
0x0FC2       [0]    DONE_bit
0x0FC2       [0]    CHS3_bit
0x0FC2       [0]    GO_DONE_bit
0x0FC2       [0]    NOT_DONE_bit
0x0FC2       [0]    CHS2_bit
0x0FC2       [0]    GO_bit
0x0FC2       [0]    ADON_bit
0x0FC2       [0]    CHS0_bit
0x0FC2       [0]    CHS1_bit
0x0FC3       [1]    ADRESL
0x0FC3       [2]    ADRES
0x0FC4       [1]    ADRESH
0x0FC5       [0]    PEN_bit
0x0FC5       [0]    ACKEN_bit
0x0FC5       [1]    SSPCON2
0x0FC5       [0]    RCEN_bit
0x0FC5       [0]    SEN_bit
0x0FC5       [0]    ACKSTAT_bit
0x0FC5       [0]    ACKDT_bit
0x0FC5       [0]    GCEN_bit
0x0FC5       [0]    RSEN_bit
0x0FC6       [0]    SSPOV_bit
0x0FC6       [1]    SSPCON1
0x0FC6       [0]    WCOL_bit
0x0FC6       [0]    SSPM2_bit
0x0FC6       [0]    SSPM1_bit
0x0FC6       [0]    SSPM0_bit
0x0FC6       [0]    CKP_bit
0x0FC6       [0]    SSPEN_bit
0x0FC6       [0]    SSPM3_bit
0x0FC7       [0]    D_A_bit
0x0FC7       [0]    R_W_bit
0x0FC7       [0]    NOT_WRITE_bit
0x0FC7       [1]    SSPSTAT
0x0FC7       [0]    NOT_ADDRESS_bit
0x0FC7       [0]    NOT_A_bit
0x0FC7       [0]    UA_bit
0x0FC7       [0]    BF_bit
0x0FC7       [0]    R_bit
0x0FC7       [0]    S_bit
0x0FC7       [0]    P_bit
0x0FC7       [0]    CKE_bit
0x0FC7       [0]    SMP_bit
0x0FC7       [0]    NOT_W_bit
0x0FC7       [0]    D_bit
0x0FC8       [1]    SSPADD
0x0FC9       [1]    SSPBUF
0x0FCA       [1]    T2CON
0x0FCA       [0]    T2OUTPS3_bit
0x0FCA       [0]    T2OUTPS2_bit
0x0FCA       [0]    TMR2ON_bit
0x0FCA       [0]    T2CKPS1_bit
0x0FCA       [0]    T2CKPS0_bit
0x0FCA       [0]    T2OUTPS0_bit
0x0FCA       [0]    T2OUTPS1_bit
0x0FCB       [1]    PR2
0x0FCC       [1]    TMR2
0x0FCD       [0]    T1CKPS1_bit
0x0FCD       [0]    T1CKPS0_bit
0x0FCD       [0]    T1RUN_bit
0x0FCD       [0]    NOT_T1SYNC_bit
0x0FCD       [0]    RD16_T1CON_bit
0x0FCD       [0]    TMR1CS_bit
0x0FCD       [0]    TMR1ON_bit
0x0FCD       [0]    T1SYNC_bit
0x0FCD       [1]    T1CON
0x0FCD       [0]    T1OSCEN_bit
0x0FCE       [1]    TMR1L
0x0FCF       [1]    TMR1H
0x0FD0       [0]    TO__bit
0x0FD0       [0]    RI_bit
0x0FD0       [0]    SBOREN_bit
0x0FD0       [0]    PD_bit
0x0FD0       [1]    RCON
0x0FD0       [0]    BOR_bit
0x0FD0       [0]    POR_bit
0x0FD0       [0]    IPEN_bit
0x0FD0       [0]    NOT_TO_bit
0x0FD0       [0]    NOT_RI_bit
0x0FD0       [0]    NOT_PD_bit
0x0FD0       [0]    NOT_BOR_bit
0x0FD0       [0]    NOT_POR_bit
0x0FD1       [1]    WDTCON
0x0FD1       [0]    SWDTE_bit
0x0FD1       [0]    SWDTEN_bit
0x0FD2       [0]    IVRST_bit
0x0FD2       [0]    VDIRMAG_bit
0x0FD2       [0]    HLVDL3_bit
0x0FD2       [0]    HLVDEN_bit
0x0FD2       [1]    HLVDCON
0x0FD2       [0]    LVDL1_bit
0x0FD2       [0]    LVDL0_bit
0x0FD2       [0]    LVDL2_bit
0x0FD2       [1]    LVDCON
0x0FD2       [0]    HLVDL2_bit
0x0FD2       [0]    LVV0_bit
0x0FD2       [0]    LVV1_bit
0x0FD2       [0]    IRVST_bit
0x0FD2       [0]    LVDL3_bit
0x0FD2       [0]    LVDEN_bit
0x0FD2       [0]    LVV2_bit
0x0FD2       [0]    BGST_bit
0x0FD2       [0]    HLVDL0_bit
0x0FD2       [0]    HLVDL1_bit
0x0FD2       [0]    LVV3_bit
0x0FD3       [0]    FLTS_bit
0x0FD3       [0]    SCS0_bit
0x0FD3       [0]    IRCF2_bit
0x0FD3       [0]    IDLEN_bit
0x0FD3       [0]    IRCF0_bit
0x0FD3       [0]    IRCF1_bit
0x0FD3       [1]    OSCCON
0x0FD3       [0]    SCS1_bit
0x0FD3       [0]    IOFS_bit
0x0FD3       [0]    OSTS_bit
0x0FD5       [0]    T0PS0_bit
0x0FD5       [0]    T0PS1_bit
0x0FD5       [0]    T08BIT_bit
0x0FD5       [0]    TMR0ON_bit
0x0FD5       [1]    T0CON
0x0FD5       [0]    T0CS_bit
0x0FD5       [0]    T0PS2_bit
0x0FD5       [0]    PSA_bit
0x0FD5       [0]    T0SE_bit
0x0FD6       [1]    TMR0L
0x0FD7       [1]    TMR0H
0x0FD8       [0]    C_bit
0x0FD8       [1]    STATUS
0x0FD8       [0]    DC_bit
0x0FD8       [0]    OV_bit
0x0FD8       [0]    Z_bit
0x0FD8       [0]    N_bit
0x0FD9       [1]    FSR2L
0x0FD9       [2]    FSR2PTR
0x0FD9       [2]    FSR2
0x0FDA       [1]    FSR2H
0x0FDB       [1]    PLUSW2
0x0FDC       [1]    PREINC2
0x0FDD       [1]    POSTDEC2
0x0FDE       [1]    POSTINC2
0x0FDF       [1]    INDF2
0x0FE0       [1]    BSR
0x0FE1       [2]    FSR1
0x0FE1       [2]    FSR1PTR
0x0FE1       [1]    FSR1L
0x0FE2       [1]    FSR1H
0x0FE3       [1]    PLUSW1
0x0FE4       [1]    PREINC1
0x0FE5       [1]    POSTDEC1
0x0FE6       [1]    POSTINC1
0x0FE7       [1]    INDF1
0x0FE8       [1]    WREG
0x0FE9       [2]    FSR0
0x0FE9       [2]    FSR0PTR
0x0FE9       [1]    FSR0L
0x0FEA       [1]    FSR0H
0x0FEB       [1]    PLUSW0
0x0FEC       [1]    PREINC0
0x0FED       [1]    POSTDEC0
0x0FEE       [1]    POSTINC0
0x0FEF       [1]    INDF0
0x0FF0       [0]    INT1IP_bit
0x0FF0       [0]    INT2IP_bit
0x0FF0       [1]    INTCON3
0x0FF0       [0]    INT2IE_bit
0x0FF0       [0]    INT1E_bit
0x0FF0       [0]    INT2E_bit
0x0FF0       [0]    INT1F_bit
0x0FF0       [0]    INT2F_bit
0x0FF0       [0]    INT1P_bit
0x0FF0       [0]    INT2IF_bit
0x0FF0       [0]    INT1IE_bit
0x0FF0       [0]    INT2P_bit
0x0FF0       [0]    INT1IF_bit
0x0FF1       [1]    INTCON2
0x0FF1       [0]    INTEDG1_bit
0x0FF1       [0]    INTEDG2_bit
0x0FF1       [0]    TMR0IP_bit
0x0FF1       [0]    RBIP_bit
0x0FF1       [0]    NOT_RBPU_bit
0x0FF1       [0]    RBPU_bit
0x0FF1       [0]    INTEDG0_bit
0x0FF2       [1]    INTCON
0x0FF2       [0]    T0IF_bit
0x0FF2       [0]    INT0IF_bit
0x0FF2       [0]    GIE_bit
0x0FF2       [0]    INT0IE_bit
0x0FF2       [0]    GIEH_bit
0x0FF2       [0]    GIEL_bit
0x0FF2       [0]    T0IE_bit
0x0FF2       [0]    TMR0IF_bit
0x0FF2       [0]    INT0F_bit
0x0FF2       [0]    RBIF_bit
0x0FF2       [0]    RBIE_bit
0x0FF2       [0]    PEIE_bit
0x0FF2       [0]    TMR0IE_bit
0x0FF2       [0]    INT0E_bit
0x0FF3       [2]    PROD
0x0FF3       [1]    PRODL
0x0FF4       [1]    PRODH
0x0FF5       [1]    TABLAT
0x0FF6       [3]    TBLPTR
0x0FF6       [1]    TBLPTRL
0x0FF7       [1]    TBLPTRH
0x0FF8       [0]    TBLPTRU1_bit
0x0FF8       [0]    TBLPTRU0_bit
0x0FF8       [1]    TBLPTRU
0x0FF8       [0]    ACSS_bit
0x0FF8       [0]    TBLPTRU4_bit
0x0FF8       [0]    TBLPTRU3_bit
0x0FF8       [0]    TBLPTRU2_bit
0x0FF9       [1]    PC
0x0FF9       [1]    PCL
0x0FFA       [1]    PCLATH
0x0FFB       [0]    PCU1_bit
0x0FFB       [0]    PCU3_bit
0x0FFB       [0]    PCU2_bit
0x0FFB       [1]    PCLATU
0x0FFB       [0]    PCU4_bit
0x0FFB       [0]    PCU0_bit
0x0FFC       [0]    SP1_bit
0x0FFC       [0]    SP0_bit
0x0FFC       [1]    STKPTR
0x0FFC       [0]    STKUNF_bit
0x0FFC       [0]    STKFUL_bit
0x0FFC       [0]    STKOVF_bit
0x0FFC       [0]    SP2_bit
0x0FFC       [0]    SP3_bit
0x0FFC       [0]    SP4_bit
0x0FFD       [1]    TOSL
0x0FFE       [1]    TOSH
0x0FFF       [1]    TOSU
//** Label List: ** 
//----------------------------------------------
  L_main0
  L_main1
  L_main2
  L_main3
  L_main4
  L_main5
  L_main6
  L_main7
  L_leBotao8
  L_leBotao9
  L_leBotao10
  L_leBotao11
  L_leBotao12
  L_leBotao13
  L_leBotao14
  L_leBotao15
  L_leBotao16
  L_leBotao17
  L_leBotao18
  L_leBotao19
  L_leBotao20
  L_leBotao21
  L_leBotao22
  L_leBotao23
  L_leBotao24
  L_leBotao25
  L_leBotao26
  L_leBotao27
  L_leBotao28
  L_leBotao29
  L_leBotao30
  L_leBotao31
  L_leBotao32
  L_leBotao33
  L_leBotao34
  L_leBotao35
  L_leBotao36
  L_leBotao37
  L_leBotao38
  L_leBotao39
  L_leBotao40
  L_leBotao41
  L_leBotao42
  L_leBotao43
  L_leBotao44
  L_leBotao45
  L_leBotao46
  L_leBotao47
  L_leBotao48
  L_leBotao49
  L_leBotao50
  L_leBotao51
  L_leBotao52
  L_leBotao53
  L_leBotao54
  L_leBotao55
  L_leBotao56
  L_leBotao57
  L_leBotao58
  L_leBotao59
  L_leBotao60
  L_leBotao61
  L_leBotao62
  L_leBotao63
  L_leBotao64
  L_leBotao65
  L_leBotao66
  L_leBotao67
  L_leBotao68
  L_leBotao69
  L_leBotao70
  L_leBotao71
  L_leBotao72
  L_leBotao73
  L_leBotao74
  L_leBotao75
  L_leBotao76
  L_leBotao77
  L_leBotao78
  L_leBotao79
  L_leBotao80
  L_leBotao81
  L_leBotao82
  L_leBotao83
  L_leBotao84
  L_leBotao85
  L_leBotao86
  L_leBotao87
  L_leBotao88
  L_leBotao89
  L_leBotao90
  L_leBotao91
  L_leBotao92
  L_leBotao93
  L_leBotao94
  L_leBotao95
  L_leBotao96
  L_leBotao97
  L_leBotao98
  L_leBotao99
  L_leBotao100
  L_leBotao101
  L_leBotao102
  L_leBotao103
  L_leBotao104
  L_leBotao105
  L_leBotao106
  L_leBotao107
  L_leBotao108
  L_leBotao109
  L_leBotao110
  L_leBotao111
  L__leBotao112
  L__leBotao113
  L__leBotao114
  L__leBotao115
  L__leBotao116
  L__leBotao117
  L__leBotao118
  L__leBotao119
  L__leBotao120
  L__leBotao121
  L__leBotao122
  L__leBotao123
  L__leBotao124
  L__leBotao125
  L__leBotao126
  L__leBotao127
  L__leBotao128
  L__leBotao129
  L__leBotao130
  L__leBotao131
  L__leBotao132
  L__leBotao133
  L__leBotao134
  L__leBotao135
  L__leBotao136
  L__leBotao137
  L__leBotao138
  L__leBotao139
  L__leBotao140
  L__leBotao141
  _main
  _leBotao
  L__leBotao142
  L__leBotao143
  L__leBotao144
  L__leBotao145
  L__leBotao146
  L__leBotao147
  L__leBotao148
  L__leBotao149
  L__leBotao150
  L__leBotao151
  L__leBotao152
  L__leBotao153
  L__leBotao154
  L__leBotao155
  L__leBotao156
  L__leBotao157
  L__leBotao158
  L__leBotao159
  L__leBotao160
  L__leBotao161
  L__leBotao162
  L__leBotao163
  L__leBotao164
  L__leBotao165
  L__leBotao166
  L__leBotao167
  L__leBotao168
  L__leBotao169
  L__leBotao170
  L__leBotao171
  L__leBotao172
  L__leBotao173
  L__leBotao174
  L__leBotao175
  L__leBotao176
  L__leBotao177
  L__leBotao178
  L__leBotao179
  L__leBotao180
  L__leBotao181
  L__leBotao182
  L__leBotao183
  L__leBotao184
  L__leBotao185
  L__leBotao186
  L_ADC_Get_Sample0
  L_ADC_Get_Sample1
  L_ADC_Read2
  L_ADC_Read3
  _ADC_Init
  _ADC_Get_Sample
  _ADC_Read
  L_Delay_10us0
  L_Delay_22us1
  L_Delay_50us2
  L_Delay_80us3
  L_Delay_500us4
  L_Delay_5500us5
  L_Delay_1ms6
  L_Delay_5ms7
  L_Delay_8ms8
  L_Delay_100ms9
  L_Delay_10ms10
  L_Delay_1sec11
  L____Boot_Delay4k12
  L____Boot_Delay8k13
  L____Boot_Delay12k14
  L____Boot_Delay16k15
  L____Boot_Delay24k16
  L____Boot_Delay32k17
  L____Boot_Delay48k18
  L____Boot_Delay64k19
  L____Boot_Delay128k20
  L_Delay_Cyc21
  L_Delay_Cyc22
  L_VDelay_ms23
  L_VDelay_ms24
  L_VDelay_ms25
  L_VDelay_Advanced_ms26
  L_VDelay_Advanced_ms27
  L_VDelay_Advanced_ms28
  _Get_Fosc_kHz
  _Delay_1us
  _Delay_10us
  _Delay_22us
  _Delay_50us
  _Delay_80us
  _Delay_500us
  _Delay_5500us
  _Delay_1ms
  _Delay_5ms
  _Delay_8ms
  _Delay_100ms
  _Delay_10ms
  _Delay_1sec
  ____Boot_Delay4k
  ____Boot_Delay8k
  ____Boot_Delay12k
  ____Boot_Delay16k
  ____Boot_Delay24k
  ____Boot_Delay32k
  ____Boot_Delay48k
  ____Boot_Delay64k
  ____Boot_Delay128k
  _Delay_Cyc
  _VDelay_ms
  L__VDelay_ms29
  L__VDelay_ms30
  L__VDelay_ms31
  _VDelay_Advanced_ms
  L__VDelay_Advanced_ms32
  L__VDelay_Advanced_ms33
  L__VDelay_Advanced_ms34
  _CC2D_Loop1
  _CC2DL_Loop1
  L_longjmp2
  ___CC2D
  ___CC2DW
  _____DoIFC
  _Swap
  _setjmp
  _longjmp
